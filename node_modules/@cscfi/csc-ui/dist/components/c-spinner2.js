import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const cSpinnerCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{--_c-spinner-color:var(--c-spinner-color, var(--c-color));--_c-spinner-size:var(--c-size);--_c-spinner-width:var(--c-width);display:block;height:var(--_c-spinner-size);width:var(--_c-spinner-size)}:host(.c-spinner) svg{fill:var(--_c-spinner-color);height:var(--_c-spinner-size);overflow:visible;width:var(--_c-spinner-size)}:host(.c-spinner) svg circle{animation:spinner 2.5s linear infinite;fill:transparent;stroke-dasharray:calc(3.14 * var(--_c-spinner-size));stroke-linecap:round;stroke-width:var(--_c-spinner-width);stroke:var(--_c-spinner-color);transform-origin:calc(0.5px * var(--_c-spinner-size)) calc(0.5px * var(--_c-spinner-size)) 0}@keyframes spinner{0%{transform:rotate(0deg);stroke-dashoffset:calc(0.66 * var(--_c-spinner-size))}50%{transform:rotate(720deg);stroke-dashoffset:calc(3.14 * var(--_c-spinner-size))}100%{transform:rotate(1080deg);stroke-dashoffset:calc(0.66 * var(--_c-spinner-size))}}";

const CSpinner = proxyCustomElement(class CSpinner extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.color = 'var(--c-primary-600)';
    this.size = 24;
    this.width = 2;
  }
  render() {
    const iconParams = {
      cx: this.size / 2,
      cy: this.size / 2,
      r: this.size / 2 - 2,
    };
    const style = {
      '--c-size': `${this.size}px`,
      '--c-width': `${this.width}px`,
      '--c-color': this.color,
    };
    return (h(Host, { class: "c-spinner", style: style }, h("svg", null, h("circle", Object.assign({}, iconParams)))));
  }
  static get style() { return cSpinnerCss; }
}, [1, "c-spinner", {
    "color": [1],
    "size": [2],
    "width": [2]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-spinner"];
  components.forEach(tagName => { switch (tagName) {
    case "c-spinner":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CSpinner);
      }
      break;
  } });
}

export { CSpinner as C, defineCustomElement as d };

//# sourceMappingURL=c-spinner2.js.map