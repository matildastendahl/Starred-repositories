import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const cLoginButtonsCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{display:grid;grid-gap:clamp(1rem, 2vw, 1.5rem);grid-template-columns:repeat(auto-fill, minmax(12rem, 1fr))}";

const CLoginButtons$1 = proxyCustomElement(class CLoginButtons extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
  static get style() { return cLoginButtonsCss; }
}, [1, "c-login-buttons"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-login-buttons"];
  components.forEach(tagName => { switch (tagName) {
    case "c-login-buttons":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CLoginButtons$1);
      }
      break;
  } });
}

const CLoginButtons = CLoginButtons$1;
const defineCustomElement = defineCustomElement$1;

export { CLoginButtons, defineCustomElement };

//# sourceMappingURL=c-login-buttons.js.map