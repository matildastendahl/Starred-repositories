import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const cCardTitleCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{--_c-card-title-color:var(--c-card-title-color, var(--c-text-system));--_c-card-title-underline-color:var(--c-card-title-underline-color, var(--c-primary-600));color:var(--_c-card-title-color);padding-inline:var(--_c-card-gap, 24px);display:block;font-family:var(--c-font-family);font-size:1rem;font-weight:500;text-transform:uppercase}.c-card-title__underline{background-color:var(--_c-card-title-underline-color);border-radius:4px;height:4px;margin-top:10px;width:44px}";

const CCardTitle$1 = proxyCustomElement(class CCardTitle extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h("header", { class: "c-card-title" }, h("slot", null), h("div", { class: "c-card-title__underline" })));
  }
  static get style() { return cCardTitleCss; }
}, [1, "c-card-title"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-card-title"];
  components.forEach(tagName => { switch (tagName) {
    case "c-card-title":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CCardTitle$1);
      }
      break;
  } });
}

const CCardTitle = CCardTitle$1;
const defineCustomElement = defineCustomElement$1;

export { CCardTitle, defineCustomElement };

//# sourceMappingURL=c-card-title.js.map