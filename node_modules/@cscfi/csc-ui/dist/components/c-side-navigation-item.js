import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { m as mdiChevronRight } from './mdi.js';
import { d as defineCustomElement$4 } from './c-icon2.js';
import { d as defineCustomElement$3 } from './c-loader2.js';
import { d as defineCustomElement$2 } from './c-spinner2.js';

const cSideNavigationItemCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host(c-side-navigation-item){--_c-side-navigation-item-background-color-active:var(--c-side-navigation-item-background-color-active, var(--c-primary-200));--_c-side-navigation-item-background-color-hover:var(--c-side-navigation-item-background-color-hover, var(--c-primary-500));--_c-side-navigation-item-background-color:var(--c-side-navigation-item-background-color, var(--c-transparent));--_c-side-navigation-item-outline-color:var(--c-side-navigation-item-outline-color, var(--c-white));--_c-side-navigation-item-text-color-active:var(--c-side-navigation-item-text-color-active, var(--c-primary-600));--_c-side-navigation-item-text-color:var(--c-side-navigation-item-text-color, var(--c-white));--_c-side-navigation-item-sub-item-background-color-active:var(--c-side-navigation-item-sub-item-background-color-active, var(--c-white));--_c-side-navigation-item-sub-item-background-color-hover:var(--c-side-navigation-item-sub-item-background-color-hover, var(--c-primary-100));--_c-side-navigation-item-sub-item-background-color:var(--c-side-navigation-item-sub-item-background-color, var(--c-white));--_c-side-navigation-item-sub-item-outline-color:var(--c-side-navigation-item-sub-item-outline-color, var(--c-primary-600));--_c-side-navigation-item-sub-item-text-color-active:var(--c-side-navigation-item-sub-item-text-color-active, var(--c-primary-600));--_c-side-navigation-item-sub-item-text-color:var(--c-side-navigation-item-sub-item-text-color, var(--c-primary-600))}:host(.c-side-navigation-item){align-items:center;backface-visibility:hidden;border-radius:4px 0 0 4px;background-color:var(--_c-side-navigation-item-background-color);color:var(--_c-side-navigation-item-text-color);cursor:pointer;display:grid;grid-template-columns:1fr;font-weight:400;overflow:hidden;position:relative;transform:translate3d(0, 0, 0);user-select:none}:host(.c-side-navigation-item:hover){background-color:var(--_c-side-navigation-item-background-color-hover)}:host(.c-side-navigation-item:focus){outline:none}:host(.c-side-navigation-item:focus-visible){outline:2px var(--_c-side-navigation-item-outline-color) solid;outline-offset:2px}:host(.c-side-navigation-item.active){background-color:var(--_c-side-navigation-item-background-color-active);color:var(--_c-side-navigation-item-text-color-active)}:host(.c-side-navigation-item.active) .svg{fill:var(--_c-side-navigation-item-text-color-active);transform:rotate(90deg)}:host(.c-side-navigation-item.active) .c-side-navigation-item__header{color:var(--_c-side-navigation-item-text-color-active)}.c-side-navigation-item__header{align-items:center;color:var(--_c-side-navigation-item-text-color);display:grid;gap:8px;grid-template-columns:1fr;min-height:46px;padding:8px 12px}.c-side-navigation-item__header--expandable{grid-template-columns:auto 1fr}.c-side-navigation-item__slot{align-items:center;display:flex;gap:8px;line-height:normal;max-width:100%}:host(.c-side-navigation-item--parent.active){padding-bottom:4px}::slotted(span),::slotted(c-icon){font-size:20px}.styleMain{padding-left:16px}.sub-item{height:0;overflow-y:hidden;transition:all 500ms ease;width:100%}.subnavactive{height:max-content;width:100%}.svg{align-self:center;fill:var(--_c-side-navigation-item-text-color);transition:transform 0.3s ease}:host>div.active .svg{fill:var(--_c-side-navigation-item-text-color-active);transform:rotate(90deg)}.svg.hidden{opacity:0}.middle{display:flex;height:100%;align-items:center}:host([slot=sub-item]){--_c-side-navigation-item-text-color:var(--c-side-navigation-item-text-color, var(--_c-side-navigation-item-sub-item-text-color));--_c-side-navigation-item-background-color:var(--c-side-navigation-item-background-color, var(--_c-side-navigation-item-sub-item-background-color));--_c-side-navigation-item-background-color-hover:var(--c-side-navigation-item-background-color-hover, var(--_c-side-navigation-item-sub-item-background-color-hover));--_c-side-navigation-item-text-color-active:var(--c-side-navigation-item-text-color-active, var(--_c-side-navigation-item-sub-item-text-color-active));--_c-side-navigation-item-background-color-active:var(--c-side-navigation-item-background-color-active, var(--_c-side-navigation-item-sub-item-background-color-active));--_c-side-navigation-item-outline-color:var(--c-side-navigation-item-outline-color, var(--_c-side-navigation-item-sub-item-outline-color));border-radius:4px;margin:0 8px 4px}";

const CSideNavigationItem$1 = proxyCustomElement(class CSideNavigationItem extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.itemChange = createEvent(this, "itemChange", 7);
    this._isSubItem = false;
    this._slotHasContent = false;
    this.active = undefined;
    this.href = undefined;
    this.target = null;
    this.loading = false;
  }
  handleChange(event) {
    if (this._isSubItem) {
      event.stopPropagation();
      event.stopImmediatePropagation();
      event.preventDefault();
      this.active = !this.active;
    }
  }
  onActiveChange(active) {
    this._handleChildFocusableChange(active);
  }
  _handleChildFocusableChange(focusable) {
    if (!this._slotHasContent)
      return;
    Array.from(this.hostElement.querySelectorAll('[slot="sub-item"]')).forEach((child) => {
      child.ariaHidden = (!focusable).toString();
      child.focusable = focusable;
    });
  }
  _redirect(event) {
    if ((event instanceof KeyboardEvent && (event === null || event === void 0 ? void 0 : event.key) === 'Enter') ||
      !(event instanceof KeyboardEvent)) {
      if (this._isSubItem) {
        event.stopPropagation();
        event.stopImmediatePropagation();
        event.preventDefault();
      }
      this.itemChange.emit(event);
      if (!this._slotHasContent) {
        const sidenav = document.querySelector('c-side-navigation');
        sidenav.menuVisible = false;
      }
      if (this.href) {
        if (this.target) {
          window.open(this.href, this.target);
        }
        else {
          window.location.href = this.href;
        }
      }
    }
  }
  _assignSubItemSlots() {
    const subItems = this.hostElement.querySelectorAll('c-side-navigation-item');
    Array.from(subItems).forEach((item) => {
      item.setAttribute('slot', 'sub-item');
    });
  }
  componentWillLoad() {
    this._assignSubItemSlots();
    this._slotHasContent =
      !!this.hostElement.querySelector('[slot="sub-item"]');
    this._isSubItem = !!this.hostElement.getAttribute('slot');
    this._handleChildFocusableChange(this.active);
  }
  componentDidLoad() {
    for (const node of this.hostElement.childNodes) {
      if (node.nodeName === '#text') {
        this._ariaLabel = node.nodeValue.trim();
        break;
      }
    }
    this._handleChildClasses();
  }
  _handleChildClasses() {
    if (!this._isSubItem)
      return;
    Array.from(this.hostElement.children)
      .filter((child) => child.tagName === 'C-SUB-NAVIGATION-ITEM')
      .forEach((child) => {
      child.classList.add('c-sub-navigation-item--sub-level');
    });
  }
  render() {
    var _a, _b;
    const classes = {
      'c-side-navigation-item': true,
      'c-side-navigation-item--parent': this._slotHasContent,
      active: this.active,
    };
    const subNavigationClasses = {
      subnavactive: this.active,
      'sub-item': !this.active,
    };
    const a11y = {
      role: 'menuitem',
      tabindex: '0',
    };
    if (this._slotHasContent) {
      a11y['aria-expanded'] = (_a = (!!this.active)) === null || _a === void 0 ? void 0 : _a.toString();
    }
    else if (this.active) {
      a11y['aria-current'] = 'page';
    }
    return (h(Host, Object.assign({}, a11y, { class: classes, onClick: (e) => this._redirect(e), onKeyDown: (e) => this._redirect(e) }), h("div", { class: {
        'c-side-navigation-item__header': true,
        'c-side-navigation-item__header--expandable': this._slotHasContent,
      } }, this._slotHasContent && (h("c-icon", { class: "svg", path: mdiChevronRight })), h("div", { class: "c-side-navigation-item__slot" }, h("slot", null))), this._slotHasContent && (h("nav", { role: "menubar", "aria-label": this._ariaLabel, "aria-expanded": (_b = (!!this.active)) === null || _b === void 0 ? void 0 : _b.toString(), class: subNavigationClasses }, h("slot", { name: "sub-item" }))), h("c-loader", { size: 32, hide: !this.loading, style: { pointerEvents: 'none' } })));
  }
  get hostElement() { return this; }
  static get watchers() { return {
    "active": ["onActiveChange"]
  }; }
  static get style() { return cSideNavigationItemCss; }
}, [1, "c-side-navigation-item", {
    "active": [4],
    "href": [1],
    "target": [1],
    "loading": [4]
  }, [[0, "itemChange", "handleChange"]], {
    "active": ["onActiveChange"]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-side-navigation-item", "c-icon", "c-loader", "c-spinner"];
  components.forEach(tagName => { switch (tagName) {
    case "c-side-navigation-item":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CSideNavigationItem$1);
      }
      break;
    case "c-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$4();
      }
      break;
    case "c-loader":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "c-spinner":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}

const CSideNavigationItem = CSideNavigationItem$1;
const defineCustomElement = defineCustomElement$1;

export { CSideNavigationItem, defineCustomElement };

//# sourceMappingURL=c-side-navigation-item.js.map