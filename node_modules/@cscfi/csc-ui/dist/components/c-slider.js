import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';

const cSliderCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host(c-slider){--_c-slider-background-color-active-disabled:var(--c-slider-background-color-active-disabled, var(--c-tertiary-400));--_c-slider-background-color-active:var(--c-slider-background-color-active, var(--c-primary-500));--_c-slider-background-color-disabled:var(--c-slider-background-color-disabled, rgba(var(--c-tertiary-rgb), 0.2));--_c-slider-background-color:var(--c-slider-background-color, rgba(var(--c-tertiary-rgb), 0.2));--_c-slider-thumb-background-color-disabled:var(--c-slider-thumb-background-color-disabled, var(--c-tertiary-500));--_c-slider-thumb-background-color-hover:var(--c-slider-thumb-background-color-hover, rgba(var(--c-primary-rgb), 0.2));--_c-slider-thumb-background-color:var(--c-slider-thumb-background-color, var(--c-primary-600));--_c-slider-tick-color-active:var(--c-slider-tick-color-active, var(--c-white));--_c-slider-tick-color:var(--c-slider-tick-color, var(--c-tertiary-500));--_c-slider-tooltip-background-color:var(--c-slider-tooltip-background-color, var(--c-primary-900));--_c-slider-tooltip-text-color:var(--c-slider-tooltip-text-color, var(--c-white));--_c-slider-outline:none;--_c-slider-thumb-scale:1;--_c-slider-thumb-shadow-size:8px;--_c-slider-tooltip-opacity:0;--_c-slider-tooltip-y:-4px;display:block;isolation:isolate;padding-block:8px;}:host(c-slider) .c-slider__label{display:block;margin-bottom:16px;margin-top:-8px}:host(c-slider) .c-slider__label span.required{color:var(--c-error-600)}:host(c-slider) .c-slider__wrapper{padding-inline:10px;position:relative;}@-moz-document url-prefix(){:host(c-slider) .c-slider__wrapper{padding-inline:0}}:host(c-slider) input[type=range]{align-items:center;appearance:none;background-color:transparent;display:flex;height:8px;margin:0;position:relative;width:100%}:host(c-slider) input[type=range]:focus-visible{--_c-slider-outline:2px var(--_c-slider-thumb-background-color) solid;outline:none}:host(c-slider) input[type=range]::-webkit-slider-runnable-track{width:calc(100% - 20px);margin:0 -20px}:host(c-slider) input[type=range]:active{--_c-slider-thumb-scale:1.33;--_c-slider-thumb-shadow-size:0}:host(c-slider) input[type=range]::-webkit-slider-container{display:flex;padding:0 10px}:host(c-slider) input[type=range]::-webkit-slider-thumb{appearance:none;background-color:var(--_c-slider-thumb-background-color);border-radius:100%;cursor:pointer;height:24px;outline-offset:4px;outline:var(--_c-slider-outline);position:relative;transform-origin:center;transform:scale(var(--_c-slider-thumb-scale));transition:box-shadow 0.3s cubic-bezier(0.075, 0.82, 0.165, 1), transform 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);width:24px;z-index:1}:host(c-slider) input[type=range]::-webkit-slider-thumb:hover{box-shadow:0 0 0 var(--_c-slider-thumb-shadow-size) var(--_c-slider-thumb-background-color-hover)}:host(c-slider) input[type=range][disabled]{--_c-slider-background-color:var(--_c-slider-background-color-disabled);--_c-slider-background-color-active:var(--_c-slider-background-color-active-disabled);--_c-slider-thumb-background-color:var(--_c-slider-thumb-background-color-disabled);pointer-events:none}@-moz-document url-prefix(){:host(c-slider) input[type=range]::-moz-range-thumb{appearance:none;background-color:var(--_c-slider-thumb-background-color);border-radius:100%;border:0;cursor:pointer;height:24px;outline-offset:2px;outline:var(--_c-slider-outline);position:relative;transform-origin:center;transform:scale(var(--_c-slider-thumb-scale));transition:box-shadow 0.3s cubic-bezier(0.075, 0.82, 0.165, 1), transform 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);width:24px;z-index:1}:host(c-slider) input[type=range]::-moz-range-thumb:hover{box-shadow:0 0 0 var(--_c-slider-thumb-shadow-size) var(--_c-slider-thumb-background-color-hover)}}:host(c-slider) .c-slider__tooltip-wrapper{height:0;margin-inline:2px;position:relative;}@-moz-document url-prefix(){:host(c-slider) .c-slider__tooltip-wrapper{margin-inline:12px}}:host(c-slider) .c-slider__tooltip-wrapper span{align-items:center;border-radius:50%;box-sizing:border-box;display:inline-flex;height:24px;justify-content:center;left:calc(1% * var(--_c-slider-position));opacity:var(--_c-slider-tooltip-opacity);pointer-events:none;position:absolute;transform:translate(-50%, var(--_c-slider-tooltip-y));transition:opacity 0.3s cubic-bezier(0.075, 0.82, 0.165, 1), transform 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);width:24px}:host(c-slider) .c-slider__tooltip-wrapper span::before{align-items:center;background:var(--_c-slider-tooltip-background-color);border-radius:4px;bottom:100%;color:var(--_c-slider-tooltip-text-color);content:attr(data-tooltip);display:inline-flex;flex-wrap:nowrap;height:30px;padding:6px;position:absolute;top:-42px;white-space:nowrap}:host(c-slider) .c-slider__tooltip-wrapper span::after{border-left:6px solid transparent;border-right:6px solid transparent;border-top:6px solid var(--_c-slider-tooltip-background-color);content:\"\";height:0;left:50%;margin:-42px 0 0 -6px;position:absolute;width:0}:host(c-slider) .c-slider__ticks{--c-slider-tick-color:var(--c-tertiary-400);align-items:center;background:linear-gradient(to right, var(--_c-slider-background-color-active) calc(1% * var(--_c-slider-position)), var(--_c-slider-background-color) calc(1% * var(--_c-slider-position)));border-radius:100vw;display:flex;height:8px;justify-content:space-between;margin:-8px auto 0;pointer-events:none;position:relative;width:calc(100% - 16px);z-index:-1;}@-moz-document url-prefix(){:host(c-slider) .c-slider__ticks{width:calc(100% - 20px)}}:host(c-slider) .c-slider__ticks--disabled{--_c-slider-background-color-active:var(--_c-slider-background-color-active-disabled)}:host(c-slider) .c-slider__ticks span{border-radius:50%;font-size:12px;height:4px;padding:0;position:relative;width:4px}:host(c-slider) .c-slider__ticks span.ticks{background-color:var(--_c-slider-tick-color)}:host(c-slider) .c-slider__ticks span.ticks.active{background-color:var(--_c-slider-tick-color-active)}:host(c-slider) .c-slider__ticks span.ticks:first-child,:host(c-slider) .c-slider__ticks span.ticks:last-child{background-color:transparent}:host(c-slider) .c-slider__ticks span.labels::after{content:attr(data-value);left:2px;position:absolute;top:16px;transform:translate(-50%)}:host(c-slider.c-slider--labels){padding-bottom:24px}:host(c-slider:focus-within),:host(c-slider:hover){--_c-slider-tooltip-opacity:1;--_c-slider-tooltip-y:-8px}";

const CSlider$1 = proxyCustomElement(class CSlider extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.changeValue = createEvent(this, "changeValue", 3);
    this.hostId = undefined;
    this.hostName = undefined;
    this.ariaLabel = undefined;
    this.max = '100';
    this.min = '0';
    this.step = '1';
    this.value = '50';
    this.unit = '%';
    this.ticks = false;
    this.labels = false;
    this.disableTooltip = false;
    this.label = undefined;
    this.disabled = false;
    this.segments = '10';
    this.trackPosition = undefined;
    this.tickPositions = [];
  }
  onSegmentChange() {
    this._calculateTickPositions();
  }
  onValueChange(value) {
    this._calculateTrackPosition();
    requestAnimationFrame(() => {
      this._inputElement.value = value.toString();
    });
  }
  _formatNumber(number, decimals = 0) {
    return new Intl.NumberFormat('fi-FI', {
      maximumFractionDigits: decimals,
      minimumFractionDigits: decimals,
    }).format(number);
  }
  _calculateTickPositions() {
    this.tickPositions = [...new Array(+this.segments + 1)].map((_, index) => {
      const fraction = +this.max / +this.segments;
      return (index * fraction).toString();
    });
  }
  _calculateTrackPosition() {
    this.trackPosition =
      ((+this.value - +this.min) / (+this.max - +this.min)) * 100;
  }
  _onInput(event) {
    const { value } = event.target;
    this.changeValue.emit(typeof this.value === 'number' ? +value : value);
    this._calculateTrackPosition();
  }
  _isActive(value) {
    return this.trackPosition >= (100 / +this.max) * value;
  }
  componentWillLoad() {
    CSlider._uniqueId += 1;
  }
  componentDidLoad() {
    this._calculateTrackPosition();
    this._calculateTickPositions();
    requestAnimationFrame(() => {
      this._inputElement.value = this.value.toString();
    });
  }
  render() {
    const classes = {
      'c-slider': true,
      'c-slider--labels': this.labels,
    };
    const styles = {
      '--_c-slider-position': `${this.trackPosition}`,
    };
    return (h(Host, { class: classes, style: styles }, !!this.label && (h("label", { class: "c-slider__label" }, !!this.label && this.label)), h("div", { class: "c-slider__wrapper" }, !this.disableTooltip && (h("div", { class: "c-slider__tooltip-wrapper", "aria-hidden": "true" }, h("span", { "data-tooltip": `${this._formatNumber(+this.value)}${this.unit}` }))), h("input", { ref: (el) => (this._inputElement = el), "aria-label": this.ariaLabel || this.label, "aria-valuenow": this.value, "aria-valuetext": `${this.value}${this.unit}`, "aria-valuemin": this.min, "aria-valuemax": this.max, type: "range", name: this.hostName, id: this.hostId || `c-slider__${CSlider._uniqueId}`, min: this.min, max: this.max, step: this.step, disabled: this.disabled, onInput: (event) => this._onInput(event) })), h("div", { class: {
        'c-slider__ticks': true,
        'c-slider__ticks--disabled': this.disabled,
      }, "aria-hidden": "true" }, this.tickPositions.map((position) => (h("span", { class: {
        active: this._isActive(Math.round(+position)),
        ticks: this.ticks,
        labels: this.labels,
      }, "data-value": this._formatNumber(Math.round(+position)) }))))));
  }
  static get watchers() { return {
    "segments": ["onSegmentChange"],
    "value": ["onValueChange"]
  }; }
  static get style() { return cSliderCss; }
}, [1, "c-slider", {
    "hostId": [1, "id"],
    "hostName": [1, "name"],
    "ariaLabel": [1, "aria-label"],
    "max": [1],
    "min": [1],
    "step": [1],
    "value": [8],
    "unit": [1],
    "ticks": [4],
    "labels": [4],
    "disableTooltip": [4, "disable-tooltip"],
    "label": [1],
    "disabled": [4],
    "segments": [1],
    "trackPosition": [32],
    "tickPositions": [32]
  }, undefined, {
    "segments": ["onSegmentChange"],
    "value": ["onValueChange"]
  }]);
CSlider$1._uniqueId = 0;
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-slider"];
  components.forEach(tagName => { switch (tagName) {
    case "c-slider":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CSlider$1);
      }
      break;
  } });
}

const CSlider = CSlider$1;
const defineCustomElement = defineCustomElement$1;

export { CSlider, defineCustomElement };

//# sourceMappingURL=c-slider.js.map