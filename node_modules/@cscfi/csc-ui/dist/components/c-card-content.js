import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const cCardContentCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{display:block;padding:0 var(--_c-card-gap, 24px)}.c-card-content{display:flex;flex-direction:column;gap:var(--_c-card-gap)}.c-card-content ::slotted(*){max-width:100%}";

const CCardContent$1 = proxyCustomElement(class CCardContent extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h("article", { class: "c-card-content" }, h("slot", null)));
  }
  static get style() { return cCardContentCss; }
}, [1, "c-card-content"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-card-content"];
  components.forEach(tagName => { switch (tagName) {
    case "c-card-content":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CCardContent$1);
      }
      break;
  } });
}

const CCardContent = CCardContent$1;
const defineCustomElement = defineCustomElement$1;

export { CCardContent, defineCustomElement };

//# sourceMappingURL=c-card-content.js.map