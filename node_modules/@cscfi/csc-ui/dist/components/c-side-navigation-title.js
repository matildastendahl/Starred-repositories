import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const cSideNavigationTitleCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{--_c-side-navigation-title-color:var(--c-side-navigation-title-color, var(--c-white));--_c-side-navigation-title-border-color:var(--c-side-navigation-title-border-color, var(--c-white));align-items:center;box-shadow:0 1px 0 0 var(--_c-side-navigation-title-border-color);color:var(--_c-side-navigation-title-color);display:flex;gap:8px;margin:1.25rem 0 1rem;padding:4px 0}";

const CSideNavigationTitle$1 = proxyCustomElement(class CSideNavigationTitle extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
  static get style() { return cSideNavigationTitleCss; }
}, [1, "c-side-navigation-title"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-side-navigation-title"];
  components.forEach(tagName => { switch (tagName) {
    case "c-side-navigation-title":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CSideNavigationTitle$1);
      }
      break;
  } });
}

const CSideNavigationTitle = CSideNavigationTitle$1;
const defineCustomElement = defineCustomElement$1;

export { CSideNavigationTitle, defineCustomElement };

//# sourceMappingURL=c-side-navigation-title.js.map