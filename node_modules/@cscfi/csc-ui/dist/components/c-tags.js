import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const cTagsCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{place-items:center start;display:flex;flex-wrap:wrap;gap:4px}";

const CTags$1 = proxyCustomElement(class CTags extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.size = 'default';
  }
  componentDidLoad() {
    if (this.size === 'small') {
      const tags = this.el.querySelectorAll('c-tag');
      [...tags].forEach((tag) => {
        tag.size = 'small';
      });
    }
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
  get el() { return this; }
  static get style() { return cTagsCss; }
}, [1, "c-tags", {
    "size": [1]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-tags"];
  components.forEach(tagName => { switch (tagName) {
    case "c-tags":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CTags$1);
      }
      break;
  } });
}

const CTags = CTags$1;
const defineCustomElement = defineCustomElement$1;

export { CTags, defineCustomElement };

//# sourceMappingURL=c-tags.js.map