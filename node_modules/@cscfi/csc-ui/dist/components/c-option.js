import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const cOptionCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{display:block;width:100%;padding:8px 0}";

const COption$1 = proxyCustomElement(class COption extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.selected = false;
    this.disabled = false;
    this.name = undefined;
    this.value = undefined;
  }
  render() {
    return (h(Host, { tabindex: "-1" }, h("slot", null)));
  }
  static get style() { return cOptionCss; }
}, [1, "c-option", {
    "selected": [4],
    "disabled": [4],
    "name": [1],
    "value": [8]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-option"];
  components.forEach(tagName => { switch (tagName) {
    case "c-option":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, COption$1);
      }
      break;
  } });
}

const COption = COption$1;
const defineCustomElement = defineCustomElement$1;

export { COption, defineCustomElement };

//# sourceMappingURL=c-option.js.map