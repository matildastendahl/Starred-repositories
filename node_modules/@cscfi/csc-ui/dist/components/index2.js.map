{"file":"index2.js","mappings":"IAyGY;AAAZ,WAAY,UAAU;EACpB,iCAAmB,CAAA;EACnB,6BAAe,CAAA;EACf,iCAAmB,CAAA;EACnB,2BAAa,CAAA;AACf,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;IAEW;AAAZ,WAAY,cAAc;EACxB,uCAAqB,CAAA;EACrB,iCAAe,CAAA;AACjB,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;IAgBW;AAAZ,WAAY,UAAU;EACpB,iCAAmB,CAAA;EACnB,6BAAe,CAAA;EACf,iCAAmB,CAAA;EACnB,2BAAa,CAAA;AACf,CAAC,EALW,UAAU,KAAV,UAAU;;;;","names":[],"sources":["src/types/index.ts"],"sourcesContent":["export type CPaginationOptions = {\n  itemCount: number;\n  currentPage?: number;\n  totalVisible?: number;\n  itemsPerPage?: number;\n  startFrom?: number;\n  endTo?: number;\n  locale?: string;\n  textOverrides?: CPaginationTextOverrides;\n  pageSizes?: number[];\n};\n\nexport type CPaginationTextOverrides = {\n  itemsPerPageText?: string;\n  nextPage?: string;\n  prevPage?: string;\n  pageText?: ({ start, end, count }) => string;\n  pageOfText?: ({ pageNumber, count }) => string;\n};\n\nexport type CSelectItem = {\n  name: string;\n  value: string | number;\n  disabled?: boolean;\n};\n\nexport type CAutocompleteItem = CSelectItem & {\n  ref?: HTMLElement;\n};\n\nexport type CRadioGroupItem = {\n  name: string;\n  value: string | number;\n  disabled?: boolean;\n};\n\nexport type CDataTableFooterOptions = {\n  hideDetails?: boolean;\n  simple?: boolean;\n  hideRange?: boolean;\n  size?: 'default' | 'small';\n};\n\nexport type CDataTableHeader = {\n  key: string;\n  value: null | string;\n  component?: CDataTableComponent;\n  width?: string;\n  // pin items to exlude the from being hidden\n  pinned?: boolean;\n  sortable?: boolean;\n  children?: CDataTableChild[];\n  hidden?: boolean;\n  align?: 'start' | 'center' | 'end';\n  justify?: 'start' | 'center' | 'end';\n};\n\nexport type CDataTableData = {\n  [key: string]: CDataTableDataItem;\n};\n\nexport type CDataTableDataItem = {\n  value: string | number;\n  formattedValue?: string | number;\n  plainTextValue?: string;\n  children?: CDataTableChild[];\n  align?: 'start' | 'center' | 'end';\n  justify?: 'start' | 'center' | 'end';\n  component?: CDataTableComponent;\n};\n\nexport type CDataTableChild = {\n  value: null | string;\n  component?: CDataTableComponent;\n  children?: CDataTableChild[];\n};\n\nexport type CDataTableComponent = {\n  tag: string;\n  params?: CDataTableComponentParams;\n  injectValue?: boolean;\n};\n\nexport type CDataTableComponentParams = {\n  [key: string]: unknown;\n  onClick?: (params: CDataTableFunctionParams) => unknown;\n};\n\nexport type CDataTableFunctionParams = {\n  event: MouseEvent;\n  index: number;\n  value: string | number;\n  key: string;\n  data: CDataTableData;\n};\n\nexport type CNotificationItem = {\n  name: string;\n  type: CNotificationItemType;\n  delay?: number;\n  requiresClosing?: boolean;\n};\n\nexport type CNotificationItemType = 'warning' | 'error' | 'success' | 'info';\n\nexport enum CToastType {\n  Warning = 'warning',\n  Error = 'error',\n  Success = 'success',\n  Info = 'info',\n}\n\nexport enum CToastPosition {\n  Absolute = 'absolute',\n  Fixed = 'fixed',\n}\n\nexport type CToastMessage = {\n  message: string;\n  title?: string;\n  type?: CToastType;\n  duration?: number;\n  persistent?: boolean;\n  position?: CToastPosition;\n  id?: string;\n  closeText?: string;\n  indeterminate?: boolean;\n  progress?: boolean;\n  custom?: boolean;\n};\n\nexport enum CAlertType {\n  Warning = 'warning',\n  Error = 'error',\n  Success = 'success',\n  Info = 'info',\n}\n\nexport type CMenuCustomTrigger = {\n  value: string;\n  component: {\n    tag: string;\n    params?: {\n      [key: string]: unknown;\n    };\n  };\n};\n\nexport type CMenuOption = {\n  name: string;\n  action: () => void;\n  disabled?: boolean;\n  icon?: string;\n  iconPosition?: 'start' | 'end';\n};\n\nexport type CLoginCardBlendMode =\n  | 'normal'\n  | 'multiply'\n  | 'screen'\n  | 'overlay'\n  | 'darken'\n  | 'lighten'\n  | 'color-dodge'\n  | 'color-burn'\n  | 'hard-light'\n  | 'soft-light'\n  | 'difference'\n  | 'exclusion'\n  | 'hue'\n  | 'saturation'\n  | 'color'\n  | 'luminosity';\n\nexport type CRowAlign = 'start' | 'center' | 'end';\n\nexport type CRowJustify =\n  | 'start'\n  | 'center'\n  | 'end'\n  | 'space-between'\n  | 'space-around';\n\nexport type CTabsJustify = 'stretch' | 'start' | 'end' | 'center';\n"],"version":3}