{"file":"c-login-card.js","mappings":";;AAAA,MAAM,aAAa,GAAG,s3CAAs3C;;MCY/3CA,YAAU;;;;IAgCb,WAAM,GAAG;MACf,OAAO,EACL,yLAAyL;MAC3L,MAAM,EACJ,iIAAiI;KACpI,CAAC;8BAjC2B,cAAc;4BAKhB,GAAG;mBAKZ,KAAK;4BAKyB,UAAU;eAK5C,EAAE;gBAeA,EAAE;uBAEK,MAAM;;EAE7B,iBAAiB;IACf,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC;MAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC;MAEpC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC3B,CAAC,CAAC;GACJ;EAED,gBAAgB;IACd,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;GAC3C;EAED,oBAAoB;IAClB,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;GAC7B;EAEO,aAAa,CAAC,KAAa;IACjC,MAAM,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC;IAChD,MAAM,IAAI,GAAG,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAC;IAE7C,IAAI,CAAC,WAAW,GAAG,QAAQ,GAAG,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,MAAM,CAAC;IAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;GACtE;EAED,MAAM;IACJ,MAAM,KAAK,GAAG;MACZ,eAAe,EAAE,OAAO,IAAI,CAAC,GAAG,GAAG;MACnC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;MAC3C,MAAM,EAAE,IAAI,CAAC,WAAW;MACxB,8BAA8B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB;KACxE,CAAC;IAEF,MAAM,YAAY,GAAG;MACnB,qBAAqB,EAAE,IAAI;MAC3B,8BAA8B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO;KAC/C,CAAC;IAEF,MAAM,cAAc,GAAG;MACrB,uBAAuB,EAAE,IAAI;MAC7B,iCAAiC,EAAE,CAAC,IAAI,CAAC,GAAG;KAC7C,CAAC;IAEF,QACE,mBACG,CAAC,CAAC,IAAI,CAAC,GAAG,KACT,WAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,IACvB,gBACE,gBAAU,EAAE,EAAC,gBAAgB,EAAC,aAAa,EAAC,mBAAmB,IAC7D,YAAM,CAAC,EAAE,IAAI,CAAC,IAAI,GAAI,CACb,CACN,CACH,CACP,EAED,WACE,KAAK,EAAC,cAAc,EACpB,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,YAAY,GAAG,EAAoB,CAAC,IAEtD,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,WAAK,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,GAAQ,EAE7D,WAAK,KAAK,EAAE,cAAc,IACxB,eAAa,CACT,CACF,CACE,EACV;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["CLoginCard"],"sources":["src/components/c-login-card/c-login-card.scss?tag=c-login-card","src/components/c-login-card/c-login-card.tsx"],"sourcesContent":[":root {\n  /**\n   * @prop --c-login-card-background-color: Login card background color\n   * @prop --c-login-card-overlay-color: Login card overlay blend color\n   */\n  --_c-login-card-background-color: var(\n    --c-login-card-background-color,\n    var(--c-white)\n  );\n  --_c-login-card-overlay-color: var(\n    --c-login-card-overlay-color,\n    var(--c-primary-600)\n  );\n}\n\nc-login-card {\n  display: flex;\n  background: var(--_c-login-card-background-color);\n  border-radius: 6px;\n\n  article {\n    width: 100%;\n  }\n}\n\n.c-login-card {\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0 10px 20px, rgba(0, 0, 0, 0.2) 0 5px 5px;\n  display: flex;\n  position: relative;\n  width: 100%;\n\n  &__image {\n    background-size: cover;\n    border-radius: 6px;\n    clip-path: url(\"#cLoginClipPath\");\n    height: 100%;\n    left: 0;\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    width: 100%;\n\n    &--overlay {\n      background-color: var(--_c-login-card-overlay-color);\n      background-blend-mode: var(--_c-login-card-overlay-mode);\n    }\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    padding: 72px;\n    margin-bottom: 32px;\n    max-width: 80%;\n    width: 100%;\n\n    &--no-image {\n      max-width: 100%;\n      margin-bottom: 0;\n    }\n  }\n\n  &--mobile {\n    c-login-card-title {\n      font-size: 32px;\n      hyphens: auto;\n    }\n\n    .c-login-card__content {\n      max-width: 100%;\n      padding: 40px;\n    }\n\n    .c-login-card__image {\n      border-radius: 0 0 6px 6px;\n      bottom: 0;\n      top: auto;\n      width: 100%;\n    }\n  }\n}\n","import { Component, Element, h, Prop, State } from '@stencil/core';\nimport { CLoginCardBlendMode } from '../../types';\n\n/**\n * @group Cards\n * @slot Default slot - Login Card contents\n */\n@Component({\n  tag: 'c-login-card',\n  styleUrl: 'c-login-card.scss',\n  shadow: false,\n})\nexport class CLoginCard {\n  /**\n   * Background position (css background-position)\n   */\n  @Prop() backgroundPosition = 'bottom right';\n\n  /**\n   * Mobile breakpoint in pixels\n   */\n  @Prop() mobileBreakpoint = 600;\n\n  /**\n   * Add colored overlay to the background image\n   */\n  @Prop() overlay = false;\n\n  /**\n   * Add colored overlay to the background image\n   */\n  @Prop() overlayBlendMode: CLoginCardBlendMode = 'multiply';\n\n  /**\n   * Background image\n   */\n  @Prop() src = '';\n\n  @Element() element: HTMLCLoginCardElement;\n\n  private _observer: ResizeObserver;\n\n  private _cardElement: HTMLDivElement;\n\n  private _paths = {\n    desktop:\n      'm0.234,0.914 c0.132,-0.026,0.286,-0.05,0.436,-0.163 c0.083,-0.063,0.152,-0.145,0.21,-0.329 c0.055,-0.172,0.072,-0.421,0.072,-0.421 h0.048 v1 h-1 v-0.057 c0,0,0.145,-0.012,0.234,-0.029',\n    mobile:\n      'm1,1 h-1 v-0.213 c0,0,0.209,-0.046,0.337,-0.109 c0.191,-0.096,0.413,-0.183,0.629,-0.608 c0.028,-0.055,0.034,-0.069,0.034,-0.069',\n  };\n\n  @State() path = '';\n\n  @State() imageHeight = '100%';\n\n  componentWillLoad() {\n    this._observer = new ResizeObserver(([entry]) => {\n      const { width } = entry.contentRect;\n\n      this._handleResize(width);\n    });\n  }\n\n  componentDidLoad() {\n    this._observer.observe(this._cardElement);\n  }\n\n  disconnectedCallback() {\n    this._observer.disconnect();\n  }\n\n  private _handleResize(width: number) {\n    const isMobile = width <= this.mobileBreakpoint;\n    const mode = isMobile ? 'mobile' : 'desktop';\n\n    this.imageHeight = isMobile ? `${width * 0.3}px` : '100%';\n    this.path = this._paths[mode];\n    this._cardElement.classList.toggle('c-login-card--mobile', isMobile);\n  }\n\n  render() {\n    const style = {\n      backgroundImage: `url(${this.src})`,\n      backgroundPosition: this.backgroundPosition,\n      height: this.imageHeight,\n      '--_c-login-card-overlay-mode': !!this.overlay && this.overlayBlendMode,\n    };\n\n    const imageClasses = {\n      'c-login-card__image': true,\n      'c-login-card__image--overlay': !!this.overlay,\n    };\n\n    const contentClasses = {\n      'c-login-card__content': true,\n      'c-login-card__content--no-image': !this.src,\n    };\n\n    return (\n      <article>\n        {!!this.src && (\n          <svg width=\"0\" height=\"0\">\n            <defs>\n              <clipPath id=\"cLoginClipPath\" clipPathUnits=\"objectBoundingBox\">\n                <path d={this.path} />\n              </clipPath>\n            </defs>\n          </svg>\n        )}\n\n        <div\n          class=\"c-login-card\"\n          ref={(el) => (this._cardElement = el as HTMLDivElement)}\n        >\n          {!!this.src && <div class={imageClasses} style={style}></div>}\n\n          <div class={contentClasses}>\n            <slot></slot>\n          </div>\n        </div>\n      </article>\n    );\n  }\n}\n"],"version":3}