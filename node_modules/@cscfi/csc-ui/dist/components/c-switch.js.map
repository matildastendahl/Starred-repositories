{"file":"c-switch.js","mappings":";;AAAA,MAAM,UAAU,GAAG,0tHAA0tH;;MCqBhuHA,SAAO;;;;;;;IA+DV,iBAAY,GAAG;MACrB,IAAI,IAAI,CAAC,YAAY;QAAE,OAAO;MAE9B,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;MAE7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;MAEvE,IAAI,CAAC,SAAS,CAAC,YAAY,CACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CACtE,CAAC;KACH,CAAC;mBAlEiC,KAAK;iBAMN,KAAK;qBAKD,IAAI;sBAKH,KAAK;wBAKI,KAAK;;oBAUlC,KAAK;oBAIJ,KAAK;;EAOzB,iBAAiB;IACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC;IAE7D,IAAI,CAAC,SAAS,CAAC,YAAY,CACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CACtE,CAAC;GACH;EAED,gBAAgB;IACd,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAErC,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;GAC/C;EAcD,MAAM;IACJ,MAAM,OAAO,GAAG;MACd,UAAU,EAAE,IAAI;MAChB,oBAAoB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY;MACzC,iBAAiB,EAAE,IAAI,CAAC,QAAQ;KACjC,CAAC;IAEF,MAAM,aAAa,GAAG;MACpB,kBAAkB,EAAE,IAAI;MACxB,4BAA4B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY;KAClD,CAAC;IAEF,QACE,aAAO,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,IACzC,WAAK,KAAK,EAAC,iBAAiB,IAC1B,aACE,EAAE,EAAE,IAAI,CAAC,MAAM,kBACD,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EACrC,IAAI,EAAC,UAAU,EACf,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,OAAO,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,SAAS,EACxC,QAAQ,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,GACnC,EACF,YAAM,KAAK,EAAE,aAAa,GAAS,CAC/B,EACL,IAAI,CAAC,QAAQ,IACZ,WAAK,KAAK,EAAC,iBAAiB,IAC1B,eAAa,EAEZ,IAAI,CAAC,QAAQ,IAAI,YAAM,KAAK,EAAC,UAAU,cAAe,CACnD,IACJ,IAAI,CACF,EACR;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["CSwitch"],"sources":["src/components/c-switch/c-switch.scss?tag=c-switch&encapsulation=shadow","src/components/c-switch/c-switch.tsx"],"sourcesContent":[":host(c-switch) {\n  /**\n   * @prop --c-switch-border-color: Border color\n   * @prop --c-switch-handle-color: Handle color\n   * @prop --c-switch-slider-color: Background color\n   */\n  --_c-switch-border-color: var(--c-switch-border-color, var(--c-tertiary-600));\n  --_c-switch-handle-color: var(--c-switch-handle-color, var(--c-tertiary-600));\n  --_c-switch-slider-color: var(--c-switch-slider-color, var(--c-transparent));\n\n  /**\n   * @prop --c-switch-border-color-disabled: Disabled border color\n   * @prop --c-switch-handle-color-disabled: Disabled handle color\n   * @prop --c-switch-slider-color-disabled: Disabled background color\n   */\n  --_c-switch-border-color-disabled: var(--c-switch-border-color-disabled, var(--c-transparent));\n  --_c-switch-handle-color-disabled: var(--c-switch-handle-color-disabled, var(--c-tertiary-500));\n  --_c-switch-slider-color-disabled: var(--c-switch-slider-color-disabled, var(--c-tertiary-200));\n\n  /**\n   * @prop --c-switch-slider-color-active: Active background color\n   * @prop --c-switch-border-color-active: Active border color\n   * @prop --c-switch-handle-color-active: Active handle color\n   */\n  --_c-switch-border-color-active: var(--c-switch-border-color-active, var(--c-primary-600));\n  --_c-switch-handle-color-active: var(--c-switch-handle-color-active, var(--c-white));\n  --_c-switch-slider-color-active: var(--c-switch-slider-color-active, var(--c-primary-600));\n\n  /**\n   * @prop --c-switch-border-color-active-disabled: Disabled active border color\n   * @prop --c-switch-handle-color-active-disabled: Disabled active handle color\n   * @prop --c-switch-slider-color-active-disabled: Disabled active background color\n   */\n  --_c-switch-border-color-active-disabled: var(--c-switch-border-color-active-disabled, var(--c-tertiary-400));\n  --_c-switch-handle-color-active-disabled: var(--c-switch-handle-color-active-disabled, var(--c-white));\n  --_c-switch-slider-color-active-disabled: var(--c-switch-slider-color-active-disabled, var(--c-tertiary-400));\n\n  display: inline-block;\n}\n\n.c-switch {\n  --_c-switch-handle-margin: 5px;\n  --_c-switch-pointer: pointer;\n  --_c-switch-height: 22px;\n  --_c-switch-width: 44px;\n  --_c-switch-handle-size: calc(var(--_c-switch-height) - 2 * var(--_c-switch-handle-margin));\n  --_c-switch-handle-position-active: calc(\n    var(--_c-switch-width) - var(--_c-switch-handle-size) - 2 * var(--_c-switch-handle-margin)\n  );\n\n  $this: &;\n\n  backface-visibility: hidden;\n  transform: translate3d(0, 0, 0);\n  display: inline-grid;\n  height: var(--_c-switch-height);\n  position: relative;\n  grid-template-columns: 1fr;\n  gap: 12px;\n  align-items: center;\n\n  &--disabled {\n    --_c-switch-pointer: default;\n    --_c-switch-handle-color: var(--_c-switch-handle-color-disabled);\n    --_c-switch-slider-color: var(--_c-switch-slider-color-disabled);\n    --_c-switch-border-color: var(--_c-switch-border-color-disabled);\n    --c-error-600: var(--c-tertiary-400);\n\n    color: var(--c-tertiary-500);\n  }\n\n  &--label {\n    grid-template-columns: var(--_c-switch-width) auto;\n  }\n\n  &__label {\n    span.required {\n      color: var(--c-error-600);\n    }\n  }\n\n  &__input {\n    height: var(--_c-switch-height);\n    position: relative;\n    width: var(--_c-switch-width);\n    align-self: start;\n  }\n\n  &__slider {\n    background-color: var(--_c-switch-slider-color);\n    border-radius: var(--_c-switch-height);\n    box-shadow: inset 0 0 0 2px var(--_c-switch-border-color);\n    inset: 0;\n    cursor: var(--_c-switch-pointer);\n    position: absolute;\n    transform-origin: 50% 50%;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &::before {\n      background-color: var(--_c-switch-handle-color);\n      border-radius: 50%;\n      bottom: var(--_c-switch-handle-margin);\n      content: \"\";\n      height: var(--_c-switch-handle-size);\n      left: var(--_c-switch-handle-margin);\n      position: absolute;\n      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      width: var(--_c-switch-handle-size);\n    }\n  }\n\n  input {\n    height: 0;\n    opacity: 0;\n    width: 0;\n\n    &:checked {\n      + {\n        #{$this} {\n          &__slider {\n            --_c-switch-handle-color: var(--_c-switch-handle-color-active);\n            --_c-switch-slider-color: var(--_c-switch-slider-color-active);\n            --_c-switch-border-color: var(--_c-switch-border-color-active);\n\n            &::before {\n              transform: translateX(var(--_c-switch-handle-position-active));\n            }\n\n            &--disabled {\n              --_c-switch-handle-color: var(--_c-switch-handle-color-active-disabled);\n              --_c-switch-slider-color: var(--_c-switch-slider-color-active-disabled);\n              --_c-switch-border-color: var(--_c-switch-border-color-active-disabled);\n            }\n          }\n        }\n      }\n    }\n\n    &:focus {\n      + {\n        #{$this} {\n          &__slider {\n            outline: none;\n          }\n        }\n      }\n    }\n\n    &:focus-visible {\n      + {\n        #{$this} {\n          &__slider {\n            outline: 2px var(--c-primary-600) solid;\n            outline-offset: 2px;\n          }\n        }\n      }\n    }\n  }\n}\n","import {\n  Component,\n  h,\n  Element,\n  Prop,\n  State,\n  Event,\n  EventEmitter,\n  AttachInternals,\n} from '@stencil/core';\n\n/**\n * @group Form\n * @slot label - Label text for the switch\n */\n@Component({\n  tag: 'c-switch',\n  styleUrl: 'c-switch.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CSwitch {\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * If `true`, the checkbox is selected.\n   */\n  @Prop({ mutable: true }) checked = false;\n\n  /**\n   * The input value\n   * - Only used when the checkbox participates in a native `<form>`\n   */\n  @Prop() value: string | boolean = false;\n\n  /**\n   * The value when the checkbox is checked\n   */\n  @Prop() trueValue: boolean | string = true;\n\n  /**\n   * The value when the checkbox is unchecked\n   */\n  @Prop() falseValue: boolean | string = false;\n\n  /**\n   * Disable the switch\n   */\n  @Prop({ attribute: 'disabled' }) hostDisabled = false;\n\n  /**\n   * Id for the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  @Element() host: HTMLCSwitchElement;\n\n  @State() hasLabel = false;\n\n  /**\n   * Emit inner value change to parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  componentWillLoad() {\n    this.checked = this.checked || this.value === this.trueValue;\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  componentDidLoad() {\n    const slotted = this.host.childNodes;\n\n    this.hasLabel = slotted && slotted.length > 0;\n  }\n\n  private _toggleState = () => {\n    if (this.hostDisabled) return;\n\n    this.checked = !this.checked;\n\n    this.changeValue.emit(this.checked ? this.trueValue : this.falseValue);\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  };\n\n  render() {\n    const classes = {\n      'c-switch': true,\n      'c-switch--disabled': !!this.hostDisabled,\n      'c-switch--label': this.hasLabel,\n    };\n\n    const sliderClasses = {\n      'c-switch__slider': true,\n      'c-switch__slider--disabled': !!this.hostDisabled,\n    };\n\n    return (\n      <label class={classes} htmlFor={this.hostId}>\n        <div class=\"c-switch__input\">\n          <input\n            id={this.hostId}\n            aria-checked={this.checked.toString()}\n            type=\"checkbox\"\n            role=\"switch\"\n            disabled={this.hostDisabled}\n            checked={this.checked ? true : undefined}\n            onChange={() => this._toggleState()}\n          />\n          <span class={sliderClasses}></span>\n        </div>\n        {this.hasLabel ? (\n          <div class=\"c-switch__label\">\n            <slot></slot>\n\n            {this.required && <span class=\"required\">&nbsp;*</span>}\n          </div>\n        ) : null}\n      </label>\n    );\n  }\n}\n"],"version":3}