import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const cLoginButtonCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{--_c-login-button-background-color:var(--c-login-button-background-color, var(--c-white));--_c-login-button-border-color:var(--c-login-button-border-color, var(--c-tertiary-200));--_c-login-button-outline-color:var(--c-login-button-outline-color, var(--c-primary-600));--_c-login-button-text-color:var(--c-login-button-text-color, var(--c-text-system));--_c-login-button-title-background-color:var(--c-login-button-title-background-color, var(--c-tertiary-100))}a{background-color:var(--_c-login-button-background-color);border-radius:4px;border:1px var(--_c-login-button-border-color) solid;color:var(--_c-login-button-text-color);cursor:pointer;display:grid;grid-template-columns:1fr;grid-template-rows:1fr auto;height:100%;min-height:168px;outline:1px transparent solid;place-content:center;text-align:center;text-decoration:none}a img{max-height:120px;max-width:200px;padding:8px 24px;place-self:center}a div{background-color:var(--_c-login-button-title-background-color);border-radius:0 0 4px 4px;box-shadow:0 -1px 0 0 var(--_c-login-button-border-color);font-size:14px;padding:4px}a:hover{border-color:var(--_c-login-button-outline-color);outline:1px var(--_c-login-button-outline-color) solid}a:focus{outline:2px var(--_c-login-button-outline-color) solid;outline-offset:2px}@supports selector(:focus-visible){a:focus{outline:none}}a:focus-visible{outline:2px var(--_c-login-button-outline-color) solid;outline-offset:2px}";

const CLoginButton$1 = proxyCustomElement(class CLoginButton extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.href = '';
    this.src = undefined;
    this.alt = '';
  }
  render() {
    const props = Object.assign({ tabindex: '0' }, (!!this.href ? { href: this.href } : {}));
    return (h("a", Object.assign({}, props), h("img", { src: this.src || '', alt: this.alt }), h("div", null, h("slot", null))));
  }
  static get style() { return cLoginButtonCss; }
}, [1, "c-login-button", {
    "href": [1],
    "src": [1],
    "alt": [1]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["c-login-button"];
  components.forEach(tagName => { switch (tagName) {
    case "c-login-button":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, CLoginButton$1);
      }
      break;
  } });
}

const CLoginButton = CLoginButton$1;
const defineCustomElement = defineCustomElement$1;

export { CLoginButton, defineCustomElement };

//# sourceMappingURL=c-login-button.js.map