{"version":3,"names":["cAutocompleteCss","CAutocomplete","this","_preventDialogOpen","_debounce","_handleSlotChange","optionElements","el","querySelectorAll","selection","Array","from","find","option","selected","value","returnObject","name","changeValue","emit","changeQuery","query","internals","setFormValue","toString","length","optionElementsExist","_toggleDropdown","event","stopPropagation","dropdownVisible","_dropdownElement","close","open","_onButtonKeyDown","src","key","preventDefault","includes","_reset","_inputElement","focus","_cInputElement","reset","updateList","_onInputFocus","_updateStatusText","_id","hostId","_uniqueId","_handleKeyDown","alphanumeric","match","requestAnimationFrame","_items","currentIndex","focusItem","Math","min","max","selectItem","onDropdownStateChange","isOpen","detail","onSelectOption","forEach","item","handleQueryChange","_updateInput","_renderLoader","h","color","size","_renderChevron","classes","class","disabled","text","onClick","onKeyDown","path","mdiChevronDown","_renderReset","mdiClose","_renderInputElement","type","ref","_inputId","autocomplete","role","_a","onInput","onFocus","componentWillLoad","label","placeholder","replace","items","clearTimeout","window","setTimeout","ending","statusText","setStatusText","render","itemType","Host","id","index","itemsPerPage","parent","slot","active","hideDetails","hint","required","shadow","valid","validate","validateOnBlur","validation","variant","loading","onSlotchange","cBadgeCss","CBadge","cButtonCss","CButton","_onClick","center","_rippleElement","createRipple","_container","tabs","tabChange","hostElement","dataset","element","submitButton","_createHiddenSubmitButton","click","remove","form","_closestElementComposed","document","createElement","style","display","appendChild","_onKeyDown","code","href","target","onTabFocus","tabFocus","selector","base","__closestFrom","found","closest","getRootNode","host","_containerhasDescriptionSlot","querySelector","contentClasses","fit","noRadius","innerClasses","buttonClasses","grouped","outlined","hostClasses","ghost","danger","inverted","descriptionSlotClasses","Tag","hostAttributes","attributes","linkAttributes","spinnerSizes","small","default","large","Object","assign","cCardCss","CCard","_toggleFullscreen","isFullscreen","_onFullscreen","fullscreenElement","exitFullscreen","requestFullscreen","modalWrapper","_b","parentElement","shadowRoot","componentDidLoad","title","fullscreen","marginRight","addEventListener","bind","disconnectedCallback","removeEventListener","enterFullscreen","mdiFullscreenExit","mdiFullscreen","cCardActionsCss","CCardActions","align","justify","cCardContentCss","CCardContent","cCardTitleCss","CCardTitle","cCheckboxCss","CCheckbox","onValueChange","checked","trueValue","falseValue","handleKeyDown","_toggleState","wrapperClasses","labelClasses","indeterminate","slotHasContent","childNodes","hostName","undefined","onChange","htmlFor","viewBox","d","inputId","cCscLogoCss","CCscLogo","svg","transform","width","height","cDropdownCss","CDropdown","_isMobile","_listItems","_isOpening","_inputSize","_openedOnTop","_hideDetails","optionsWatcher","renderedList","_renderList","stateWatcher","_originalOverflowValue","getComputedStyle","body","overflow","_handleOpen","_disableScroll","_enableScroll","dropdownStateChange","handleIndexChange","_dialog","_outsideClickFn","_handleOutsideClick","_positionMenu","_dummyElement","_setIsMobile","matchMedia","matches","removeProperty","_resizeObserver","ResizeObserver","entries","isArray","observe","classList","contains","_highlightMatchingText","tagName","regex","RegExp","highlighted","_getParentPosition","getBoundingClientRect","innerWidth","innerHeight","opacity","showModal","inputSlot","top","parentTop","inputSize","bottom","left","right","isInView","x","y","fitsOnTop","maxHeight","input","_minimumQueryItem","minimumQueryLength","minimumQueryLengthMessage","mdiInformation","_emptyItem","noMatchingItemsMessage","mdiAlert","_renderOptionsList","_renderItemsList","options","map","optionValue","innerHTML","textContent","push","tabindex","selectOption","outerHTML","total","position","isDisabled","beginning","selectionText","_list","mobile","onCancel","cIconCss","CIcon","_pathElement","setAttribute","cIconButtonCss","CIconButton","_renderBadge","badge","_hostClasses","cInputCss","CInput","_hasBlurred","_observer","IntersectionObserver","observer","entry","isIntersecting","_calculateElementWidths","unobserve","threshold","_onBlur","isFocused","_onReset","_onFocus","inputField","itemClick","onValidChange","_setAriaDescriptionId","onValidationMessageChange","onPlaceholderChange","autofocus","_labelRef","_c","_preventNonNumericalInput","_d","container","disconnect","isActive","removeAttribute","labelWidth","scrollWidth","preSlotWidth","offsetLeft","_renderBorders","_renderLabel","containerClasses","rows","filled","cLoaderCss","CLoader","onElementHide","hide","toggle","styles","contentdelay","cMainCss","CMain","dashboard","disableLayout","cMessageCss","CMessage","_validationIcon","mdiCloseCircle","show","content","_handleValidation","message","messageOptions","onHintMessageChange","timeout","messageClasses","cNavigationButtonCss","CNavigationButton","mdiMenu","cOptionCss","COption","cOtpInputCss","COtpInput","_backSpacePressed","_isPasting","_inputs","fill","_handleValueChange","_emitValue","join","isFullyFilled","completion","_getElements","nextElement","nextElementSibling","previousElement","previousElementSibling","select","elementId","_onInput","isNaN","data","_onPaste","pasteData","clipboardData","getData","split","nextElementIndex","trim","forceEmpty","digits","_renderInput","maxlength","onPaste","error","_","cPageCss","CPage","_onScroll","scrollIndicator","scrollTop","scrollHeight","clientHeight","scrolled","_scrollIndicator","onscroll","cRadioCss","CRadio","cRadioGroupCss","CRadioGroup","_containers","_rippleElements","_getRadioButtons","radios","radio","_getRadioButton","itemId","isChecked","i","_select","checkedRadio","inline","cRippleCss","CRipple","offsetWidth","offsetHeight","rect","maxDimension","_calculateHeight","clientX","clientY","centerPosition","add","radius","sqrt","cSelectCss","CSelect","_lastKeyPressTime","_searchString","_onSlotChange","_selectionElement","replaceChildren","_value","console","warn","Date","now","selectionIndex","findIndex","toLowerCase","startsWith","_setCurrentIndex","optionAsSelection","clone","cloneNode","readonly","clearable","cSideNavigationCss","CSideNavigation","handleChange","slotted","_assignSubItemSlots","subItems","eventType","e","menuVisible","KeyboardEvent","_closeMenu","desktop","mdiArrowRight","cSideNavigationItemCss","CSideNavigationItem","_isSubItem","_slotHasContent","stopImmediatePropagation","onActiveChange","_handleChildFocusableChange","focusable","child","ariaHidden","_redirect","itemChange","sidenav","location","getAttribute","node","nodeName","_ariaLabel","nodeValue","_handleChildClasses","children","filter","subNavigationClasses","subnavactive","a11y","mdiChevronRight","pointerEvents","cSideNavigationTitleCss","CSideNavigationTitle","cSpacerCss","CSpacer","cSpinnerCss","CSpinner","iconParams","cx","cy","r","cSubNavigationItemCss","CSubNavigationItem","MouseEvent","PointerEvent","cSwitchCss","CSwitch","hostDisabled","hasLabel","sliderClasses","cTableCss","CTable","cells","_tableElement","headers","th","_handleResize","isMobile","mobileBreakpoint","contentRect","responsive","cell","cTextFieldCss","CTextField","_originalType","_handleChange","trimWhitespace","_handleBlur","trimmedValue","_togglePasswordVisibility","passwordIcon","mdiEye","mdiEyeOff","props","shared","onBlur","step","autocapitalize","autocorrect","textArea","textInput","_isFirefox","navigator","userAgent","_renderDateToggle","_toggleDatepicker","mdiCalendar","showPicker","_renderPasswordToggle","cToolbarCss","CToolbar"],"sources":["src/components/c-autocomplete/c-autocomplete.scss?tag=c-autocomplete&encapsulation=shadow","src/components/c-autocomplete/c-autocomplete.tsx","src/components/c-badge/c-badge.scss?tag=c-badge&encapsulation=shadow","src/components/c-badge/c-badge.tsx","src/components/c-button/c-button.scss?tag=c-button&encapsulation=shadow","src/components/c-button/c-button.tsx","src/components/c-card/c-card.scss?tag=c-card&encapsulation=shadow","src/components/c-card/c-card.tsx","src/components/c-card-actions/c-card-actions.scss?tag=c-card-actions&encapsulation=shadow","src/components/c-card-actions/c-card-actions.tsx","src/components/c-card-content/c-card-content.scss?tag=c-card-content&encapsulation=shadow","src/components/c-card-content/c-card-content.tsx","src/components/c-card-title/c-card-title.scss?tag=c-card-title&encapsulation=shadow","src/components/c-card-title/c-card-title.tsx","src/components/c-checkbox/c-checkbox.scss?tag=c-checkbox&encapsulation=shadow","src/components/c-checkbox/c-checkbox.tsx","src/components/c-csc-logo/c-csc-logo.scss?tag=c-csc-logo&encapsulation=shadow","src/components/c-csc-logo/c-csc-logo.tsx","src/components/c-dropdown/c-dropdown.scss?tag=c-dropdown&encapsulation=shadow","src/components/c-dropdown/c-dropdown.tsx","src/components/c-icon/c-icon.scss?tag=c-icon&encapsulation=shadow","src/components/c-icon/c-icon.tsx","src/components/c-icon-button/c-icon-button.scss?tag=c-icon-button&encapsulation=shadow","src/components/c-icon-button/c-icon-button.tsx","src/components/c-input/c-input.scss?tag=c-input","src/components/c-input/c-input.tsx","src/components/c-loader/c-loader.scss?tag=c-loader&encapsulation=shadow","src/components/c-loader/c-loader.tsx","src/components/c-main/c-main.scss?tag=c-main&encapsulation=shadow","src/components/c-main/c-main.tsx","src/components/c-message/c-message.scss?tag=c-message&encapsulation=shadow","src/components/c-message/c-message.tsx","src/components/c-navigation-button/c-navigation-button.scss?tag=c-navigation-button&encapsulation=shadow","src/components/c-navigation-button/c-navigation-button.tsx","src/components/c-option/c-option.scss?tag=c-option&encapsulation=shadow","src/components/c-option/c-option.tsx","src/components/c-otp-input/c-otp-input.scss?tag=c-otp-input&encapsulation=shadow","src/components/c-otp-input/c-otp-input.tsx","src/components/c-page/c-page.scss?tag=c-page&encapsulation=shadow","src/components/c-page/c-page.tsx","src/components/c-radio/c-radio.scss?tag=c-radio&encapsulation=shadow","src/components/c-radio/c-radio.tsx","src/components/c-radio-group/c-radio-group.scss?tag=c-radio-group&encapsulation=shadow","src/components/c-radio-group/c-radio-group.tsx","src/components/c-ripple/c-ripple.scss?tag=c-ripple&encapsulation=shadow","src/components/c-ripple/c-ripple.tsx","src/components/c-select/c-select.scss?tag=c-select&encapsulation=shadow","src/components/c-select/c-select.tsx","src/components/c-side-navigation/c-side-navigation.scss?tag=c-side-navigation&encapsulation=shadow","src/components/c-side-navigation/c-side-navigation.tsx","src/components/c-side-navigation-item/c-side-navigation-item.scss?tag=c-side-navigation-item&encapsulation=shadow","src/components/c-side-navigation-item/c-side-navigation-item.tsx","src/components/c-side-navigation-title/c-side-navigation-title.scss?tag=c-side-navigation-title&encapsulation=shadow","src/components/c-side-navigation-title/c-side-navigation-title.tsx","src/components/c-spacer/c-spacer.scss?tag=c-spacer&encapsulation=shadow","src/components/c-spacer/c-spacer.tsx","src/components/c-spinner/c-spinner.scss?tag=c-spinner&encapsulation=shadow","src/components/c-spinner/c-spinner.tsx","src/components/c-sub-navigation-item/c-sub-navigation-item.scss?tag=c-sub-navigation-item&encapsulation=shadow","src/components/c-sub-navigation-item/c-sub-navigation-item.tsx","src/components/c-switch/c-switch.scss?tag=c-switch&encapsulation=shadow","src/components/c-switch/c-switch.tsx","src/components/c-table/c-table.scss?tag=c-table","src/components/c-table/c-table.tsx","src/components/c-text-field/c-text-field.scss?tag=c-text-field&encapsulation=shadow","src/components/c-text-field/c-text-field.tsx","src/components/c-toolbar/c-toolbar.scss?tag=c-toolbar&encapsulation=shadow","src/components/c-toolbar/c-toolbar.tsx"],"sourcesContent":[":host(c-autocomplete) {\n  /**\n   * @prop --c-autocomplete-option-background-color: Autocomplete option background color\n   * @prop --c-autocomplete-option-background-hover-color: Autocomplete option background hover color\n   * @prop --c-autocomplete-active-color: Autocomplete active color\n   * @prop --c-autocomplete-inactive-color: Autocomplete inactive color\n   * @prop --c-autocomplete-background-color: Autocomplete background color\n   * @prop --c-autocomplete-text-color: Autocomplete text color\n   * @prop --c-autocomplete-option-text-color: Autocomplete option text color\n   * @prop --c-autocomplete-placeholder-color: Autocomplete placeholder color\n   */\n  --_c-autocomplete-option-background-color: var(\n    --c-autocomplete-option-background-color,\n    var(--c-white)\n  );\n  --_c-autocomplete-option-background-hover-color: var(\n    --c-autocomplete-option-background-hover-color,\n    var(--c-primary-100)\n  );\n  --_c-autocomplete-active-color: var(\n    --c-autocomplete-active-color,\n    var(--c-primary-600)\n  );\n  --_c-autocomplete-inactive-color: var(\n    --c-autocomplete-inactive-color,\n    var(--c-tertiary-600)\n  );\n  --_c-autocomplete-background-color: var(\n    --c-autocomplete-background-color,\n    var(--c-transparent)\n  );\n  --_c-autocomplete-text-color: var(\n    --c-autocomplete-text-color,\n    var(--c-text-body)\n  );\n  --_c-autocomplete-option-text-color: var(\n    --c-autocomplete-option-text-color,\n    var(--c-text-body)\n  );\n  --_c-autocomplete-placeholder-color: var(\n    --c-autocomplete-placeholder-color,\n    var(--c-tertiary-500)\n  );\n\n  // c-select options\n  --c-select-option-background-color: var(\n    --_c-autocomplete-option-background-color\n  );\n  --c-select-option-background-color-hover: var(\n    --_c-autocomplete-option-background-hover-color\n  );\n  --c-select-option-text-color: var(--_c-autocomplete-option-text-color);\n\n  // c-input\n  --_c-input-active-color: var(--_c-autocomplete-active-color);\n  --_c-input-inactive-color: var(--_c-autocomplete-inactive-color);\n  --_c-input-background-color: var(--_c-autocomplete-background-color);\n  --_c-input-text-color: var(--_c-autocomplete-text-color);\n  --_c-input-placeholder-color: var(--_c-autocomplete-placeholder-color);\n}\n\n@import '../c-input/c-input-menu';\n","import {\n  AttachInternals,\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  Watch,\n  Method,\n} from '@stencil/core';\nimport { CAutocompleteItem } from '../../types';\nimport { mdiChevronDown, mdiClose } from '@mdi/js';\n\n/**\n * @group Form\n */\n@Component({\n  tag: 'c-autocomplete',\n  styleUrl: 'c-autocomplete.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CAutocomplete {\n  @Element() el: HTMLCAutocompleteElement;\n\n  // eslint-disable-next-line\n  @AttachInternals() internals: ElementInternals;\n\n  private static _uniqueId = 0;\n\n  private _dropdownElement: HTMLCDropdownElement;\n\n  private _inputElement: HTMLInputElement;\n\n  private _cInputElement: HTMLCInputElement;\n\n  private _inputId: string;\n\n  private _preventDialogOpen = false;\n\n  private _debounce = null;\n\n  private get _id() {\n    return this.hostId || `autocomplete_${CAutocomplete._uniqueId}`;\n  }\n\n  /**\n   * Dropdown items\n   */\n  @Prop() items: CAutocompleteItem[] = [];\n\n  /**\n   * Selected item\n   */\n  @Prop() value: string | number | CAutocompleteItem = null;\n\n  /**\n   * Search string\n   */\n  @Prop() query: string = null;\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label: string;\n\n  /**\n   * Input field name\n   */\n  @Prop() name: string;\n\n  /**\n   * Placeholder text\n   */\n  @Prop() placeholder = '';\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Show loading state\n   */\n  @Prop() loading = false;\n\n  /**\n   * Show required validation\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validíty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Shadow variant\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Return object instead of value\n   */\n  @Prop() returnObject = false;\n\n  /**\n   * Triggered when text is typed\n   */\n  @Event() changeQuery: EventEmitter;\n\n  /**\n   * Triggered when option is selected\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  /**\n   * Items per page before adding scroll\n   */\n  @Prop() itemsPerPage = 6;\n\n  /**\n   * Minimum query length\n   */\n  @Prop() minimumQueryLength = 0;\n\n  /**\n   * Minimum query length message\n   */\n  @Prop() minimumQueryLengthMessage = 'Type at least {n} characters';\n\n  /**\n   * No matching items message\n   */\n  @Prop() noMatchingItemsMessage = 'No suggestions found';\n\n  @State() optionElements: NodeListOf<HTMLCOptionElement>;\n\n  @State() currentIndex: number = null;\n\n  @State() dropdownVisible = false;\n\n  @State() statusText = '';\n\n  @State() optionElementsExist = false;\n\n  /**\n   * Reset autocomplete state\n   */\n  @Method()\n  async reset() {\n    this.query = '';\n\n    this.changeValue.emit(null);\n\n    this.internals.setFormValue(null);\n\n    this.changeQuery.emit('');\n\n    this._dropdownElement.updateList();\n  }\n\n  private _handleKeyDown(event: KeyboardEvent) {\n    const alphanumeric = /^[0-9a-zA-Z ]+$/;\n\n    if (event.key.match(alphanumeric) && event.key.length === 1) {\n      if (!this.dropdownVisible) {\n        this._dropdownElement.open();\n\n        return;\n      }\n\n      this._inputElement.focus();\n\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n\n      this._preventDialogOpen = true;\n      this._dropdownElement.close();\n\n      requestAnimationFrame(() => {\n        this._inputElement.focus();\n      });\n\n      return;\n    }\n\n    if (event.key === 'Tab') {\n      this._inputElement.focus();\n\n      requestAnimationFrame(() => {\n        this._dropdownElement.close();\n      });\n\n      return;\n    }\n\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n\n      if (!this._items.length) return;\n\n      if (!this.dropdownVisible || this.currentIndex === null) {\n        this.currentIndex = 0;\n        this._dropdownElement.open();\n        this._dropdownElement.focusItem(this.currentIndex);\n\n        return;\n      }\n\n      this.currentIndex = Math.min(\n        this.currentIndex + 1,\n        this._items.length - 1,\n      );\n\n      this._dropdownElement.focusItem(this.currentIndex);\n\n      return;\n    }\n\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n\n      if (this.currentIndex === 0) {\n        this._dropdownElement.close();\n        this._inputElement.focus();\n      }\n\n      if (!this.dropdownVisible || this.currentIndex === null) {\n        this.currentIndex = this._items.length - 1;\n        this._dropdownElement.open();\n        this._dropdownElement.focusItem(this.currentIndex);\n\n        return;\n      }\n\n      this.currentIndex = Math.max(this.currentIndex - 1, 0);\n\n      this._dropdownElement.focusItem(this.currentIndex);\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (this.currentIndex === null) return;\n\n      this._dropdownElement.selectItem(this.currentIndex);\n    }\n\n    if (event.key === 'Home' && this.dropdownVisible) {\n      this.currentIndex = 0;\n    }\n\n    if (event.key === 'End' && this.dropdownVisible) {\n      this.currentIndex = this._items.length - 1;\n    }\n  }\n\n  @Listen('dropdownStateChange')\n  onDropdownStateChange(event: CustomEvent<boolean>) {\n    const isOpen = event.detail;\n\n    this.dropdownVisible = isOpen;\n\n    if (!isOpen) {\n      requestAnimationFrame(() => {\n        this.currentIndex = null;\n      });\n    }\n  }\n\n  @Listen('selectOption')\n  onSelectOption(event: CustomEvent<{ name: string; value: string }>) {\n    this._dropdownElement.close();\n\n    const { name, value } = event.detail;\n\n    this.value = this.returnObject ? event.detail : value;\n\n    this.changeValue.emit(this.value);\n\n    this.internals.setFormValue(value);\n\n    this.query = name;\n\n    this.changeQuery.emit(name);\n\n    this._preventDialogOpen = true;\n\n    if (this.optionElementsExist) {\n      Array.from(this.optionElements).forEach((item) => {\n        item.selected = item.value === value && item.name === name;\n      });\n\n      this._dropdownElement.updateList();\n    }\n\n    this._inputElement.focus();\n  }\n\n  @Watch('query')\n  handleQueryChange() {\n    this._updateStatusText();\n  }\n\n  private _updateInput() {\n    this._dropdownElement.open();\n\n    this.query = this._inputElement.value;\n\n    this.changeQuery.emit(this.query);\n\n    this._dropdownElement.updateList();\n  }\n\n  private _handleSlotChange = () => {\n    this.optionElements = this.el.querySelectorAll('c-option');\n\n    const selection = Array.from(this.optionElements).find(\n      (option) => option.selected,\n    );\n\n    if (selection) {\n      this.value = this.returnObject\n        ? { name: selection.name, value: selection.value }\n        : selection.value;\n\n      this.changeValue.emit(this.value);\n\n      this.changeQuery.emit(this.query);\n\n      this.internals.setFormValue(selection.value.toString());\n    }\n\n    if (this.optionElements.length && !this.optionElementsExist) {\n      this.optionElementsExist = true;\n    }\n  };\n\n  private _toggleDropdown = (event) => {\n    event.stopPropagation();\n\n    if (this.dropdownVisible) {\n      this._dropdownElement.close();\n\n      return;\n    }\n\n    this._dropdownElement.open();\n  };\n\n  private _onButtonKeyDown = (\n    src: 'chevron' | 'reset',\n    event: KeyboardEvent,\n  ) => {\n    event.stopPropagation();\n\n    if (event.key !== 'Tab') event.preventDefault();\n\n    if (['Enter', ' '].includes(event.key)) {\n      if (src === 'chevron') {\n        this._toggleDropdown(event);\n\n        return;\n      }\n\n      this._reset(event);\n\n      this._preventDialogOpen = true;\n\n      this._inputElement.focus();\n    }\n  };\n\n  private _renderLoader() {\n    return <c-spinner color=\"var(--_c-autocomplete-active-color)\" size={20} />;\n  }\n\n  private _renderChevron() {\n    const classes = {\n      'c-input-menu__chevron': true,\n      'c-input-menu__chevron--active': this.dropdownVisible,\n    };\n\n    return (\n      <c-icon-button\n        size=\"x-small\"\n        class={classes}\n        disabled={this.disabled}\n        text\n        onClick={(event) => this._toggleDropdown(event)}\n        onKeyDown={(event) => this._onButtonKeyDown('chevron', event)}\n      >\n        <c-icon path={mdiChevronDown} size={24} />\n      </c-icon-button>\n    );\n  }\n\n  private _reset = (event) => {\n    event.stopPropagation();\n\n    this.query = '';\n\n    this.value = null;\n\n    this.changeValue.emit(null);\n\n    this.internals.setFormValue(null);\n\n    this.changeQuery.emit('');\n\n    this._preventDialogOpen = true;\n\n    this._cInputElement.reset();\n\n    this._inputElement.focus();\n\n    this._dropdownElement.updateList();\n  };\n\n  private _renderReset() {\n    return (\n      <c-icon-button\n        aria-label=\"\"\n        size=\"x-small\"\n        disabled={this.disabled}\n        text\n        onClick={(event) => this._reset(event)}\n        onKeyDown={(event) => this._onButtonKeyDown('reset', event)}\n      >\n        <c-icon path={mdiClose} size={20} />\n      </c-icon-button>\n    );\n  }\n\n  private _onInputFocus = () => {\n    if (!this._preventDialogOpen) {\n      this._dropdownElement.open();\n    }\n\n    this._updateStatusText();\n\n    this._preventDialogOpen = false;\n  };\n\n  private _renderInputElement() {\n    return (\n      <div class=\"c-input-menu__input\">\n        <input\n          type=\"text\"\n          ref={(el) => (this._inputElement = el)}\n          aria-expanded={this.dropdownVisible.toString()}\n          aria-owns={this._inputId + '-items'}\n          aria-autocomplete=\"list\"\n          autocomplete=\"off\"\n          class=\"c-input__input\"\n          role=\"combobox\"\n          value={this.query}\n          name={this.name ?? null}\n          disabled={this.disabled}\n          onInput={() => this._updateInput()}\n          onFocus={() => this._onInputFocus()}\n        />\n      </div>\n    );\n  }\n\n  componentWillLoad() {\n    CAutocomplete._uniqueId += 1;\n\n    this._inputId =\n      'input_' +\n      (this.hostId || this.label || this.placeholder).replace(\n        /[^a-zA-Z0-9-_]/g,\n        '',\n      );\n  }\n\n  private get _items() {\n    return this.optionElementsExist ? this.optionElements : this.items;\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      const ending = !!this._items.length\n        ? ' or navigate using the up and down arrows'\n        : '';\n\n      if (this.currentIndex === null) {\n        this.statusText = this._items.length\n          ? `${this._items.length} result${\n              this._items.length !== 1 ? 's' : ''\n            } available`\n          : 'No search results available';\n      }\n\n      if (this.query !== null && this._items.length) {\n        this.statusText += ', input a search query to filter the results';\n      }\n\n      this._dropdownElement.setStatusText(this.statusText + ending);\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  render() {\n    const itemType = this.optionElementsExist ? 'option' : 'item';\n\n    return (\n      <Host>\n        <c-dropdown\n          ref={(el) => (this._dropdownElement = el)}\n          id={`${this._id}-dropdown`}\n          index={this.currentIndex}\n          items-per-page={this.itemsPerPage}\n          item-type={itemType}\n          items={\n            this._items as NodeListOf<HTMLCOptionElement> & CAutocompleteItem[]\n          }\n          parent={this.el}\n          type=\"autocomplete\"\n          onKeyDown={(event) => this._handleKeyDown(event)}\n        >\n          <c-input\n            slot=\"default\"\n            ref={(el) => (this._cInputElement = el)}\n            active={this.dropdownVisible}\n            disabled={this.disabled}\n            hide-details={this.hideDetails}\n            hint={this.hint}\n            id={this.hostId}\n            input-id={this._inputId}\n            label={this.label}\n            name={this.name}\n            placeholder={this.placeholder}\n            required={this.required}\n            shadow={this.shadow}\n            valid={this.valid}\n            validate={this.validate}\n            validate-on-blur={this.validateOnBlur}\n            validation={this.validation}\n            value={this.query}\n            variant=\"select\"\n          >\n            <slot name=\"pre\" slot=\"pre\"></slot>\n\n            <div class=\"c-input__content\">\n              {this._renderInputElement()}\n\n              {this.loading && this._renderLoader()}\n\n              {!this.loading && this.value && this._renderReset()}\n\n              {!this.loading && !this.value && this._renderChevron()}\n\n              <slot onSlotchange={() => this._handleSlotChange()}></slot>\n            </div>\n\n            <slot name=\"post\" slot=\"post\"></slot>\n          </c-input>\n        </c-dropdown>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-badge-background-color: Badge background color\n   * @prop --c-badge-text-color: Badge text color\n   * @prop --c-badge-border-color: Badge border color\n   */\n  --_c-badge-background-color: var(--c-badge-background-color, var(--c-warning-600));\n  --_c-badge-text-color: var(--c-badge-text-color, var(--c-white));\n  --_c-badge-border-color: var(--c-badge-border-color, var(--c-white));\n\n  align-items: center;\n  background-color: var(--_c-badge-background-color);\n  border-radius: 16px;\n  box-shadow: 0 0 0 2px var(--_c-badge-border-color);\n  color: var(--_c-badge-text-color);\n  display: flex;\n  font-size: 12px;\n  height: 16px;\n  justify-content: center;\n  justify-items: center;\n  line-height: 1;\n  min-width: 16px;\n  padding: 0 4px;\n  pointer-events: none;\n  position: absolute;\n  right: -6px;\n  top: -6px;\n  z-index: 2;\n}\n","import { Component, Host, h } from '@stencil/core';\n\n/**\n * @parent none\n */\n@Component({\n  tag: 'c-badge',\n  styleUrl: 'c-badge.scss',\n  shadow: true,\n})\nexport class CBadge {\n  render() {\n    return (\n      <Host class=\"c-badge\">\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-button-border-radius: Button border radius\n   */\n  --_c-button-border-radius: var(--c-button-border-radius, 4px);\n  --_c-button-height: 44px;\n  --_c-button-min-width: 88px;\n  --_c-button-padding: 0 16px;\n  --_c-button-font-size: 16px;\n  --_c-button-icon-size: 24px;\n  --_c-button-outline-offset: 2px;\n\n  border-radius: var(--_c-button-border-radius);\n  display: inline-flex;\n  min-width: max-content;\n  transform: translateZ(0); // Safari border-radius fix\n  transition: background-color 0.3s ease-in-out;\n\n  /**\n   * @prop --c-button-background-color: Default button background color\n   * @prop --c-button-text-color: Default button text color\n   * @prop --c-button-loader-color: Default button loader color\n   * @prop --c-button-outline-color: Default button outline color\n   */\n  --_c-button-background-color: var(--c-button-background-color, var(--c-primary-600));\n  --_c-button-text-color: var(--c-button-text-color, var(--c-white));\n  --_c-button-loader-color: var(--c-button-loader-color, var(--_c-button-text-color));\n  --_c-button-outline-color: var(--c-button-outline-color, var(--_c-button-background-color));\n\n  background-color: var(--_c-button-background-color);\n  color: var(--_c-button-text-color);\n\n  ::slotted(svg) {\n    fill: var(--_c-button-loader-color);\n  }\n}\n\n:host(.c-button--no-radius) {\n  --_c-button-border-radius: 0;\n}\n\n:host(:host:not(.c-button--description)) {\n  height: var(--_c-button-height);\n}\n\n:host(.c-button--description) {\n  height: \"auto\";\n}\n\n:host(:host:hover) {\n  /**\n  * @prop --c-button-background-color-hover: Default button hover background color\n  */\n  --_c-button-background-color-hover: var(--c-button-background-color-hover, var(--c-primary-400));\n\n  background-color: var(--_c-button-background-color-hover);\n}\n\n:host(.c-button--inverted) {\n  /**\n   * @prop --c-button-inverted-background-color: Inverted default button background color\n   * @prop --c-button-inverted-text-color: Inverted default button text color\n   */\n  --_c-button-inverted-background-color: var(--c-button-inverted-background-color, var(--c-white));\n  --_c-button-inverted-text-color: var(--c-button-inverted-text-color, var(--c-primary-600));\n\n  // private\n  --_c-button-outline-color: var(--_c-button-inverted-background-color);\n\n  background-color: var(--_c-button-inverted-background-color);\n  color: var(--_c-button-inverted-text-color);\n}\n\n:host(.c-button--inverted:hover) {\n  /**\n   * @prop --c-button-inverted-background-color-hover: Inverted default button hover background color\n   */\n  --_c-button-inverted-background-color-hover: var(--c-button-inverted-background-color-hover, var(--c-primary-200));\n\n  background-color: var(--_c-button-inverted-background-color-hover);\n}\n\n:host(.c-button--inverted.c-button--disabled) {\n  /**\n   * @prop --c-button-inverted-disabled-background-color: Inverted disabled default button background color\n   * @prop --c-button-inverted-disabled-text-color: Inverted disabled default button text color\n   */\n  --_c-button-inverted-disabled-background-color: var(--c-button-inverted-disabled-background-color, var(--_c-button-disabled-background-color));\n  --_c-button-inverted-disabled-text-color: var(--c-button-inverted-disabled-text-color, var(--c-tertiary-500));\n\n  background-color: var(--_c-button-inverted-disabled-background-color);\n  color: var(--_c-button-inverted-disabled-text-color);\n}\n\n// ---- danger ----------------------------------------------------------------\n\n:host(.c-button--danger) {\n  /**\n   * @prop --c-button-danger-background-color: Danger button background color\n   * @prop --c-button-danger-text-color: Danger button text color\n   * @prop --c-button-danger-loader-color: Danger button loader color\n   */\n  --_c-button-danger-background-color: var(--c-button-danger-background-color, var(--c-error-600));\n  --_c-button-danger-text-color: var(--c-button-danger-text-color, var(--c-white));\n  --_c-button-danger-loader-color: var(--c-button-danger-loader-color, var(--_c-button-danger-text-color));\n\n  // private\n  --_c-button-loader-color: var(--_c-button-danger-loader-color);\n  --_c-button-outline-color: var(--_c-button-danger-background-color);\n\n  background-color: var(--_c-button-danger-background-color);\n  color: var(--_c-button-danger-text-color);\n}\n\n:host(.c-button--danger:hover) {\n  /**\n   * @prop --c-button-danger-background-color-hover: Danger button hover background color\n   */\n  --_c-button-danger-background-color-hover: var(--c-button-danger-background-color-hover, var(--c-error-400));\n\n  background-color: var(--_c-button-danger-background-color-hover);\n}\n\n:host(.c-button--danger.c-button--disabled) {\n  /**\n   * @prop --c-button-danger-disabled-background-color: Disabled danger button background color\n   * @prop --c-button-danger-disabled-text-color: Disabled danger button text color\n   */\n  --_c-button-danger-disabled-background-color: var(--c-button-danger-disabled-background-color, var(--_c-button-disabled-background-color));\n  --_c-button-danger-disabled-text-color: var(--c-button-danger-disabled-text-color, var(--_c-button-disabled-text-color));\n\n  background-color: var(--_c-button-danger-disabled-background-color);\n  color: var(--_c-button-danger-disabled-text-color);\n}\n\n:host(.c-button--danger.c-button--inverted) {\n  /**\n   * @prop --c-button-danger-inverted-background-color: Inverted danger button background color\n   * @prop --c-button-danger-inverted-text-color: Inverted danger button text color\n   */\n  --_c-button-danger-inverted-text-color: var(--c-button-danger-inverted-text-color, var(--c-error-600));\n  --_c-button-danger-inverted-background-color: var(--c-button-danger-inverted-background-color, var(--c-white));\n\n  // private\n  --_c-button-outline-color: var(--_c-button-danger-inverted-background-color);\n\n  background-color: var(--_c-button-danger-inverted-background-color);\n  color: var(--_c-button-danger-inverted-text-color);\n}\n\n:host(.c-button--danger.c-button--inverted:hover) {\n  /**\n   * @prop --c-button-danger-inverted-background-color-hover: Inverted danger button hover background color\n   */\n  --_c-button-danger-inverted-background-color-hover: var(--c-button-danger-inverted-background-color-hover, var(--c-error-100));\n\n  background-color: var(--_c-button-danger-inverted-background-color-hover);\n}\n\n:host(.c-button--danger.c-button--inverted.c-button--disabled) {\n  /**\n   * @prop --c-button-danger-inverted-disabled-background-color: Disabled inverted danger button background color\n   * @prop --c-button-danger-inverted-disabled-text-color: Disabled inverted danger button text color\n   */\n  --_c-button-danger-inverted-disabled-background-color: var(--c-button-danger-inverted-disabled-background-color, var(--_c-button-disabled-background-color));\n  --_c-button-danger-inverted-disabled-text-color: var(--c-button-danger-inverted-disabled-text-color, var(--_c-button-disabled-text-color));\n\n  background-color: var(--_c-button-danger-inverted-disabled-background-color);\n  color: var(--_c-button-danger-inverted-disabled-text-color);\n}\n\n// ---- ghost ----------------------------------------------------------------\n\n:host(.c-button--ghost) {\n  /**\n   * @prop --c-button-ghost-background-color: Ghost button background color\n   * @prop --c-button-ghost-text-color: Ghost button text color\n   * @prop --c-button-ghost-loader-color: Ghost button loader color\n   */\n  --_c-button-ghost-background-color: var(--c-button-ghost-background-color, var(--c-primary-200));\n  --_c-button-ghost-text-color: var(--c-button-ghost-text-color, var(--c-primary-600));\n  --_c-button-ghost-loader-color: var(--c-button-ghost-loader-color, var(--_c-button-ghost-text-color));\n\n  // private\n  --_c-button-loader-color: var(--_c-button-ghost-loader-color);\n  --_c-button-outline-color: var(--_c-button-ghost-text-color);\n\n  background-color: var(--_c-button-ghost-background-color);\n  color: var(--_c-button-ghost-text-color);\n}\n\n:host(.c-button--ghost:hover) {\n  /**\n   * @prop --c-button-ghost-background-color-hover: Ghost button hover background color\n   */\n  --_c-button-ghost-background-color-hover: var(--c-button-ghost-background-color-hover, var(--c-primary-100));\n\n  background-color: var(--_c-button-ghost-background-color-hover);\n}\n\n:host(.c-button--ghost.c-button--disabled) {\n  /**\n   * @prop --c-button-ghost-disabled-background-color: Disabled ghost button background color\n   * @prop --c-button-ghost-disabled-text-color: Disabled ghost button text color\n   */\n  --_c-button-ghost-disabled-background-color: var(--c-button-ghost-disabled-background-color, var(--_c-button-disabled-background-color));\n  --_c-button-ghost-disabled-text-color: var(--c-button-ghost-disabled-text-color, var(--_c-button-disabled-text-color));\n\n  background-color: var(--_c-button-ghost-disabled-background-color);\n  color: var(--_c-button-ghost-disabled-text-color);\n}\n\n:host(.c-button--ghost.c-button--inverted) {\n  /**\n   * @prop --c-button-ghost-inverted-background-color: Inverted ghost button background color\n   * @prop --c-button-ghost-inverted-text-color: Inverted ghost button text color\n   */\n  --_c-button-ghost-inverted-background-color: var(--c-button-ghost-inverted-background-color, rgba(var(--c-white-rgb), 0.2));\n  --_c-button-ghost-inverted-text-color: var(--c-button-ghost-inverted-text-color, var(--c-white));\n\n  // private\n  --_c-button-outline-color: var(--_c-button-ghost-inverted-text-color);\n\n  background-color: var(--_c-button-ghost-inverted-background-color);\n  color: var(--_c-button-ghost-inverted-text-color);\n}\n\n:host(.c-button--ghost.c-button--inverted:hover) {\n  /**\n   * @prop --c-button-ghost-inverted-background-color-hover: Inverted ghost button hover text color\n   */\n  --_c-button-ghost-inverted-background-color-hover: var(--c-button-ghost-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));\n\n  background-color: var(--_c-button-ghost-inverted-background-color-hover);\n}\n\n:host(.c-button--ghost.c-button--inverted.c-button--disabled) {\n  /**\n   * @prop --c-button-ghost-inverted-disabled-background-color: Disabled inverted ghost button background color\n   * @prop --c-button-ghost-inverted-disabled-text-color: Disabled inverted ghost button text color\n   */\n  --_c-button-ghost-inverted-disabled-background-color: var(--c-button-ghost-inverted-disabled-background-color, rgba(var(--c-white-rgb), 0.05));\n  --_c-button-ghost-inverted-disabled-text-color: var(--c-button-ghost-inverted-disabled-text-color, var(--c-tertiary-400));\n\n  background-color: var(--_c-button-ghost-inverted-disabled-background-color);\n  color: var(--_c-button-ghost-inverted-disabled-text-color);\n}\n\n// ---- text ----------------------------------------------------------------\n\n:host(.c-button--text) {\n  /**\n   * @prop --c-button-text-background-color: Text button background color\n   * @prop --c-button-text-text-color: Text button text color\n   * @prop --c-button-text-loader-color: Text button loader color\n   */\n  --_c-button-text-background-color: var(--c-button-text-background-color, var(--c-transparent));\n  --_c-button-text-text-color: var(--c-button-text-text-color, var(--c-primary-600));\n  --_c-button-text-loader-color: var(--c-button-text-loader-color, var(--_c-button-text-text-color));\n\n  // private\n  --_c-button-loader-color: var(--_c-button-text-loader-color);\n  --_c-button-outline-color: var(--_c-button-text-text-color);\n\n  background-color: var(--_c-button-text-background-color);\n  color: var(--_c-button-text-text-color);\n}\n\n:host(.c-button--text:hover) {\n  /**\n   * @prop --c-button-text-background-color-hover: Text button hover background color\n   */\n  --_c-button-text-background-color-hover: var(--c-button-text-background-color-hover, var(--c-primary-100));\n\n  background-color: var(--_c-button-text-background-color-hover);\n}\n\n:host(.c-button--text.c-button--disabled) {\n  /**\n   * @prop --c-button-text-disabled-background-color: Disabled text button background color\n   * @prop --c-button-text-disabled-text-color: Disabled text button text color\n   */\n  --_c-button-text-disabled-background-color: var(--c-button-text-disabled-background-color, var(--c-transparent));\n  --_c-button-text-disabled-text-color: var(--c-button-text-disabled-text-color, var(--c-tertiary-500));\n\n  background-color: var(--_c-button-text-disabled-background-color);\n  color: var(--_c-button-text-disabled-text-color);\n}\n\n:host(.c-button--text.c-button--inverted) {\n  /**\n   * @prop --c-button-text-inverted-background-color: Inverted text button background color\n   * @prop --c-button-text-inverted-text-color: Inverted text button text color\n   */\n  --_c-button-text-inverted-background-color: var(--c-button-text-inverted-background-color, var(--c-transparent));\n  --_c-button-text-inverted-text-color: var(--c-button-text-inverted-text-color, var(--c-white));\n\n  // private\n  --_c-button-outline-color: var(--_c-button-text-inverted-text-color);\n\n  background-color: var(--_c-button-text-inverted-background-color);\n  color: var(--_c-button-text-inverted-text-color);\n}\n\n:host(.c-button--text.c-button--inverted:hover) {\n  /**\n   * @prop --c-button-text-inverted-background-color-hover: Inverted text button hover background color\n   */\n  --_c-button-text-inverted-background-color-hover: var(--c-button-text-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));\n\n  background-color: var(--_c-button-text-inverted-background-color-hover);\n}\n\n:host(.c-button--text.c-button--inverted.c-button--disabled) {\n  /**\n   * @prop --c-button-text-inverted-disabled-background-color: Disabled inverted text button background color\n   * @prop --c-button-text-inverted-disabled-text-color: Disabled inverted text button text color\n   */\n  --_c-button-text-inverted-disabled-background-color: var(--c-button-text-inverted-disabled-background-color, var(--c-transparent));\n  --_c-button-text-inverted-disabled-text-color: var(--c-button-text-inverted-disabled-text-color, var(--c-tertiary-400));\n\n  background-color: var(--_c-button-text-inverted-disabled-background-color);\n  color: var(--_c-button-text-inverted-disabled-text-color);\n}\n\n// ---- outlined ----------------------------------------------------------------\n\n:host(.c-button--outlined) {\n  /**\n   * @prop --c-button-outlined-background-color: Outlined button background color\n   * @prop --c-button-outlined-border-color: Outlined button border color\n   * @prop --c-button-outlined-text-color: Outlined button text color\n   * @prop --c-button-outlined-loader-color: Outlined button loader color\n   */\n  --_c-button-outlined-text-color: var(--c-button-outlined-text-color, var(--c-primary-600));\n  --_c-button-outlined-border-color: var(--c-button-outlined-border-color, var(--_c-button-outlined-text-color));\n  --_c-button-outlined-background-color: var(--c-button-outlined-background-color, var(--c-transparent));\n  --_c-button-outlined-loader-color: var(--c-button-outlined-loader-color, var(--_c-button-outlined-text-color));\n\n  // private\n  --_c-button-loader-color: var(--_c-button-outlined-loader-color);\n  --_c-outline-color: var(--_c-button-outlined-border-color);\n  --_c-button-outline-color: var(--_c-button-outlined-border-color);\n\n  background-color: var(--_c-button-outlined-background-color);\n  color: var(--_c-button-outlined-text-color);\n  box-shadow: inset 0 0 0 2px var(--_c-outline-color);\n}\n\n:host(.c-button--outlined:hover) {\n  /**\n   * @prop --c-button-outlined-background-color-hover: Outlined button hover background color\n   */\n  --_c-button-outlined-background-color-hover: var(--c-button-outlined-background-color-hover, var(--c-primary-200));\n\n  background-color: var(--_c-button-outlined-background-color-hover);\n}\n\n:host(.c-button--outlined.c-button--disabled) {\n  /**\n   * @prop --c-button-outlined-disabled-background-color: Disabled outlined button background color\n   * @prop --c-button-outlined-disabled-border-color: Disabled outlined button border color\n   * @prop --c-button-outlined-disabled-text-color: Disabled outlined button text color\n   */\n  --_c-button-outlined-disabled-text-color: var(--c-button-outlined-disabled-text-color, var(--c-tertiary-500));\n  --_c-button-outlined-disabled-background-color: var(--c-button-outlined-disabled-background-color, var(--_c-button-outlined-background-color));\n  --_c-button-outlined-disabled-border-color: var(--c-button-outlined-disabled-border-color, var(--c-tertiary-400));\n\n  // private\n  --_c-outline-color: var(--_c-button-outlined-disabled-border-color);\n\n  background-color: var(--_c-button-outlined-disabled-background-color);\n  color: var(--_c-button-outlined-disabled-text-color);\n}\n\n:host(.c-button--outlined.c-button--inverted) {\n  /**\n   * @prop --c-button-outlined-inverted-background-color: Inverted outlined button background color\n   * @prop --c-button-outlined-inverted-border-color: Inverted outlined button border color\n   * @prop --c-button-outlined-inverted-text-color: Inverted outlined button text color\n   */\n  --_c-button-outlined-inverted-text-color: var(--c-button-outlined-inverted-text-color, var(--c-white));\n  --_c-button-outlined-inverted-border-color: var(--c-button-outlined-inverted-border-color, var(--_c-button-outlined-inverted-text-color));\n  --_c-button-outlined-inverted-background-color: var(--c-button-outlined-inverted-background-color, var(--_c-button-outlined-background-color));\n\n  // private\n  --_c-outline-color: var(--_c-button-outlined-inverted-border-color);\n  --_c-button-outline-color: var(--_c-button-outlined-inverted-border-color);\n\n  background-color: var(--_c-button-outlined-inverted-background-color);\n  color: var(--_c-button-outlined-inverted-text-color);\n}\n\n:host(.c-button--outlined.c-button--inverted:hover) {\n  /**\n   * @prop --c-button-outlined-background-color-hover: Outlined button hover background color\n   */\n  --_c-button-outlined-inverted-background-color-hover: var(--c-button-outlined-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));\n\n  background-color: var(--_c-button-outlined-inverted-background-color-hover);\n}\n\n:host(.c-button--outlined.c-button--inverted.c-button--disabled) {\n  /**\n   * @prop --c-button-outlined-inverted-disabled-background-color: Disabled inverted outlined button background color\n   * @prop --c-button-outlined-inverted-disabled-border-color: Disabled inverted outlined button border color\n   * @prop --c-button-outlined-inverted-disabled-text-color: Disabled inverted outlined button text color\n   */\n  --_c-button-outlined-inverted-disabled-border-color: var(--c-button-outlined-inverted-disabled-border-color, var(--c-tertiary-400));\n  --_c-button-outlined-inverted-disabled-text-color: var(--c-button-outlined-inverted-disabled-text-color, var(--c-tertiary-400));\n  --_c-button-outlined-inverted-disabled-background-color: var(--c-button-outlined-inverted-disabled-background-color, var(--_c-button-outlined-background-color));\n\n  // private\n  --_c-outline-color: var(--_c-button-outlined-inverted-disabled-border-color);\n\n  background-color: var(--_c-button-outlined-inverted-disabled-background-color);\n  color: var(--_c-button-outlined-inverted-disabled-text-color);\n}\n\n:host(.c-button--disabled) {\n  /**\n  * @prop --c-button-disabled-background-color: Disabled button background color\n  * @prop --c-button-disabled-text-color: Disabled button text color\n  */\n  --_c-button-disabled-background-color: var(--c-button-disabled-background-color, var(--c-tertiary-100));\n  --_c-button-disabled-text-color: var(--c-button-disabled-text-color, var(--c-tertiary-600));\n\n  // private\n  --_c-button-loader-color: var(--_c-button-disabled-text-color);\n\n  background-color: var(--_c-button-disabled-background-color);\n  color: var(--_c-button-disabled-text-color);\n  pointer-events: none;\n}\n\n// ==========================================================================\n\n// :host(.c-button--active) {\n//   --_c-button-text-color: var(--c-white);\n// }\n\n:host(.c-button:focus) {\n  z-index: 2;\n}\n\n:host(.c-button) a:focus,\n:host(.c-button) button:focus {\n  outline: none;\n}\n\n:host(.c-button) a:focus-visible,\n:host(.c-button) button:focus-visible {\n  outline: 2px var(--_c-button-outline-color) solid;\n  outline-offset: var(--_c-button-outline-offset);\n  z-index: 1;\n}\n\n:host(.c-button--fit) {\n  width: 100%;\n}\n\n:host(.c-button--small) {\n  --_c-button-height: 28px;\n}\n\n:host(.c-button--large) {\n  --_c-button-height: 52px;\n}\n\n:host(.c-button--fitted) {\n  width: 100%;\n}\n\n::slotted([slot=\"icon\"]) {\n  font-size: var(--_c-button-icon-size);\n}\n\n::slotted(svg) {\n  fill: var(--_c-button-loader-color);\n}\n\na {\n  text-decoration: none;\n}\n\nbutton,\na {\n  background-color: transparent;\n  border-radius: var(--_c-button-border-radius);\n  color: currentColor;\n  font-family: var(--c-font-family);\n  display: inline-grid;\n  place-items: center;\n  border: none;\n  padding: 0;\n  position: relative;\n  margin: 0;\n  width: 100%;\n  cursor: pointer;\n  transition: background-color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1),\n    color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n  &:disabled {\n    cursor: default;\n  }\n}\n\n@media (max-width: 767px) {\n  .full-width-mobile {\n    max-width: 100% !important;\n    width: 100% !important;\n    margin: 0 !important;\n\n    .c-button-padding {\n      padding: 24px 38px;\n    }\n  }\n\n  .full-width {\n    flex-grow: 1 !important;\n  }\n}\n\n.c-button__content {\n  $this: &;\n\n  border-radius: var(--_c-button-border-radius);\n  position: relative;\n  box-shadow: none;\n  outline: none;\n  backface-visibility: hidden;\n  transform: translate3d(0, 0, 0);\n  transition: background-color 0.3s;\n  color: currentColor;\n  margin: 0;\n  text-decoration: none;\n  display: flex;\n  text-align: center;\n  font-size: var(--_c-button-font-size);\n  font-weight: 700;\n  line-height: 18px;\n  user-select: none;\n  min-width: var(--_c-button-min-width);\n  white-space: nowrap;\n  height: 100%;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n\n  * {\n    pointer-events: none;\n  }\n\n  svg {\n    fill: var(--_c-button-loader-color);\n    height: var(--_c-button-icon-size);\n    width: var(--_c-button-icon-size);\n\n    &.icon-by-path {\n      margin-right: 8px;\n    }\n\n    &.button-icon {\n      margin-right: 16px;\n      font-size: 10px;\n      margin-left: -8px;\n      margin-bottom: -2px;\n    }\n  }\n\n  &--small {\n    --_c-button-padding: 0 12px;\n    --_c-button-font-size: 14px;\n    --_c-button-icon-size: 20px;\n  }\n\n  &--large {\n    --_c-button-padding: 0 24px;\n    --_c-button-font-size: 18px;\n  }\n\n  &--no-radius {\n    --_c-button-border-radius: 0;\n  }\n\n  &--fitted {\n    width: 100%;\n  }\n\n  &--description {\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 0;\n  }\n\n  &__inner {\n    display: flex;\n    gap: 8px;\n    height: var(--_c-button-height);\n    align-items: center;\n    justify-content: center;\n    padding: var(--_c-button-padding);\n  }\n\n  &__description {\n    font-weight: 400;\n    font-size: 12px;\n    padding: 0 12px 12px;\n\n    &--loading {\n      opacity: 0.8;\n    }\n  }\n}\n\n.hide-text {\n  color: transparent !important;\n\n  ::slotted([slot=\"icon\"]) {\n    opacity: 0;\n  }\n\n  svg {\n    fill: transparent !important;\n  }\n\n  .outlined.c-button svg {\n    fill: transparent !important;\n  }\n}\n\n.c-button__loader {\n  width: 100%;\n  position: absolute;\n  height: var(--_c-button-height);\n  display: grid;\n  place-content: center;\n\n  &.dense_spinner {\n    padding-top: 7px;\n  }\n}\n","import {\n  Component,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n} from '@stencil/core';\n\n/**\n * @group Buttons\n * @slot Default slot - Button text\n * @slot icon - Icon\n * @slot description - Additional description to be shown below the button text\n */\n@Component({\n  tag: 'c-button',\n  styleUrl: 'c-button.scss',\n  shadow: true,\n})\nexport class CButton {\n  /**\n   * Inverted button style for dark backgrounds\n   */\n  @Prop() inverted = false;\n\n  /**\n   * Outlined button style\n   */\n  @Prop() outlined = false;\n\n  /**\n   * Light button background\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Danger variant style\n   */\n  @Prop() danger = false;\n\n  /**\n   * True when used as a tab button\n   * @private\n   */\n  @Prop() grouped = false;\n\n  /**\n   * Transparent button background\n   */\n  @Prop() text = false;\n\n  /**\n   * Display loader on the button\n   */\n  @Prop() loading = false;\n\n  /**\n   * Fit width to containing element\n   */\n  @Prop() fit = false;\n\n  /**\n   * Remove the default border radius\n   */\n  @Prop() noRadius = false;\n\n  /**\n   * Button type\n   */\n  @Prop() type: 'button' | 'submit' = 'button';\n\n  /**\n   * Disable the button\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button\n   * - for use in the c-tab-buttons\n   */\n  @Prop() value?: number | string;\n\n  /**\n   * Id of the button\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Size of the button\n   */\n  @Prop() size: 'default' | 'small' | 'large' = 'default';\n\n  /**\n   * Hyperlink url\n   */\n  @Prop() href: string;\n\n  /**\n   * Hyperlink target\n   */\n  @Prop() target = '_blank';\n\n  /**\n   * Used a s atab button\n   * @private\n   */\n  @Prop() tabs = false;\n\n  /**\n   * Emit changes to the parent\n   * @private\n   */\n  @Event() tabChange: EventEmitter<{\n    value: number | string;\n    element: HTMLCButtonElement;\n  }>;\n\n  /**\n   * Emit focus to the parent\n   *\n   * @private\n   */\n  @Event() tabFocus: EventEmitter<number | string>;\n\n  @Element() hostElement: HTMLCButtonElement;\n\n  @Listen('focus', { passive: true })\n  onTabFocus() {\n    this.tabFocus.emit(this.value ?? this.hostElement.dataset.index);\n  }\n\n  private _container?: HTMLDivElement;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  private _onClick = (event, center = false) => {\n    if (this.disabled) {\n      event.preventDefault();\n\n      return;\n    }\n\n    this._rippleElement.createRipple(event, this._container, center);\n\n    if (this.tabs) {\n      this.tabChange.emit({\n        value: this.value ?? this.hostElement.dataset.index,\n        element: this.hostElement,\n      });\n    }\n\n    if (this.type === 'submit') {\n      const submitButton = this._createHiddenSubmitButton();\n\n      submitButton.click();\n\n      submitButton.remove();\n    }\n  };\n\n  private _createHiddenSubmitButton = () => {\n    const form = this._closestElementComposed('form', this._container);\n\n    const submitButton = document.createElement('button');\n    submitButton.type = this.type;\n    submitButton.style.display = 'none';\n    submitButton.disabled = this.disabled;\n\n    form.appendChild(submitButton);\n\n    return submitButton;\n  };\n\n  private _onKeyDown = (event: KeyboardEvent) => {\n    if (['Space', 'Enter'].includes(event.code)) {\n      if (!!this.href) {\n        window.open(this.href, this.target);\n      }\n\n      event.preventDefault();\n\n      this._onClick(event, true);\n    }\n  };\n\n  private _closestElementComposed(selector, base) {\n    function __closestFrom(el) {\n      const found = el.closest(selector);\n\n      return found ? found : __closestFrom(el.getRootNode().host);\n    }\n\n    return __closestFrom(base);\n  }\n\n  private _containerhasDescriptionSlot: boolean;\n\n  componentWillLoad() {\n    this._containerhasDescriptionSlot = !!this.hostElement.querySelector(\n      '[slot=\"description\"]',\n    );\n  }\n\n  render() {\n    const contentClasses = {\n      'c-button__content': true,\n      'c-button__content--description': this._containerhasDescriptionSlot,\n      'c-button__content--fitted': !!this.fit,\n      'c-button__content--large': this.size === 'large',\n      'c-button__content--no-radius': !!this.noRadius,\n      'c-button__content--small': this.size === 'small',\n    };\n\n    const innerClasses = {\n      'c-button__content__inner': true,\n      'hide-text': this.loading,\n    };\n\n    const buttonClasses = {\n      fit: !!this.fit,\n      grouped: this.grouped,\n      outlined: this.outlined,\n    };\n\n    const hostClasses = {\n      'c-button': true,\n      'c-button--ghost': this.ghost,\n      'c-button--outlined': this.outlined,\n      'c-button--danger': this.danger,\n      'c-button--disabled': this.disabled,\n      'c-button--inverted': this.inverted,\n      'c-button--text': this.text,\n      'c-button--fitted': !!this.fit,\n      'c-button--description': !!this._containerhasDescriptionSlot,\n      'c-button--active': this.grouped && !this.outlined,\n      'c-button--no-radius': !!this.noRadius,\n      [`c-button--${this.size}`]: true,\n    };\n\n    const descriptionSlotClasses = {\n      'c-button__content__description': this._containerhasDescriptionSlot,\n      'c-button__content__description--loading': this.loading,\n    };\n\n    const Tag = !!this.href ? 'a' : 'button';\n\n    const hostAttributes = {\n      onKeyDown: this._onKeyDown,\n    };\n\n    const attributes = {\n      id: this.hostId,\n      class: buttonClasses,\n      disabled: this.disabled,\n      onClick: this._onClick,\n      type: this.type,\n    };\n\n    let linkAttributes = {};\n\n    if (!!this.href) {\n      linkAttributes = { href: this.href, target: this.target };\n    }\n\n    const spinnerSizes = {\n      small: 20,\n      default: 24,\n      large: 28,\n    };\n\n    return (\n      <Host class={hostClasses} {...hostAttributes}>\n        <Tag {...attributes} {...linkAttributes}>\n          <div\n            class={contentClasses}\n            ref={(el) => (this._container = el as HTMLDivElement)}\n          >\n            <div class={innerClasses}>\n              {this.loading && (\n                <div class=\"c-button__loader\">\n                  <c-spinner\n                    color=\"var(--_c-button-loader-color)\"\n                    size={spinnerSizes[this.size]}\n                  />\n                </div>\n              )}\n\n              <slot></slot>\n            </div>\n\n            {this._containerhasDescriptionSlot && (\n              <div class={descriptionSlotClasses}>\n                <slot name=\"description\"></slot>\n              </div>\n            )}\n          </div>\n\n          <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n        </Tag>\n      </Host>\n    );\n  }\n}\n",":host(c-card) {\n  /**\n   * @prop --c-card-gap: Card column gap / padding\n   * @prop --c-card-background-color: Card background color\n   */\n  --_c-card-gap: var(--c-card-gap, clamp(1rem, 2vw, 1.5rem));\n  --_c-card-background-color: var(--c-card-background-color, var(--c-white));\n\n  display: flex;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0 10px 20px, rgba(0, 0, 0, 0.2) 0 5px 5px;\n  padding-block: var(--_c-card-gap);\n  position: relative;\n  background-color: var(--_c-card-background-color);\n\n  article {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    gap: var(--_c-card-gap);\n    max-width: 100%;\n  }\n}\n\n:host(.c-card--fullscreen) {\n  --c-icon-button-text-background-color: var(--c-white);\n\n  overflow: auto;\n\n  .c-card {\n    &__fullscreen-toggle {\n      position: fixed;\n\n      @-moz-document url-prefix() {\n        position: absolute;\n      }\n    }\n  }\n}\n\n::slotted(c-loader) {\n  border-radius: 6px;\n}\n\n.c-card {\n  &__fullscreen-toggle {\n    position: absolute;\n    right: calc(var(--_c-card-gap) - 8px);\n    top: calc(var(--_c-card-gap) - 8px);\n  }\n}\n","import { mdiFullscreen, mdiFullscreenExit } from '@mdi/js';\nimport {\n  Component,\n  Element,\n  Host,\n  h,\n  Prop,\n  State,\n  Method,\n} from '@stencil/core';\n\n/**\n * @group Cards\n * @slot Default slot - Card components\n */\n@Component({\n  tag: 'c-card',\n  styleUrl: 'c-card.scss',\n  shadow: true,\n  assetsDirs: ['assets'],\n})\nexport class CCard {\n  /**\n   * Enable the fullscreen toggle button\n   */\n  @Prop() fullscreen = false;\n\n  @State() isFullscreen = false;\n\n  @Element() host: HTMLCCardElement;\n\n  private _toggleFullscreen() {\n    this.isFullscreen = !this.isFullscreen;\n  }\n\n  private _onFullscreen() {\n    if (document.fullscreenElement) {\n      this.exitFullscreen();\n\n      return;\n    }\n\n    this.host.requestFullscreen();\n\n    const modalWrapper =\n      this.host.parentElement?.shadowRoot?.querySelector('.modal-wrapper');\n\n    if (modalWrapper) {\n      (modalWrapper as HTMLDivElement).style.display = this.isFullscreen\n        ? 'block'\n        : 'flex';\n    }\n  }\n\n  componentDidLoad() {\n    const title = this.host.querySelector('c-card-title');\n\n    if (!!title && this.fullscreen) {\n      title.style.marginRight = '40px';\n    }\n\n    this.host.addEventListener(\n      'fullscreenchange',\n      this._toggleFullscreen.bind(this),\n    );\n  }\n\n  disconnectedCallback() {\n    this.host.removeEventListener(\n      'fullscreenchange',\n      this._toggleFullscreen.bind(this),\n    );\n  }\n\n  /**\n   * Exit fullscreen from the outside\n   */\n  @Method()\n  async exitFullscreen() {\n    if (!document.fullscreenElement) return;\n\n    document.exitFullscreen();\n\n    const modalWrapper =\n      this.host.parentElement?.shadowRoot?.querySelector('.modal-wrapper');\n\n    if (modalWrapper) {\n      (modalWrapper as HTMLDivElement).style.display = 'flex';\n    }\n  }\n\n  /**\n   * Enter fullscreen from the outside\n   */\n  @Method()\n  async enterFullscreen() {\n    this.isFullscreen = true;\n  }\n\n  render() {\n    const hostClasses = {\n      'c-card': true,\n      'c-card--fullscreen': this.isFullscreen,\n    };\n\n    return (\n      <Host class={hostClasses}>\n        <article>\n          {this.fullscreen && (\n            <c-icon-button\n              aria-hidden=\"true\"\n              class=\"c-card__fullscreen-toggle\"\n              title={this.isFullscreen ? 'Exit fullscreen' : 'Enter fullscreen'}\n              text\n              onClick={() => this._onFullscreen()}\n            >\n              <c-icon\n                path={this.isFullscreen ? mdiFullscreenExit : mdiFullscreen}\n              />\n            </c-icon-button>\n          )}\n          <slot></slot>\n        </article>\n      </Host>\n    );\n  }\n}\n",":host {\n  padding: 0 var(--_c-card-gap, 24px);\n  display: block;\n\n  menu {\n    margin: 0;\n    padding: 0;\n  }\n}\n\n.c-card-actions {\n  align-items: center;\n  display: flex;\n  gap: 8px;\n\n  ::slotted(c-button[fit]) {\n    flex: 1;\n  }\n\n  &--align {\n    &-center {\n      align-items: center;\n    }\n\n    &-start {\n      align-items: flex-start;\n    }\n\n    &-end {\n      align-items: flex-end;\n    }\n  }\n\n  &--justify {\n    &-center {\n      justify-content: center;\n    }\n\n    &-end {\n      justify-content: flex-end;\n    }\n\n    &-start {\n      justify-content: flex-start;\n    }\n\n    &-stretch {\n      justify-content: stretch;\n\n      ::slotted(*) {\n        flex: 1;\n      }\n    }\n\n    &-space-between {\n      justify-content: space-between;\n    }\n\n    &-space-around {\n      justify-content: space-around;\n    }\n  }\n}\n","import { Component, h, Prop } from '@stencil/core';\n/**\n * @parent c-card\n * @slot Default slot - Card actions\n */\n@Component({\n  tag: 'c-card-actions',\n  styleUrl: 'c-card-actions.scss',\n  shadow: true,\n})\nexport class CCardActions {\n  /**\n   * Align the actions\n   */\n  @Prop() align: 'start' | 'center' | 'end' = 'center';\n\n  /**\n   * Justify the actions\n   */\n  @Prop() justify:\n    | 'start'\n    | 'center'\n    | 'end'\n    | 'space-between'\n    | 'stretch'\n    | 'space-around' = 'start';\n\n  render() {\n    const classes = {\n      'c-card-actions': true,\n      [`c-card-actions--align-${this.align}`]: true,\n      [`c-card-actions--justify-${this.justify}`]: true,\n    };\n\n    return (\n      <footer>\n        <menu class={classes}>\n          <slot></slot>\n        </menu>\n      </footer>\n    );\n  }\n}\n",":host {\n  display: block;\n  padding: 0 var(--_c-card-gap, 24px);\n}\n\n.c-card-content {\n  display: flex;\n  flex-direction: column;\n  gap: var(--_c-card-gap);\n\n  ::slotted(*) {\n    max-width: 100%;\n  }\n}\n","import { Component, h } from '@stencil/core';\n/**\n * @parent c-card\n * @slot Default slot - Card contents\n */\n@Component({\n  tag: 'c-card-content',\n  styleUrl: 'c-card-content.scss',\n  shadow: true,\n})\nexport class CCardContent {\n  render() {\n    return (\n      <article class=\"c-card-content\">\n        <slot></slot>\n      </article>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-card-title-color: Card title color\n   * @prop --c-card-title-underline-color: Card title underline color\n   */\n  --_c-card-title-color: var(--c-card-title-color, var(--c-text-system));\n  --_c-card-title-underline-color: var(--c-card-title-underline-color, var(--c-primary-600));\n\n  color: var(--_c-card-title-color);\n  padding-inline: var(--_c-card-gap, 24px);\n  display: block;\n  font-family: var(--c-font-family);\n  font-size: 1rem;\n  font-weight: 500;\n  text-transform: uppercase;\n}\n\n.c-card-title {\n  &__underline {\n    background-color: var(--_c-card-title-underline-color);\n    border-radius: 4px;\n    height: 4px;\n    margin-top: 10px;\n    width: 44px;\n  }\n}\n","import { Component, h } from '@stencil/core';\n/**\n * @parent c-card\n * @slot Default slot - Card title text\n */\n@Component({\n  tag: 'c-card-title',\n  styleUrl: 'c-card-title.scss',\n  shadow: true,\n})\nexport class CCardTitle {\n  render() {\n    return (\n      <header class=\"c-card-title\">\n        <slot></slot>\n        <div class=\"c-card-title__underline\"></div>\n      </header>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-checkbox-background-color-hover: Checkbox hover background color\n   * @prop --c-checkbox-color-active: Active checkbox color\n   * @prop --c-checkbox-color-disabled: Disabled checkbox color\n   * @prop --c-checkbox-color: Checkbox color\n   */\n  --_c-checkbox-background-color-hover: var(--c-checkbox-background-color-hover, rgba(var(--c-primary-rgb), 0.1));\n  --_c-checkbox-color-active: var(--c-checkbox-color-active, var(--_c-checkbox-color));\n  --_c-checkbox-color-disabled: var(--c-checkbox-color-disabled, var(--c-tertiary-500));\n  --_c-checkbox-color: var(--c-checkbox-color, var(--c-primary-600));\n\n  // private\n  --_c-checkbox-color-error: var(--c-error-600);\n}\n\n.c-checkbox {\n  $this: &;\n\n  position: relative;\n  width: fit-content;\n\n  &__label-content {\n    padding-top: 10px;\n    text-align: left;\n    user-select: none;\n\n    span.required {\n      color: var(--c-error-600);\n    }\n  }\n\n  &--disabled {\n    --_c-checkbox-color: var(--_c-checkbox-color-disabled);\n    --c-error-600: var(--_c-checkbox-color);\n    --_c-checkbox-color-active: var(--_c-checkbox-color-disabled);\n\n    color: var(--_c-checkbox-color);\n    opacity: 0.75;\n\n    .c-checkbox__label {\n      cursor: default;\n    }\n  }\n\n  &--error {\n    --_c-checkbox-color: var(--c-error-600);\n    --_c-checkbox-color-active: var(--_c-checkbox-color-error);\n\n    color: var(--_c-checkbox-color-error);\n  }\n\n  input:focus {\n    outline: none;\n  }\n\n  input:focus + .c-checkbox__label .ripple {\n    outline: 2px var(--_c-checkbox-color-active) solid;\n  }\n\n  @supports selector(:focus-visible) {\n    input:focus + .c-checkbox__label .ripple {\n      outline: none;\n    }\n  }\n\n  input:focus-visible + .c-checkbox__label .ripple {\n    outline: 2px var(--_c-checkbox-color-active) solid;\n  }\n\n  &:not(.c-checkbox--disabled) {\n    .ripple:hover {\n      background-color: var(--_c-checkbox-background-color-hover);\n    }\n  }\n\n  .visuallyhidden {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n}\n\n.c-checkbox input:checked + .c-checkbox__label {\n  .ripple::before {\n    background: var(--_c-checkbox-color-active);\n    border-color: var(--_c-checkbox-color-active);\n  }\n\n  .path {\n    stroke: #ffffff;\n    fill: #ffffff;\n    stroke-dashoffset: 0;\n    stroke-width: 13;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke-miterlimit: 10;\n  }\n}\n\n.c-checkbox__label {\n  cursor: pointer;\n  display: flex;\n  gap: 4px;\n  position: relative;\n  user-select: none;\n\n  svg {\n    height: 14px;\n    left: 14px;\n    position: absolute;\n    top: 14px;\n    width: 14px;\n  }\n\n  &--indeterminate .path {\n    stroke-dasharray: 0 !important;\n    stroke-dashoffset: 0 !important;\n    stroke: transparent;\n  }\n\n  .ripple {\n    border-radius: 50%;\n    color: var(--_c-checkbox-color-active);\n    display: grid;\n    height: 42px;\n    min-width: 42px;\n    overflow: hidden;\n    place-content: center;\n    position: relative;\n    transform: translateZ(0);\n    width: 42px;\n\n    &::before {\n      border-radius: 2px;\n      border: 2px solid var(--_c-checkbox-color);\n      content: \"\";\n      display: inline-block;\n      height: 18px;\n      left: 12px;\n      position: absolute;\n      top: 12px;\n      transition: all 0.25s ease-out;\n      vertical-align: middle;\n      width: 18px;\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  h,\n  Listen,\n  Prop,\n  Event,\n  EventEmitter,\n  Watch,\n  Element,\n  AttachInternals,\n} from '@stencil/core';\n\n/**\n * @group Form\n * @slot Default slot - Default slot for the label\n */\n@Component({\n  tag: 'c-checkbox',\n  styleUrl: 'c-checkbox.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CCheckbox {\n  @Element() el: HTMLCCheckboxElement;\n\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * If `true`, the checkbox is selected.\n   */\n  @Prop({ mutable: true }) checked = false;\n\n  /**\n   * Disable the checkbox\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Indeterminate state\n   */\n  @Prop() indeterminate = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label = '';\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validity of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * The input value\n   * - Only used when the checkbox participates in a native `<form>`\n   */\n  @Prop() value: string | boolean = false;\n\n  /**\n   * The value when the checkbox is checked\n   */\n  @Prop() trueValue: boolean | string = true;\n\n  /**\n   * The value when the checkbox is unchecked\n   */\n  @Prop() falseValue: boolean | string = false;\n\n  /**\n   * Name of the input\n   * - Only used when the checkbox participates in a native `<form>`\n   */\n  @Prop({ attribute: 'name' }) hostName: string;\n\n  /**\n   * Triggered when element is checked or unchecked\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  private _container: HTMLDivElement;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  private static _uniqueId = 0;\n\n  private get _id() {\n    return this.hostId || `checkbox_${CCheckbox._uniqueId}`;\n  }\n\n  @Watch('value')\n  onValueChange(value: string | boolean) {\n    this.checked = this.trueValue === value;\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeyDown(event: KeyboardEvent) {\n    if (['Space'].includes(event.code)) {\n      event.preventDefault();\n      this._toggleState(event);\n    }\n  }\n\n  componentWillLoad() {\n    CCheckbox._uniqueId += 1;\n\n    this.checked = this.checked || this.value === this.trueValue;\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  private _toggleState(event) {\n    if (this.disabled) return;\n\n    this._rippleElement.createRipple(event, this._container, true);\n\n    this.checked = !this.checked;\n\n    this.changeValue.emit(this.checked ? this.trueValue : this.falseValue);\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  render() {\n    const wrapperClasses = {\n      'c-checkbox': true,\n      'c-checkbox--disabled': this.disabled,\n      'c-checkbox--error': !this.valid,\n    };\n\n    const labelClasses = {\n      'c-checkbox__label': true,\n      'c-checkbox__label--indeterminate': this.indeterminate,\n    };\n\n    const slotHasContent = !!this.el.childNodes.length;\n\n    return (\n      <Host>\n        <div class={wrapperClasses}>\n          <input\n            class=\"visuallyhidden\"\n            id=\"checkbox\"\n            {...(!!this.hostName ? { name: this.hostName } : {})}\n            type=\"checkbox\"\n            aria-checked={this.checked.toString()}\n            aria-disabled={this.disabled.toString()}\n            checked={this.checked ? true : undefined}\n            disabled={this.disabled}\n            onChange={(event) => this._toggleState(event)}\n          />\n\n          <label class={labelClasses} htmlFor=\"checkbox\">\n            <div\n              class=\"ripple\"\n              ref={(el) => (this._container = el as HTMLDivElement)}\n            >\n              <svg viewBox=\"0 0 100 100\">\n                {!this.indeterminate && this.checked && (\n                  <path\n                    class=\"path\"\n                    d=\"M 12 52 l 24 24 l 47 -47 l -3 -3 l -44 44 l -21 -21 l -3 3\"\n                  />\n                )}\n                {this.indeterminate && (\n                  <path class=\"path\" d=\"M20 56 h60 v-8 h-60 z\" />\n                )}\n              </svg>\n\n              <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n            </div>\n\n            {(!!this.label || slotHasContent) && (\n              <div class=\"c-checkbox__label-content\">\n                {!!this.label ? this.label : <slot></slot>}\n                {this.required && <span class=\"required\">&nbsp;*</span>}\n              </div>\n            )}\n          </label>\n        </div>\n\n        {!this.hideDetails && (\n          <c-message\n            hint={this.hint}\n            inputId={this._id}\n            valid={this.valid}\n            validation={this.validation}\n          />\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin-top: 4px;\n}\n\nsvg {\n  .cls-1 {\n    fill: none;\n  }\n\n  .cls-2 {\n    clip-path: url(\"#clip-path\");\n  }\n\n  .cls-3 {\n    fill: #5e6a71;\n  }\n\n  .cls-4 {\n    fill: #066778;\n  }\n\n  .cls-5 {\n    fill: #830051;\n  }\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\n/**\n * @parent c-toolbar\n */\n@Component({\n  tag: 'c-csc-logo',\n  styleUrl: 'c-csc-logo.scss',\n  shadow: true,\n})\nexport class CCscLogo {\n  /**\n   * Logo width in pixels\n   */\n  @Prop() width = 60;\n\n  render() {\n    const svg = (\n      <svg viewBox=\"0 0 233.61 149.04\">\n        <defs>\n          <clipPath id=\"clip-path\" transform=\"translate(0)\">\n            <rect class=\"cls-1\" width=\"233.61\" height=\"156.31\" />\n          </clipPath>\n        </defs>\n        <title>CSC_logo_no_tagline</title>\n        <g id=\"Layer_2\" data-name=\"Layer 2\">\n          <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n            <g class=\"cls-2\">\n              <path\n                class=\"cls-3\"\n                d=\"M97.24,130.66l-.27-.17a.69.69,0,0,1-.44.19,14.57,14.57,0,0,1-1.87-1.07,9.29,9.29,0,0,0-4.46-1.06c-6,0-9.21,4.93-9.21,10.24S84.22,149,90.09,149c4.6,0,5.89-2.57,7-2.57a2.17,2.17,0,0,1,.25.05l.22-.11-2.44-3.34-.28.17a1.84,1.84,0,0,1,.06.41c0,1.34-2.36,2.71-4.64,2.65-4.33-.08-6.08-3.72-6.08-7.56s1.86-7.45,6-7.45c2.2,0,4.44,1.15,4.44,2.21,0,.25.06.41,0,.53l.33.13ZM108,146.72l.32.13a.75.75,0,0,1,.42-.22,12.54,12.54,0,0,0,7.62,2.41c4.32,0,7.28-2.49,7.28-6.19,0-8.14-11.86-4.17-11.86-8.6,0-1.7,1-3,4.11-3,2.41,0,5.26,1,5.26,2.49a.92.92,0,0,1,0,.3l.36.17,1.92-4.14-.28-.11a.85.85,0,0,1-.62.3,11.61,11.61,0,0,1-1.95-.88,11,11,0,0,0-4.5-.87c-4.33,0-7.4,2.08-7.4,5.8,0,7.82,11.76,3.68,11.76,8.67,0,2.27-1.65,3.28-4,3.28-2.77,0-6.11-1.53-6.11-3a1.89,1.89,0,0,1,0-.41l-.31-.17Zm42.56-16.06-.28-.17a.64.64,0,0,1-.43.19,14.57,14.57,0,0,1-1.87-1.07,9.3,9.3,0,0,0-4.47-1.06c-6,0-9.21,4.93-9.21,10.24S137.5,149,143.37,149c4.6,0,5.89-2.57,7-2.57a1.59,1.59,0,0,1,.24.05l.22-.11-2.44-3.34-.27.17a1.84,1.84,0,0,1,.05.41c0,1.34-2.35,2.71-4.63,2.65-4.33-.08-6.08-3.72-6.08-7.56s1.86-7.45,6-7.45c2.2,0,4.44,1.15,4.44,2.21a1.82,1.82,0,0,1,0,.53l.33.13Z\"\n                transform=\"translate(0)\"\n              />\n              <path\n                class=\"cls-4\"\n                d=\"M117.26,117.71s-2.66-.42-2.72-1.66c-2.41-54.33-7.39-52.22-111.82-54.33-2,0-2.72-2.87-2.72-2.87H117.26Z\"\n                transform=\"translate(0)\"\n              />\n              <path\n                class=\"cls-5\"\n                d=\"M116.35,0s2.66.42,2.72,1.66C121.49,56,126.46,53.88,230.89,56c2,0,2.72,2.87,2.72,2.87H116.35Z\"\n                transform=\"translate(0)\"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n    );\n\n    return <Host style={{ width: `${this.width}px` }}>{svg}</Host>;\n  }\n}\n",":host(c-dropdown) {\n  /**\n   * @prop --c-dropdown-background-color: Menu background color\n   * @prop --c-dropdown-background-color-hover: Menu item hover background color\n   * @prop --c-dropdown-text-color: Menu item text color\n   * @prop --c-dropdown-text-color-active: Active menu item text color\n   */\n  --_c-dropdown-background-color: var(\n    --c-dropdown-background-color,\n    var(--c-white)\n  );\n  --_c-dropdown-background-color-hover: var(\n    --c-dropdown-background-color-hover,\n    var(--c-primary-200)\n  );\n  --_c-dropdown-text-color: var(--c-dropdown-text-color, var(--c-text-body));\n  --_c-dropdown-text-color-active: var(\n    --c-dropdown-text-color-active,\n    var(--c-primary-600)\n  );\n\n  // private\n  --_c-dropdown-font-size: 14px;\n  --_c-dropdown-height: 42px;\n\n  display: block;\n  position: relative;\n\n  mark {\n    background-color: transparent;\n    box-shadow: 0 2px 0 0 var(--_c-dropdown-text-color-active);\n    color: inherit;\n  }\n\n  dialog {\n    border-radius: 4px;\n    background-color: transparent;\n    border: none;\n    margin: -4px 0 0;\n    overflow: visible;\n    padding: 4px 0 0;\n    position: fixed;\n\n    &::backdrop {\n      opacity: 0;\n    }\n\n    &[open].mobile {\n      background-color: var(--_c-dropdown-background-color);\n      width: 100vw;\n      max-width: 100vw;\n      height: 100vh;\n      max-height: 100svh;\n      inset: 0;\n\n      .input-top-wrapper {\n        padding: 8px;\n      }\n    }\n\n    .input-bottom-wrapper.active {\n      padding-top: 8px;\n    }\n  }\n\n  .dummy {\n    display: none;\n  }\n\n  ul {\n    background-color: var(--_c-dropdown-background-color);\n    box-shadow: 2px 4px 10px #00000029;\n    border-radius: 4px;\n    list-style: none;\n    margin: 0;\n    outline: none;\n    padding: 0;\n    pointer-events: auto;\n    visibility: hidden;\n    width: 100%;\n    height: max-content;\n    overflow-y: scroll;\n\n    &.active {\n      visibility: visible;\n      animation: 0.2s 1 fade-in cubic-bezier(0.25, 0.8, 0.5, 1);\n\n      &.mobile {\n        width: 100vw;\n        max-width: 100vw;\n        height: 100vh;\n        max-height: calc(100svh - 60px);\n      }\n    }\n  }\n\n  li {\n    align-items: center;\n    column-gap: 12px;\n    cursor: pointer;\n    display: flex;\n    flex-wrap: nowrap;\n    font-size: var(--_c-dropdown-font-size);\n    min-height: var(--_c-dropdown-height);\n    outline: none;\n    padding-left: 10px;\n    padding-right: 10px;\n    pointer-events: auto;\n    white-space: nowrap;\n    width: 100%;\n    border-radius: 4px;\n\n    span,\n    c-option-value {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 100%;\n    }\n\n    &:hover,\n    &:focus,\n    &.active {\n      background: var(--_c-dropdown-background-color-hover);\n      color: var(--_c-dropdown-text-color-active);\n      box-shadow: inset 0 0 0 1px var(--_c-dropdown-text-color-active);\n    }\n\n    &:not(.disabled, :hover, :focus)[aria-selected=\"true\"] {\n      background: var(--_c-dropdown-background-color-hover);\n      color: var(--_c-dropdown-text-color-active);\n      border-radius: 0;\n    }\n\n    &.disabled {\n      background-color: rgba(var(--c-tertiary-rgb), 0.05);\n      cursor: default;\n      filter: grayscale(1) opacity(0.75);\n    }\n  }\n\n  .visuallyhidden {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  @keyframes fade-in {\n    from {\n      opacity: 0;\n      transform: translateY(-8px);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n}\n","import { mdiAlert, mdiInformation } from '@mdi/js';\nimport {\n  Component,\n  Host,\n  Prop,\n  h,\n  Element,\n  Method,\n  Watch,\n  Event,\n  EventEmitter,\n  State,\n} from '@stencil/core';\nimport { CAutocompleteItem, CSelectItem } from '../../types';\n\n@Component({\n  tag: 'c-dropdown',\n  styleUrl: 'c-dropdown.scss',\n  shadow: true,\n})\nexport class CDropdown {\n  @Element() el: HTMLCDropdownElement;\n\n  /**\n   * Items per page before adding scroll\n   */\n  @Prop() itemsPerPage: number;\n\n  /**\n   * Dropdown parent\n   */\n  @Prop() parent: HTMLCSelectElement | HTMLCAutocompleteElement;\n\n  /**\n   * Dropdown options\n   */\n  @Prop() items:\n    | NodeListOf<HTMLCOptionElement>\n    | CAutocompleteItem[]\n    | CSelectItem[];\n\n  /**\n   * Current index value\n   */\n  @Prop() index: number;\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Triggered when option is selected\n   */\n  @Event() selectOption: EventEmitter;\n\n  /**\n   * Type of the parent element\n   */\n  @Prop() type: 'select' | 'autocomplete';\n\n  /**\n   * Type of items\n   */\n  @Prop() itemType: 'option' | 'item';\n\n  /**\n   * Triggered when dropdown opens or closes\n   */\n  @Event() dropdownStateChange: EventEmitter<boolean>;\n\n  /**\n   * Dropdown dialog element\n   */\n  private _dialog: HTMLDialogElement;\n\n  private _debounce = null;\n\n  private _list: HTMLUListElement;\n\n  private _outsideClickFn: () => void;\n\n  private _resizeObserver: ResizeObserver;\n\n  private _inputElement: HTMLCInputElement;\n\n  private _dummyElement: HTMLDivElement;\n\n  private _isMobile = false;\n\n  private _listItems: HTMLLIElement[] = [];\n\n  private _originalOverflowValue: string;\n\n  @State() renderedList = null;\n\n  @State() isOpen = false;\n\n  @State() statusText = '';\n\n  @Watch('items')\n  optionsWatcher() {\n    requestAnimationFrame(() => {\n      this.renderedList = this._renderList();\n    });\n  }\n\n  @Watch('isOpen')\n  async stateWatcher(isOpen) {\n    this._originalOverflowValue =\n      this._originalOverflowValue ||\n      window.getComputedStyle(document.body).overflow;\n\n    if (isOpen) {\n      this._handleOpen();\n      this._disableScroll();\n    } else {\n      this._enableScroll();\n    }\n\n    this.dropdownStateChange.emit(isOpen);\n  }\n\n  @Watch('index')\n  handleIndexChange(index) {\n    requestAnimationFrame(() => {\n      this._updateStatusText();\n\n      this._listItems[index]?.focus();\n    });\n  }\n\n  /**\n   * @private\n   */\n  @Method()\n  async setStatusText(text: string) {\n    requestAnimationFrame(() => {\n      this.statusText = text;\n    });\n  }\n\n  /**\n   * @private\n   */\n  @Method()\n  async focusItem(index: number) {\n    requestAnimationFrame(() => {\n      this._listItems[index]?.focus();\n    });\n  }\n\n  /**\n   * Open dropdown\n   */\n  @Method()\n  async open() {\n    if (this._dialog.open) return;\n\n    this._outsideClickFn = this._handleOutsideClick.bind(this);\n\n    this._dialog.addEventListener('click', this._outsideClickFn);\n\n    requestAnimationFrame(() => {\n      this.isOpen = true;\n\n      this._positionMenu();\n    });\n  }\n\n  /**\n   * Close dropdown\n   */\n  @Method()\n  async close() {\n    this._dialog.close();\n\n    this.isOpen = false;\n\n    this._inputElement.slot = 'default';\n\n    this._inputElement.hideDetails = this._hideDetails;\n\n    this._dummyElement.style.width = '0';\n    this._dummyElement.style.display = 'none';\n    this._dialog.style.width = '0';\n\n    window.removeEventListener('click', this._outsideClickFn);\n  }\n\n  private _setIsMobile() {\n    this._isMobile = window.matchMedia(\n      'only screen and (max-width: 760px)',\n    ).matches;\n  }\n\n  private _isOpening = false;\n\n  private _handleOpen() {\n    this._isOpening = true;\n\n    setTimeout(() => {\n      this._isOpening = false;\n    }, 500);\n  }\n\n  private _disableScroll() {\n    document.body.style.overflow = 'hidden';\n  }\n\n  private _enableScroll() {\n    if (\n      this._originalOverflowValue &&\n      this._originalOverflowValue !== 'visible'\n    ) {\n      document.body.style.overflow = this._originalOverflowValue;\n\n      return;\n    }\n\n    document.body.style.removeProperty('overflow');\n  }\n\n  componentDidLoad() {\n    this._setIsMobile();\n\n    this._hideDetails = this.parent.hideDetails;\n\n    this._inputElement = this.el.querySelector('c-input');\n\n    this._resizeObserver = new ResizeObserver((entries) => {\n      if (!this._dialog.open) return;\n\n      requestAnimationFrame(() => {\n        if (!Array.isArray(entries) || !entries.length || this._isOpening)\n          return;\n\n        this._setIsMobile();\n\n        this.close();\n      });\n    });\n\n    this._resizeObserver.observe(window.document.body);\n\n    requestAnimationFrame(() => {\n      this.renderedList = this._renderList();\n    });\n  }\n\n  /**\n   * Select item\n   * @returns the disabled status of the input\n   */\n  @Method()\n  async selectItem(index: number) {\n    const item = this._listItems[index];\n\n    if (item.classList.contains('disabled')) {\n      return true;\n    }\n\n    this._listItems[index].click();\n\n    return false;\n  }\n\n  /**\n   * Update list items\n   */\n  @Method()\n  async updateList() {\n    requestAnimationFrame(() => {\n      this.renderedList = this._renderList();\n    });\n  }\n\n  private _handleOutsideClick() {\n    if (!this.isOpen) return;\n\n    this.close();\n  }\n\n  private _inputSize = {\n    height: 0,\n    width: 0,\n  };\n\n  private _openedOnTop = false;\n\n  private _hideDetails = false;\n\n  private _highlightMatchingText(value: string) {\n    const { query } = this.parent as HTMLCAutocompleteElement;\n\n    if (this.parent.tagName === 'C-SELECT' || query === '') return value;\n\n    const regex = new RegExp(query, 'gi');\n\n    const highlighted = value\n      .replace(/(<([^>]+)>)/gi, '')\n      .replace(regex, (match) => `<mark>${match}</mark>`);\n\n    return highlighted;\n  }\n\n  private _getParentPosition() {\n    return this.parent.shadowRoot\n      .querySelector('.c-input__slot')\n      .getBoundingClientRect();\n  }\n\n  private _positionMenu() {\n    const { innerWidth, innerHeight } = window;\n\n    this._dialog.style.width = 'auto';\n    this._dialog.style.opacity = '0';\n\n    this._dialog.showModal();\n\n    requestAnimationFrame(() => {\n      let inputSlot = 'input-top';\n\n      const { top: parentTop, width } = this._getParentPosition();\n\n      const inputSize = this.el.getBoundingClientRect();\n\n      this._inputSize = {\n        height: inputSize.height,\n        width: inputSize.width,\n      };\n\n      if (!this._isMobile) {\n        this._dialog.style.width = `${width}px`;\n        this._dialog.style.top = `${inputSize.top}px`;\n        this._dialog.style.bottom = 'auto';\n        this._dialog.style.left = `${inputSize.left}px`;\n\n        const { bottom, right, height } = this._dialog.getBoundingClientRect();\n\n        const isInView = {\n          x: right < innerWidth,\n          y: bottom < innerHeight,\n        };\n\n        const fitsOnTop = parentTop - height > 0;\n\n        if (!fitsOnTop && !isInView.y) {\n          this._dialog.style.maxHeight = `${parentTop}px`;\n        }\n\n        if (!isInView.y || this._openedOnTop) {\n          this._openedOnTop = true;\n\n          this._inputElement.hideDetails = true;\n          inputSlot = 'input-bottom';\n\n          this._dialog.style.top = 'auto';\n          this._dialog.style.bottom = `${innerHeight - inputSize.top - 44}px`;\n        }\n      }\n\n      this._dummyElement.style.width = `${this._getParentPosition().width}px`;\n      this._dummyElement.style.height = `${this._inputSize.height}px`;\n      this._dummyElement.style.display = 'block';\n      this._dummyElement.slot = 'default';\n\n      this._inputElement.slot = inputSlot;\n\n      this._inputElement.hideDetails = true;\n\n      this._dialog.style.opacity = '1';\n\n      const input = this.parent.shadowRoot.querySelector('input');\n\n      input.focus();\n    });\n  }\n\n  private _minimumQueryItem() {\n    const { query, loading, minimumQueryLength, minimumQueryLengthMessage } =\n      this.parent as HTMLCAutocompleteElement;\n\n    if (query.length > minimumQueryLength || loading) return;\n\n    return (\n      <li>\n        <c-icon\n          path={mdiInformation}\n          size={18}\n          color=\"var(--c-info-600)\"\n        ></c-icon>\n        {minimumQueryLengthMessage.replace(\n          '{n}',\n          minimumQueryLength.toString(),\n        )}\n      </li>\n    );\n  }\n\n  private _emptyItem() {\n    const { query, loading, noMatchingItemsMessage } = this\n      .parent as HTMLCAutocompleteElement;\n\n    if (!query || loading) return;\n\n    return (\n      <li>\n        <c-icon path={mdiAlert} size={18} color=\"var(--c-warning-600)\"></c-icon>\n        {noMatchingItemsMessage}\n      </li>\n    );\n  }\n\n  private _renderList() {\n    return this.itemType === 'option'\n      ? this._renderOptionsList()\n      : this._renderItemsList();\n  }\n\n  private _renderOptionsList() {\n    if (!this.items.length)\n      return this._minimumQueryItem() || this._emptyItem();\n\n    const options = Array.from(this.items) as HTMLCOptionElement[];\n\n    this._listItems.length = 0;\n\n    return options.map((option, index) => {\n      const optionValue = option.querySelector('c-option-value');\n\n      if (optionValue) {\n        optionValue.innerHTML = this._highlightMatchingText(\n          optionValue.textContent,\n        );\n      }\n\n      return (\n        <li\n          ref={(el) => this._listItems.push(el)}\n          id={`${this.hostId}-option-${option.value}`}\n          tabindex=\"-1\"\n          role=\"option\"\n          aria-set-size={this.items.length.toString()}\n          aria-pos-in-set={(index + 1).toString()}\n          aria-selected={(!!option.selected).toString()}\n          class={{ disabled: !!option.disabled }}\n          data-name={option.name}\n          onClick={(event) => {\n            if (option.disabled) {\n              event.preventDefault();\n\n              return;\n            }\n\n            this.selectOption.emit({ name: option.name, value: option.value });\n          }}\n          innerHTML={option.outerHTML}\n        ></li>\n      );\n    });\n  }\n\n  private _renderItemsList() {\n    if (!this.items.length)\n      return this._minimumQueryItem() || this._emptyItem();\n\n    this._listItems.length = 0;\n\n    return (this.items as unknown as CAutocompleteItem[]).map((item, index) => {\n      return (\n        <li\n          ref={(el) => this._listItems.push(el)}\n          id={`${this.hostId}-option-${item.value}`}\n          tabindex=\"-1\"\n          role=\"option\"\n          aria-set-size={this.items.length.toString()}\n          aria-pos-in-set={(index + 1).toString()}\n          aria-selected={(this.index === index).toString()}\n          class={{ disabled: !!item.disabled }}\n          data-name={item.name}\n          onClick={(event) => {\n            if (item.disabled) {\n              event.preventDefault();\n\n              return;\n            }\n\n            this.selectOption.emit({ name: item.name, value: item.value });\n          }}\n        >\n          <span innerHTML={this._highlightMatchingText(item.name)}></span>\n        </li>\n      );\n    });\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      const selection = this._listItems[this.index];\n\n      const ending = !!this.items.length\n        ? ', to navigate use up and down arrows'\n        : '';\n\n      const total = this._listItems.length;\n\n      const position = this.index + 1;\n\n      const isDisabled = !!selection?.classList?.contains('disabled');\n\n      const beginning = isDisabled ? 'Disabled option - ' : '';\n\n      let selectionText = !!selection\n        ? `${beginning}${selection.dataset.name} -  ${position} of ${total} is highlighted`\n        : null;\n\n      if (this.index === null && this.type === 'autocomplete') {\n        selectionText = this.items.length\n          ? `${this.items.length} result${\n              this.items.length !== 1 ? 's' : ''\n            } available`\n          : 'No search results available';\n      }\n\n      this.statusText = `${selectionText || ending}`;\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  render() {\n    if (\n      !this._isMobile &&\n      this._dialog &&\n      this.itemsPerPage &&\n      this.itemsPerPage > 0 &&\n      this.items.length > this.itemsPerPage\n    ) {\n      this._dialog.style.maxHeight = 42 * (this.itemsPerPage + 0.5) + 60 + 'px';\n      this._list.style.maxHeight = 42 * (this.itemsPerPage + 0.5) + 'px';\n    }\n\n    return (\n      <Host>\n        <slot name=\"default\"></slot>\n\n        <div class=\"dummy\" ref={(el) => (this._dummyElement = el)}></div>\n\n        <dialog\n          tabindex=\"-1\"\n          ref={(el) => (this._dialog = el)}\n          class={{ mobile: this._isMobile }}\n          onCancel={() => this.close()}\n        >\n          <div onClick={(event) => event.stopPropagation()}>\n            <div\n              id={'announce-' + this.hostId}\n              class=\"visuallyhidden\"\n              aria-live=\"polite\"\n              aria-atomic=\"true\"\n            >\n              {this.statusText}\n            </div>\n\n            <div class=\"input-top-wrapper\">\n              <slot name=\"input-top\"></slot>\n            </div>\n\n            <ul\n              ref={(el) => (this._list = el)}\n              id={`${this.hostId}--results`}\n              role=\"listbox\"\n              aria-expanded={this.isOpen.toString()}\n              class={{ active: this.isOpen, mobile: this._isMobile }}\n              tabindex=\"-1\"\n            >\n              {this.renderedList}\n            </ul>\n\n            <div\n              class={{\n                active: this._openedOnTop,\n                'input-bottom-wrapper': true,\n              }}\n            >\n              <slot name=\"input-bottom\"></slot>\n            </div>\n          </div>\n        </dialog>\n      </Host>\n    );\n  }\n}\n",":host(c-icon) {\n  /**\n   * @prop --c-icon-color: Color of the icon\n   */\n  --_c-icon-color: var(\n    --c-icon-color,\n    var(--_c-icon-default-color, curentColor)\n  );\n\n  // private\n  --_c-icon-size: var(--c-icon-size, 24px);\n\n  display: inline-flex;\n  align-items: center;\n  height: var(--_c-icon-size);\n  width: var(--_c-icon-size);\n\n  svg {\n    height: var(--_c-icon-size);\n    width: var(--_c-icon-size);\n\n    path {\n      fill: var(--_c-icon-color);\n    }\n  }\n}\n","import { Component, Host, h, Prop, Element } from '@stencil/core';\n\n/**\n * @group Other\n */\n@Component({\n  tag: 'c-icon',\n  styleUrl: 'c-icon.scss',\n  shadow: true,\n})\nexport class CIcon {\n  @Element() host: HTMLCIconElement;\n\n  /**\n   * Svg path d attribute value\n   */\n  @Prop() path: string;\n\n  /**\n   * Icon size in pixels\n   */\n  @Prop() size = 24;\n\n  /**\n   * Fill color\n   */\n  @Prop() color = 'currentColor';\n\n  private _pathElement: SVGElement;\n\n  componentDidLoad() {\n    // workaround to make the icon work as a c-option child\n    this._pathElement.setAttribute('d', this.host.dataset.path);\n  }\n\n  render() {\n    return (\n      <Host\n        style={{\n          '--_c-icon-size': `${this.size}px`,\n          '--_c-icon-default-color': this.color,\n        }}\n        data-path={this.path}\n      >\n        <svg viewBox=\"0 0 24 24\">\n          <path ref={(el) => (this._pathElement = el)} />\n        </svg>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-icon-button-background-color: Default icon button background color\n   * @prop --c-icon-button-background-color-hover: Default icon button hover background\n   * @prop --c-icon-button-badge-background-color: Default icon button badge background color\n   * @prop --c-icon-button-badge-border-color: Default icon button badge outline color\n   * @prop --c-icon-button-badge-text-color: Default icon button badge text color\n   * @prop --c-icon-button-border-radius: Icon button border radius\n   * @prop --c-icon-button-outline-color: Default icon button outline color\n   * @prop --c-icon-button-text-color: Default icon button text color\n   */\n  --_c-icon-button-background-color: var(--c-icon-button-background-color, var(--c-primary-600));\n  --_c-icon-button-background-color-hover: var(--c-icon-button-background-color-hover, var(--c-primary-400));\n  --_c-icon-button-badge-background-color: var(--c-icon-button-badge-background-color, var(--c-warning-600));\n  --_c-icon-button-badge-border-color: var(--c-icon-button-badge-border-color, var(--c-white));\n  --_c-icon-button-badge-text-color: var(--c-icon-button-badge-text-color, var(--c-white));\n  --_c-icon-button-border-radius: var(--c-icon-button-border-radius, 50%);\n  --_c-icon-button-outline-color: var(--c-icon-button-outline-color, var(--c-primary-600));\n  --_c-icon-button-text-color: var(--c-icon-button-text-color, var(--c-white));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-text-color);\n  --_c-icon-button-height: 40px;\n  --_c-icon-button-width: 40px;\n  --_c-icon-button-outline-offset: var(--c-icon-button-outline-offset, 2px);\n\n  display: block;\n  position: relative;\n  border-radius: var(--_c-icon-button-border-radius);\n\n  button {\n    background-color: transparent;\n    color: currentColor;\n    display: inline-grid;\n    place-items: center;\n    border: none;\n    padding: 0;\n    position: relative;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    transition:\n      background-color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1),\n      color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n    outline: none;\n    border-radius: var(--_c-icon-button-border-radius);\n\n    &:disabled {\n      cursor: default;\n    }\n  }\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-badge-text-color));\n  }\n}\n\n:host(.c-icon-button) button {\n  appearance: none;\n}\n\n:host(.c-icon-button) {\n  font-family: var(--c-font-family);\n  display: flex;\n  border: none;\n  padding: 0;\n  width: var(--_c-icon-button-width);\n  height: var(--_c-icon-button-height);\n  background-color: var(--_c-icon-button-background-color);\n  color: var(--_c-icon-button-text-color);\n  transition: background-color 0.3s ease;\n  cursor: pointer;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  backface-visibility: hidden;\n  transform: translate3d(0, 0, 0);\n  line-height: normal;\n\n  ::slotted(c-icon) {\n    --_c-icon-size: 24px;\n  }\n\n  ::slotted(svg),\n  ::slotted(i),\n  ::slotted(span) {\n    width: 24px;\n    height: 24px;\n    font-size: 24px;\n  }\n\n  ::slotted(*),\n  svg {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n:host(:host:hover) {\n  background-color: var(--_c-icon-button-background-color-hover);\n}\n\n:host(.c-icon-button--small) {\n  --_c-icon-button-height: 32px;\n  --_c-icon-button-width: 32px;\n\n  ::slotted(c-icon) {\n    --_c-icon-size: 20px;\n  }\n\n  ::slotted(svg),\n  ::slotted(i),\n  ::slotted(span) {\n    width: 22px !important;\n    height: 22px !important;\n    font-size: 16px !important;\n  }\n}\n\n:host(.c-icon-button--x-small) {\n  --_c-icon-button-height: 28px;\n  --_c-icon-button-width: 28px;\n\n  ::slotted(c-icon) {\n    --_c-icon-size: 14px;\n  }\n\n  ::slotted(svg),\n  ::slotted(i),\n  ::slotted(span) {\n    width: 18px !important;\n    height: 18px !important;\n    font-size: 14px !important;\n  }\n}\n\n:host(.c-icon-button) button:focus {\n  outline: none;\n}\n\n:host(.c-icon-button) button:focus-visible {\n  outline: 2px var(--_c-icon-button-outline-color) solid;\n  outline-offset: var(--_c-icon-button-outline-offset);\n}\n\n:host(.c-icon-button--inverted) {\n  /**\n   * @prop --c-icon-button-inverted-background-color: Inverted default button background color\n   * @prop --c-icon-button-inverted-text-color: Iverted default button text color\n   * @prop --c-icon-button-inverted-background-color-hover: Inverted default button hover background color\n   * @prop --c-icon-button-inverted-badge-background-color: Iverted default button badge background color\n   * @prop --c-icon-button-inverted-badge-border-color: Iverted default button badge outline color\n   * @prop --c-icon-button-inverted-badge-text-color: Iverted default button badge text color\n   */\n  --_c-icon-button-inverted-background-color: var(--c-icon-button-inverted-background-color, var(--c-white));\n  --_c-icon-button-inverted-text-color: var(--c-icon-button-inverted-text-color, var(--c-primary-600));\n  --_c-icon-button-inverted-background-color-hover: var(--c-icon-button-inverted-background-color-hover, var(--c-primary-200));\n  --_c-icon-button-inverted-badge-background-color: var(--c-icon-button-inverted-badge-background-color, var(--_c-icon-button-badge-background-color));\n  --_c-icon-button-inverted-badge-border-color: var(--c-icon-button-inverted-badge-border-color, var(--c-transparent));\n  --_c-icon-button-inverted-badge-text-color: var(--c-icon-button-inverted-badge-text-color, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-inverted-text-color);\n\n  background-color: var(--_c-icon-button-inverted-background-color);\n  color: var(--_c-icon-button-inverted-text-color);\n\n  c-badge {\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-inverted-badge-border-color));\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-inverted-badge-background-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-inverted-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--inverted:hover) {\n  background-color: var(--_c-icon-button-inverted-background-color-hover);\n}\n\n:host(.c-icon-button--inverted.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-inverted-background-color-disabled: Disabled inverted default icon button background color\n   * @prop --c-icon-button-inverted-text-color-disabled: Disabled inverted default icon button text color\n   * @prop --c-icon-button-inverted-outline-color-disabled: Disabled inverted default icon button outline color\n   * @prop --c-icon-button-inverted-badge-background-color-disabled: Disabled inverted default icon button badge background color\n   * @prop --c-icon-button-inverted-badge-border-color-disabled: Disabled inverted default icon button badge border color\n   * @prop --c-icon-button-inverted-badge-text-color-disabled: Disabled inverted default icon button badge text color\n   */\n  --_c-icon-button-inverted-background-color-disabled: var(--c-icon-button-inverted-background-color-disabled, var(--_c-icon-button-background-color-disabled));\n  --_c-icon-button-inverted-text-color-disabled: var(--c-icon-button-inverted-text-color-disabled, var(--_c-icon-button-text-color-disabled));\n  --_c-icon-button-inverted-outline-color-disabled: var(--c-icon-button-inverted-outline-color-disabled, var(--_c-icon-button-outline-color-disabled));\n  --_c-icon-button-inverted-badge-background-color-disabled: var(--c-icon-button-inverted-badge-background-color-disabled, var(--c-tertiary-200));\n  --_c-icon-button-inverted-badge-border-color-disabled: var(--c-icon-button-inverted-badge-border-color-disabled, var(--c-transparent));\n  --_c-icon-button-inverted-badge-text-color-disabled: var(--c-icon-button-inverted-badge-text-color-disabled, var(--c-tertiary-700));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-inverted-text-color-disabled);\n\n  background-color: var(--_c-icon-button-inverted-background-color-disabled);\n  color: var(--_c-icon-button-inverted-text-color-disabled);\n  pointer-events: none;\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-inverted-badge-background-color-disabled));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-inverted-badge-border-color-disabled));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-inverted-badge-text-color-disabled));\n  }\n\n  .icon-button-badge {\n    background: #acacac;\n  }\n}\n\n:host(.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-background-color-disabled: Disabled default icon button background color\n   * @prop --c-icon-button-background-color-disabled-hover: Disabled default icon button hover background color\n   * @prop --c-icon-button-text-color-disabled: Disabled default icon button text color\n   * @prop --c-icon-button-outline-color-disabled: Disabled default icon button outline color\n   * @prop --c-icon-button-badge-background-color-disabled: Disabled default icon button badge background color\n   * @prop --c-icon-button-badge-border-color-disabled: Disabled default icon button badge border color\n   * @prop --c-icon-button-badge-text-color-disabled: Disabled default icon button badge text color\n   */\n  --_c-icon-button-background-color-disabled: var(--c-icon-button-background-color-disabled, var(--c-tertiary-100));\n  --_c-icon-button-background-color-disabled-hover: var(--c-icon-button-background-color-disabled-hover, var(--c-tertiary-100));\n  --_c-icon-button-text-color-disabled: var(--c-icon-button-text-color-disabled, var(--c-tertiary-600));\n  --_c-icon-button-outline-color-disabled: var(--c-icon-button-outline-color-disabled, var(--c-tertiary-600));\n  --_c-icon-button-badge-background-color-disabled: var(--c-icon-button-badge-background-color-disabled, var(--c-tertiary-600));\n  --_c-icon-button-badge-border-color-disabled: var(--c-icon-button-badge-border-color-disabled, var(--_c-icon-button-badge-border-color));\n  --_c-icon-button-badge-text-color-disabled: var(--c-icon-button-badge-text-color-disabled, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-text-color-disabled);\n\n  background-color: var(--_c-icon-button-background-color-disabled);\n  color: var(--_c-icon-button-text-color-disabled);\n  pointer-events: none;\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-badge-background-color-disabled));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-badge-border-color-disabled));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-badge-text-color-disabled));\n  }\n}\n\n:host(.c-icon-button--danger) {\n  /**\n   * @prop --c-icon-button-danger-background-color: Danger icon button background color\n   * @prop --c-icon-button-danger-text-color: Danger icon button text color\n   * @prop --c-icon-button-danger-background-color-hover: Danger icon button hover background color\n   * @prop --c-icon-button-danger-badge-background-color: Danger icon button badge background color\n   * @prop --c-icon-button-danger-badge-border-color: Danger icon button badge border color\n   * @prop --c-icon-button-danger-badge-text-color: Danger icon button badge text color\n   */\n  --_c-icon-button-danger-background-color: var(--c-icon-button-danger-background-color, var(--c-error-600));\n  --_c-icon-button-danger-text-color: var(--c-icon-button-danger-text-color, var(--c-white));\n  --_c-icon-button-danger-background-color-hover: var(--c-icon-button-danger-background-color-hover, var(--c-error-400));\n  --_c-icon-button-danger-badge-background-color: var(--c-icon-button-danger-badge-background-color, var(--_c-icon-button-badge-background-color));\n  --_c-icon-button-danger-badge-border-color: var(--c-icon-button-danger-badge-border-color, var(--_c-icon-button-badge-border-color));\n  --_c-icon-button-danger-badge-text-color: var(--c-icon-button-danger-badge-text-color, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-danger-text-color);\n\n  background-color: var(--_c-icon-button-danger-background-color);\n  color: var(--_c-icon-button-danger-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-danger-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-danger-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-danger-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--danger:hover) {\n  background-color: var(--_c-icon-button-danger-background-color-hover);\n}\n\n:host(.c-icon-button--danger.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-danger-background-color-disabled: Danger icon button background color\n   * @prop --c-icon-button-danger-text-color-disabled: Danger icon button text color\n   * @prop --c-icon-button-danger-badge-background-color-disabled: Danger icon button badge background color\n   * @prop --c-icon-button-danger-badge-border-color-disabled: Danger icon button badge border color\n   * @prop --c-icon-button-danger-badge-text-color-disabled: Danger icon button badge text color\n   */\n  --_c-icon-button-danger-background-color-disabled: var(--c-icon-button-danger-background-color-disabled, var(--_c-icon-button-background-color-disabled));\n  --_c-icon-button-danger-text-color-disabled: var(--c-icon-button-danger-text-color-disabled, var(--_c-icon-button-text-color-disabled));\n  --_c-icon-button-danger-badge-background-color-disabled: var(--c-icon-button-danger-badge-background-color-disabled, var(--_c-icon-button-badge-background-color-disabled));\n  --_c-icon-button-danger-badge-border-color-disabled: var(--c-icon-button-danger-badge-border-color-disabled, var(--_c-icon-button-badge-border-color-disabled));\n  --_c-icon-button-danger-badge-text-color-disabled: var(--c-icon-button-danger-badge-text-color-disabled, var(--_c-icon-button-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-danger-text-color-disabled);\n\n  background-color: var(--_c-icon-button-danger-background-color-disabled);\n  color: var(--_c-icon-button-danger-text-color-disabled);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-danger-badge-background-color-disabled));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-danger-badge-border-color-disabled));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-danger-badge-text-color-disabled));\n  }\n}\n\n:host(.c-icon-button--danger.c-icon-button--inverted) {\n  /**\n   * @prop --c-icon-button-danger-inverted-background-color: Danger icon button background color\n   * @prop --c-icon-button-danger-inverted-text-color: Danger icon button text color\n   * @prop --c-icon-button-danger-inverted-background-color-hover: Danger icon button hover background color\n   * @prop --c-icon-button-danger-inverted-badge-background-color: Danger icon button badge background color\n   * @prop --c-icon-button-danger-inverted-badge-border-color: Danger icon button badge border color\n   * @prop --c-icon-button-danger-inverted-badge-text-color: Danger icon button badge text color\n   */\n  --_c-icon-button-danger-inverted-background-color: var(--_c-icon-button-inverted-background-color);\n  --_c-icon-button-danger-inverted-text-color: var(--_c-icon-button-danger-background-color);\n  --_c-icon-button-danger-inverted-badge-background-color: var(--_c-icon-button-inverted-badge-background-color);\n  --_c-icon-button-danger-inverted-badge-border-color: var(--_c-icon-button-inverted-badge-border-color);\n  --_c-icon-button-danger-inverted-badge-text-color: var(--_c-icon-button-inverted-badge-text-color);\n  --_c-icon-button-loader-color: var(--_c-icon-button-danger-inverted-text-color);\n\n  background-color: var(--_c-icon-button-danger-inverted-background-color);\n  color: var(--_c-icon-button-danger-inverted-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-danger-inverted-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-danger-inverted-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-danger-inverted-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--danger.c-icon-button--inverted.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-danger-inverted-background-color: Danger icon button background color\n   * @prop --c-icon-button-danger-inverted-text-color: Danger icon button text color\n   * @prop --c-icon-button-danger-inverted-background-color-hover: Danger icon button hover background color\n   * @prop --c-icon-button-danger-inverted-badge-background-color: Danger icon button badge background color\n   * @prop --c-icon-button-danger-inverted-badge-border-color: Danger icon button badge border color\n   * @prop --c-icon-button-danger-inverted-badge-text-color: Danger icon button badge text color\n   */\n  --_c-icon-button-danger-inverted-disabled-background-color: var(--_c-icon-button-background-color-disabled);\n  --_c-icon-button-danger-inverted-disabled-text-color: var(--_c-icon-button-text-color-disabled);\n  --_c-icon-button-danger-inverted-disabled-badge-background-color: var(--_c-icon-button-inverted-badge-background-color-disabled);\n  --_c-icon-button-danger-inverted-disabled-badge-border-color: var(--_c-icon-button-inverted-badge-border-color);\n  --_c-icon-button-danger-inverted-disabled-badge-text-color: var(--_c-icon-button-inverted-badge-text-color-disabled);\n  --_c-icon-button-loader-color: var(--_c-icon-button-danger-inverted-disabled-text-color);\n\n  background-color: var(--_c-icon-button-danger-inverted-disabled-background-color);\n  color: var(--_c-icon-button-danger-inverted-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-danger-inverted-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-danger-inverted-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-danger-inverted-disabled-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--ghost) {\n  /**\n   * @prop --c-icon-button-ghost-background-color: Ghost icon button background color\n   * @prop --c-icon-button-ghost-text-color: Ghost icon button text color\n   * @prop --c-icon-button-ghost-background-color-hover: Ghost icon button hover background color\n   * @prop --c-icon-button-ghost-badge-background-color: Ghost icon button badge background color\n   * @prop --c-icon-button-ghost-badge-border-color: Ghost icon button badge border color\n   * @prop --c-icon-button-ghost-badge-text-color: Ghost icon button badge text color\n   */\n  --_c-icon-button-ghost-background-color: var(--c-icon-button-ghost-background-color, rgba(var(--c-primary-rgb), 0.2));\n  --_c-icon-button-ghost-text-color: var(--c-icon-button-ghost-text-color, var(--c-primary-600));\n  --_c-icon-button-ghost-background-color-hover: var(--c-icon-button-ghost-background-color-hover, rgba(var(--c-primary-rgb), 0.3));\n  --_c-icon-button-ghost-badge-background-color: var(--c-icon-button-ghost-badge-background-color, var(--_c-icon-button-badge-background-color));\n  --_c-icon-button-ghost-badge-border-color: var(--c-icon-button-ghost-badge-border-color, var(--_c-icon-button-badge-border-color));\n  --_c-icon-button-ghost-badge-text-color: var(--c-icon-button-ghost-badge-text-color, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-ghost-text-color);\n\n  background-color: var(--_c-icon-button-ghost-background-color);\n  color: var(--_c-icon-button-ghost-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--ghost:hover) {\n  background-color: var(--_c-icon-button-ghost-background-color-hover);\n}\n\n:host(.c-icon-button--ghost.c-icon-button--inverted) {\n  /**\n   * @prop --c-icon-button-ghost-inverted-background-color: Inverted ghost icon button background color\n   * @prop --c-icon-button-ghost-inverted-background-color-hover: Inverted ghost icon button hover background color\n   * @prop --c-icon-button-ghost-inverted-text-color: Inverted ghost icon button text color\n   * @prop --c-icon-button-ghost-inverted-badge-background-color: Inverted ghost icon button badge background color\n   * @prop --c-icon-button-ghost-inverted-badge-border-color: Inverted ghost icon button badge border border color\n   * @prop --c-icon-button-ghost-inverted-badge-text-color: Inverted ghost icon button badge text color\n   */\n  --_c-icon-button-ghost-inverted-background-color: var(--c-icon-button-ghost-inverted-background-color, rgba(var(--c-white-rgb), 0.2));\n  --_c-icon-button-ghost-inverted-background-color-hover: var(--c-icon-button-ghost-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));\n  --_c-icon-button-ghost-inverted-text-color: var(--c-icon-button-ghost-inverted-text-color, var(--c-white));\n  --_c-icon-button-ghost-inverted-badge-background-color: var(--c-icon-button-ghost-inverted-badge-background-color, var(--_c-icon-button-inverted-badge-background-color));\n  --_c-icon-button-ghost-inverted-badge-border-color: var(--c-icon-button-ghost-inverted-badge-border-color, var(--_c-icon-button-inverted-badge-border-color));\n  --_c-icon-button-ghost-inverted-badge-text-color: var(--c-icon-button-ghost-inverted-badge-text-color, var(--_c-icon-button-inverted-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-ghost-inverted-text-color);\n\n  background-color: var(--_c-icon-button-ghost-inverted-background-color);\n  color: var(--_c-icon-button-ghost-inverted-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-ghost-inverted-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-ghost-inverted-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-ghost-inverted-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--ghost.c-icon-button--inverted:hover) {\n  background-color: var(--_c-icon-button-ghost-inverted-background-color-hover);\n}\n\n:host(.c-icon-button--ghost.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-ghost-disabled-background-color: Disabled ghost icon button background color\n   * @prop --c-icon-button-ghost-disabled-text-color: Disabled ghost icon button text color\n   * @prop --c-icon-button-ghost-disabled-background-color-hover: Disabled ghost icon button hover background color\n   * @prop --c-icon-button-ghost-disabled-badge-background-color: Disabled ghost icon button badge background color\n   * @prop --c-icon-button-ghost-disabled-badge-border-color: Disabled ghost icon button badge border color\n   * @prop --c-icon-button-ghost-disabled-badge-text-color: Disabled ghost icon button badge text color\n   */\n  --_c-icon-button-ghost-disabled-background-color: var(--c-icon-button-ghost-disabled-background-color, var(--c-tertiary-200));\n  --_c-icon-button-ghost-disabled-text-color: var(--c-icon-button-ghost-disabled-text-color, var(--c-tertiary-500));\n  --_c-icon-button-ghost-disabled-background-color-hover: var(--c-icon-button-ghost-disabled-background-color-hover, var(--c-tertiary-100));\n  --_c-icon-button-ghost-disabled-badge-background-color: var(--c-icon-button-ghost-disabled-badge-background-color, var(--_c-icon-button-badge-background-color-disabled));\n  --_c-icon-button-ghost-disabled-badge-border-color: var(--c-icon-button-ghost-disabled-badge-border-color, var(--_c-icon-button-badge-border-color-disabled));\n  --_c-icon-button-ghost-disabled-badge-text-color: var(--c-icon-button-ghost-disabled-badge-text-color, var(--_c-icon-button-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-ghost-disabled-text-color);\n\n  background-color: var(--_c-icon-button-ghost-disabled-background-color);\n  color: var(--_c-icon-button-ghost-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-ghost-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-ghost-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-ghost-disabled-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--ghost.c-icon-button--disabled:hover) {\n  background-color: var(--_c-icon-button-ghost-disabled-background-color-hover);\n}\n\n:host(.c-icon-button--ghost.c-icon-button--inverted.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-ghost-inverted-disabled-background-color: Disabled ghost icon button background color\n   * @prop --c-icon-button-ghost-inverted-disabled-text-color: Disabled ghost icon button text color\n   * @prop --c-icon-button-ghost-inverted-disabled-badge-background-color: Disabled ghost icon button badge background color\n   * @prop --c-icon-button-ghost-inverted-disabled-badge-border-color: Disabled ghost icon button badge border color\n   * @prop --c-icon-button-ghost-inverted-disabled-badge-text-color: Disabled ghost icon button badge text color\n   */\n  --_c-icon-button-ghost-inverted-disabled-background-color: var(--c-icon-button-ghost-inverted-disabled-background-color, rgba(var(--c-white-rgb), 0.05));\n  --_c-icon-button-ghost-inverted-disabled-text-color: var(--c-icon-button-ghost-inverted-disabled-text-color, var(--c-tertiary-400));\n  --_c-icon-button-ghost-inverted-disabled-badge-background-color: var(--c-icon-button-ghost-inverted-disabled-badge-background-color, var(--_c-icon-button-inverted-badge-background-color-disabled));\n  --_c-icon-button-ghost-inverted-disabled-badge-border-color: var(--c-icon-button-ghost-inverted-disabled-badge-border-color, var(--_c-icon-button-inverted-badge-border-color));\n  --_c-icon-button-ghost-inverted-disabled-badge-text-color: var(--c-icon-button-ghost-inverted-disabled-badge-text-color, var(--_c-icon-button-inverted-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-ghost-inverted-disabled-text-color);\n\n  background-color: var(--_c-icon-button-ghost-inverted-disabled-background-color);\n  color: var(--_c-icon-button-ghost-inverted-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-ghost-inverted-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-ghost-inverted-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-ghost-inverted-disabled-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--text) {\n  /**\n   * @prop --c-icon-button-text-text-color: Text icon button text color\n   * @prop --c-icon-button-text-background-color: Text icon button background color\n   * @prop --c-icon-button-text-background-color-hover: Text icon button hover background color\n   * @prop --c-icon-button-text-badge-background-color: Text icon button badge background color\n   * @prop --c-icon-button-text-badge-border-color: Text icon button badge border color\n   * @prop --c-icon-button-text-badge-text-color: Text icon button badge text color\n   */\n  --_c-icon-button-text-text-color: var(--c-icon-button-text-text-color, var(--c-primary-600));\n  --_c-icon-button-text-background-color: var(--c-icon-button-text-background-color, var(--c-transparent));\n  --_c-icon-button-text-background-color-hover: var(--c-icon-button-text-background-color-hover, var(--c-primary-100));\n  --_c-icon-button-text-badge-background-color: var(--c-icon-button-text-badge-background-color, var(--_c-icon-button-badge-background-color));\n  --_c-icon-button-text-badge-border-color: var(--c-icon-button-text-badge-border-color, var(--_c-icon-button-badge-border-color));\n  --_c-icon-button-text-badge-text-color: var(--c-icon-button-text-badge-text-color, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-text-text-color);\n\n  background-color: var(--_c-icon-button-text-background-color);\n  color: var(--_c-icon-button-text-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-text-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-text-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-text-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--text:hover) {\n  background-color: var(--_c-icon-button-text-background-color-hover);\n}\n\n:host(.c-icon-button--text.c-icon-button--inverted) {\n  /**\n   * @prop --c-icon-button-text-text-color: Text icon button text color\n   * @prop --c-icon-button-text-background-color: Text icon button background color\n   * @prop --c-icon-button-text-background-color-hover: Text icon button hover background color\n   * @prop --c-icon-button-text-badge-background-color: Text icon button badge background color\n   * @prop --c-icon-button-text-badge-border-color: Text icon button badge border color\n   * @prop --c-icon-button-text-badge-text-color: Text icon button badge text color\n   */\n  --_c-icon-button-text-inverted-text-color: var(--c-icon-button-text-inverted-text-color, var(--c-white));\n  --_c-icon-button-text-inverted-background-color: var(--c-icon-button-text-inverted-background-color, var(--c-transparent));\n  --_c-icon-button-text-inverted-background-color-hover: var(--c-icon-button-text-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.2));\n  --_c-icon-button-text-inverted-badge-background-color: var(--c-icon-button-text-inverted-badge-background-color, var(--_c-icon-button-badge-background-color));\n  --_c-icon-button-text-inverted-badge-border-color: var(--c-icon-button-text-inverted-badge-border-color, var(--_c-icon-button-inverted-badge-border-color));\n  --_c-icon-button-text-inverted-badge-text-color: var(--c-icon-button-text-inverted-badge-text-color, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-text-inverted-text-color);\n\n  background-color: var(--_c-icon-button-text-inverted-background-color);\n  color: var(--_c-icon-button-text-inverted-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-text-inverted-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-text-inverted-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-text-inverted-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--text.c-icon-button--inverted:hover) {\n  background-color: var(--_c-icon-button-text-inverted-background-color-hover);\n}\n\n:host(.c-icon-button--text.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-text-disabled-text-color: Disabled text icon button text color\n   * @prop --c-icon-button-text-disabled-background-color: Disabled text icon button background color\n   * @prop --c-icon-button-text-disabled-badge-background-color: Disabled text icon button badge background color\n   * @prop --c-icon-button-text-disabled-badge-border-color: Disabled text icon button badge border color\n   * @prop --c-icon-button-text-disabled-badge-text-color: Disabled text icon button badge text color\n   */\n  --_c-icon-button-text-disabled-text-color: var(--c-icon-button-text-disabled-text-color, var(--c-tertiary-400));\n  --_c-icon-button-text-disabled-background-color: var(--c-icon-button-text-disabled-background-color, var(--c-transparent));\n  --_c-icon-button-text-disabled-badge-background-color: var(--c-icon-button-text-disabled-badge-background-color, var(--_c-icon-button-badge-background-color-disabled));\n  --_c-icon-button-text-disabled-badge-border-color: var(--c-icon-button-text-disabled-badge-border-color, var(--_c-icon-button-badge-border-color-disabled));\n  --_c-icon-button-text-disabled-badge-text-color: var(--c-icon-button-text-disabled-badge-text-color, var(--_c-icon-button-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-text-disabled-text-color);\n\n  background-color: var(--_c-icon-button-text-disabled-background-color);\n  color: var(--_c-icon-button-text-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-text-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-text-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-text-disabled-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--text.c-icon-button--inverted.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-text-inverted-disabled-text-color: Disabled inverted text icon button text color\n   * @prop --c-icon-button-text-inverted-disabled-background-color: Disabled inverted text icon button background color\n   * @prop --c-icon-button-text-inverted-disabled-badge-background-color: Disabled inverted text icon button badge background color\n   * @prop --c-icon-button-text-inverted-disabled-badge-border-color: Disabled inverted text icon button badge border color\n   * @prop --c-icon-button-text-inverted-disabled-badge-text-color: Disabled inverted text icon button badge text color\n   */\n  --_c-icon-button-text-inverted-disabled-text-color: var(--c-icon-button-text-inverted-disabled-text-color, var(--c-tertiary-400));\n  --_c-icon-button-text-inverted-disabled-background-color: var(--c-icon-button-text-inverted-disabled-background-color, var(--c-transparent));\n  --_c-icon-button-text-inverted-disabled-badge-background-color: var(--c-icon-button-text-inverted-disabled-badge-background-color, var(--_c-icon-button-inverted-badge-background-color-disabled));\n  --_c-icon-button-text-inverted-disabled-badge-border-color: var(--c-icon-button-text-inverted-disabled-badge-border-color, var(--_c-icon-button-inverted-badge-border-color-disabled));\n  --_c-icon-button-text-inverted-disabled-badge-text-color: var(--c-icon-button-text-inverted-disabled-badge-text-color, var(--_c-icon-button-inverted-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-text-inverted-disabled-text-color);\n\n  background-color: var(--_c-icon-button-text-inverted-disabled-background-color);\n  color: var(--_c-icon-button-text-inverted-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-text-inverted-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-text-inverted-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-text-inverted-disabled-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--outlined) {\n  /**\n   * @prop --c-icon-button-outlined-text-color: Outlined icon button text color\n   * @prop --c-icon-button-outlined-background-color: Outlined icon button background color\n   * @prop --c-icon-button-outlined-background-color-hover: Outlined icon button hover background color\n   * @prop --c-icon-button-outlined-border-color: Outlined icon button border color\n   * @prop --c-icon-button-outlined-badge-background-color: Outlined icon button badge background color\n   * @prop --c-icon-button-outlined-badge-border-color: Outlined icon button badge border color\n   * @prop --c-icon-button-outlined-badge-text-color: Outlined icon button badge text color\n   */\n  --_c-icon-button-outlined-text-color: var(--c-icon-button-outlined-text-color, var(--c-primary-600));\n  --_c-icon-button-outlined-background-color: var(--c-icon-button-outlined-background-color, var(--c-transparent));\n  --_c-icon-button-outlined-background-color-hover: var(--c-icon-button-outlined-background-color-hover, rgba(var(--c-primary-rgb), 0.1));\n  --_c-icon-button-outlined-border-color: var(--c-icon-button-outlined-border-color, var(--_c-icon-button-outlined-text-color));\n  --_c-icon-button-outlined-badge-background-color: var(--c-icon-button-outlined-badge-background-color, var(--_c-icon-button-badge-background-color));\n  --_c-icon-button-outlined-badge-border-color: var(--c-icon-button-outlined-badge-border-color, var(--_c-icon-button-badge-border-color));\n  --_c-icon-button-outlined-badge-text-color: var(--c-icon-button-outlined-badge-text-color, var(--_c-icon-button-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-outlined-text-color);\n\n  background-color: var(--_c-icon-button-outlined-background-color);\n  box-shadow: inset 0 0 0 2px var(--_c-icon-button-outlined-border-color);\n  color: var(--_c-icon-button-outlined-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-outlined-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-outlined-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-outlined-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--outlined:hover) {\n  background-color: var(--_c-icon-button-outlined-background-color-hover);\n}\n\n:host(.c-icon-button--outlined.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-outlined-disabled-text-color: Disabled outlined icon button text color\n   * @prop --c-icon-button-outlined-disabled-background-color: Disabled outlined icon button background color\n   * @prop --c-icon-button-outlined-disabled-border-color: Disabled outlined icon button border color\n   * @prop --c-icon-button-outlined-disabled-badge-background-color: Disabled outlined icon button badge background color\n   * @prop --c-icon-button-outlined-disabled-badge-border-color: Disabled outlined icon button badge border color\n   * @prop --c-icon-button-outlined-disabled-badge-text-color: Disabled outlined icon button badge text color\n   */\n  --_c-icon-button-outlined-disabled-text-color: var(--c-icon-button-outlined-disabled-text-color, var(--c-tertiary-500));\n  --_c-icon-button-outlined-disabled-background-color: var(--c-icon-button-outlined-disabled-background-color, var(--c-transparent));\n  --_c-icon-button-outlined-disabled-border-color: var(--c-icon-button-outlined-disabled-border-color, var(--c-tertiary-400));\n  --_c-icon-button-outlined-disabled-badge-background-color: var(--c-icon-button-outlined-disabled-badge-background-color, var(--_c-icon-button-badge-background-color-disabled));\n  --_c-icon-button-outlined-disabled-badge-border-color: var(--c-icon-button-outlined-disabled-badge-border-color, var(--_c-icon-button-badge-border-color-disabled));\n  --_c-icon-button-outlined-disabled-badge-text-color: var(--c-icon-button-outlined-disabled-badge-text-color, var(--_c-icon-button-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-outlined-disabled-text-color);\n\n  background-color: var(--_c-icon-button-outlined-disabled-background-color);\n  box-shadow: inset 0 0 0 2px var(--_c-icon-button-outlined-disabled-border-color);\n  color: var(--_c-icon-button-outlined-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-outlined-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-outlined-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-outlined-disabled-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--outlined.c-icon-button--inverted) {\n  /**\n   * @prop --c-icon-button-outlined-inverted-text-color: Inverted outlined icon button text color\n   * @prop --c-icon-button-outlined-inverted-background-color: Inverted outlined icon button background color\n   * @prop --c-icon-button-outlined-inverted-background-color-hover: INverted outlined icon button hover background color\n   * @prop --c-icon-button-outlined-inverted-border-color: Inverted outlined icon button border color\n   * @prop --c-icon-button-outlined-inverted-badge-background-color: Inverted outlined icon button badge background color\n   * @prop --c-icon-button-outlined-inverted-badge-border-color: Inverted outlined icon button badge border color\n   * @prop --c-icon-button-outlined-inverted-badge-text-color: Inverted outlined icon button badge text color\n   */\n  --_c-icon-button-outlined-inverted-text-color: var(--c-icon-button-outlined-inverted-text-color, var(--c-white));\n  --_c-icon-button-outlined-inverted-background-color: var(--c-icon-button-outlined-inverted-background-color, var(--c-transparent));\n  --_c-icon-button-outlined-inverted-background-color-hover: var(--c-icon-button-outlined-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.2));\n  --_c-icon-button-outlined-inverted-border-color: var(--c-icon-button-outlined-inverted-border-color, var(--_c-icon-button-outlined-inverted-text-color));\n  --_c-icon-button-outlined-inverted-badge-background-color: var(--c-icon-button-outlined-inverted-badge-background-color, var(--_c-icon-button-inverted-badge-background-color));\n  --_c-icon-button-outlined-inverted-badge-border-color: var(--c-icon-button-outlined-inverted-badge-border-color, var(--_c-icon-button-inverted-badge-border-color));\n  --_c-icon-button-outlined-inverted-badge-text-color: var(--c-icon-button-outlined-inverted-badge-text-color, var(--_c-icon-button-inverted-badge-text-color));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-outlined-inverted-text-color);\n\n  background-color: var(--_c-icon-button-outlined-inverted-background-color);\n  box-shadow: inset 0 0 0 2px var(--_c-icon-button-outlined-inverted-border-color);\n  color: var(--_c-icon-button-outlined-inverted-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-outlined-inverted-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-outlined-inverted-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-outlined-inverted-badge-text-color));\n  }\n}\n\n:host(.c-icon-button--outlined.c-icon-button--inverted:hover) {\n  background-color: var(--_c-icon-button-outlined-inverted-background-color-hover);\n}\n\n:host(.c-icon-button--outlined.c-icon-button--inverted.c-icon-button--disabled) {\n  /**\n   * @prop --c-icon-button-outlined-inverted-disabled-text-color: Disabled outlined icon button text color\n   * @prop --c-icon-button-outlined-inverted-disabled-background-color: Disabled outlined icon button background color\n   * @prop --c-icon-button-outlined-inverted-disabled-border-color: Disabled outlined icon button border color\n   * @prop --c-icon-button-outlined-inverted-disabled-badge-background-color: Disabled outlined icon button badge background color\n   * @prop --c-icon-button-outlined-inverted-disabled-badge-border-color: Disabled outlined icon button badge border color\n   * @prop --c-icon-button-outlined-inverted-disabled-badge-text-color: Disabled outlined icon button badge text color\n   */\n  --_c-icon-button-outlined-inverted-disabled-text-color: var(--c-icon-button-outlined-inverted-disabled-text-color, var(--c-tertiary-400));\n  --_c-icon-button-outlined-inverted-disabled-background-color: var(--c-icon-button-outlined-inverted-disabled-background-color, var(--c-transparent));\n  --_c-icon-button-outlined-inverted-disabled-border-color: var(--c-icon-button-outlined-inverted-disabled-border-color, var(--c-tertiary-500));\n  --_c-icon-button-outlined-inverted-disabled-badge-background-color: var(--c-icon-button-outlined-inverted-disabled-badge-background-color, var(--_c-icon-button-inverted-badge-background-color-disabled));\n  --_c-icon-button-outlined-inverted-disabled-badge-border-color: var(--c-icon-button-outlined-inverted-disabled-badge-border-color, var(--_c-icon-button-inverted-badge-border-color-disabled));\n  --_c-icon-button-outlined-inverted-disabled-badge-text-color: var(--c-icon-button-outlined-inverted-disabled-badge-text-color, var(--_c-icon-button-inverted-badge-text-color-disabled));\n\n  // private\n  --_c-icon-button-loader-color: var(--_c-icon-button-outlined-iverted-disabled-text-color);\n\n  background-color: var(--_c-icon-button-outlined-inverted-disabled-background-color);\n  box-shadow: inset 0 0 0 2px var(--_c-icon-button-outlined-inverted-disabled-border-color);\n  color: var(--_c-icon-button-outlined-inverted-disabled-text-color);\n\n  c-badge {\n    --_c-badge-background-color: var(--c-badge-background-color, var(--_c-icon-button-outlined-inverted-disabled-badge-background-color));\n    --_c-badge-text-color: var(--c-badge-text-color, var(--_c-icon-button-outlined-inverted-disabled-badge-border-color));\n    --_c-badge-border-color: var(--c-badge-border-color, var(--_c-icon-button-outlined-inverted-disabled-badge-text-color));\n  }\n}\n\n::slotted(*),\nsvg {\n  pointer-events: none;\n}\n\n.inner-container {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  inset: 0;\n  justify-content: center;\n  overflow: hidden;\n  position: relative;\n  transform: translateZ(0);\n  width: 100%;\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\n\n/**\n * @group Buttons\n * @slot Default slot - Default slot for the icon\n */\n@Component({\n  tag: 'c-icon-button',\n  styleUrl: 'c-icon-button.scss',\n  shadow: true,\n})\nexport class CIconButton {\n  /**\n   * Show a badge on top of the icon\n   */\n  @Prop() badge: string;\n\n  /**\n   * Danger variant of the button\n   */\n  @Prop() danger = false;\n\n  /**\n   * Loading variant of the button\n   */\n  @Prop() loading = false;\n\n  /**\n   * Text variant of the button\n   */\n  @Prop() text = false;\n\n  /**\n   * Inverted color for dark backgrounds\n   */\n  @Prop() inverted = false;\n\n  /**\n   * Outlined variant of the button\n   */\n  @Prop() outlined = false;\n\n  /**\n   * Path for the svg icon\n   */\n  @Prop() path: string = null;\n\n  /**\n   * Ghost variant of the button\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Disable the button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Size of the button\n   */\n  @Prop() size: 'default' | 'x-small' | 'small' = 'default';\n\n  private _container?: HTMLDivElement;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  private _renderBadge() {\n    return <c-badge>{this.badge}</c-badge>;\n  }\n\n  private _hostClasses() {\n    return {\n      'c-icon-button': true,\n      'c-icon-button--disabled': !!this.disabled,\n      'c-icon-button--danger': !!this.danger,\n      'c-icon-button--text': !!this.text,\n      'c-icon-button--ghost': !!this.ghost,\n      'c-icon-button--outlined': !!this.outlined,\n      'c-icon-button--inverted': !!this.inverted,\n      'c-icon-button--small': this.size === 'small',\n      'c-icon-button--x-small': this.size === 'x-small',\n    };\n  }\n\n  private _onClick = (event) => {\n    this._rippleElement.createRipple(event, this._container);\n  };\n\n  render() {\n    const spinnerSizes = {\n      'x-small': 18,\n      small: 20,\n      default: 24,\n    };\n\n    return (\n      <Host class={this._hostClasses()}>\n        <button disabled={this.disabled} onClick={this._onClick}>\n          <div\n            class=\"inner-container\"\n            ref={(el) => (this._container = el as HTMLDivElement)}\n          >\n            {this.loading && (\n              <c-spinner\n                color=\"var(--_c-icon-button-loader-color)\"\n                size={spinnerSizes[this.size]}\n              />\n            )}\n\n            {!this.loading && (\n              <slot>\n                {this.path && (\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                    <path d={this.path} />\n                  </svg>\n                )}\n              </slot>\n            )}\n          </div>\n\n          {this.badge && this._renderBadge()}\n\n          <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n        </button>\n      </Host>\n    );\n  }\n}\n",":host(c-input) {\n  --_c-input-inactive-color: var(--c-tertiary-600);\n  --_c-input-active-color: var(--c-primary-600);\n  --_c-input-background-color: var(--c-transparent);\n  --_c-input-text-color: var(--c-text-body);\n  --_c-input-placeholder-color: var(--c-tertiary-500);\n  --_c-input-shadow-active-color: var(--_c-input-active-color);\n  --_c-input-shadow-background-color: var(--c-white);\n  --_c-input-shadow-text-color: var(--_c-input-text-color);\n  --_c-input-shadow-placeholder-color: var(--_c-input-placeholder-color);\n\n  // private\n  --_c-input-error-color: var(--c-error-600);\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-input {\n  $this: &;\n\n  --_c-input-border-width: 1px;\n\n  align-items: flex-start;\n  border-radius: 4px;\n  display: flex;\n  flex: 1 1 auto;\n  font-family: var(--c-font-family);\n  font-size: 16px;\n  letter-spacing: normal;\n  max-width: 100%;\n  text-align: left;\n\n  input,\n  select,\n  textarea {\n    background: none;\n    border: 0;\n    display: inline-block;\n    font-family: var(--c-font-family);\n    font-size: 16px;\n    line-height: 1;\n    margin: 0;\n    padding: 0;\n    vertical-align: middle;\n    white-space: normal;\n  }\n\n  input,\n  textarea {\n    box-sizing: content-box;\n    background-color: transparent;\n    border: none;\n    color: var(--_c-input-text-color);\n    flex: 1 1 auto;\n    font-family: var(--c-font-family);\n    font-size: 16px;\n    line-height: 20px;\n    max-width: 100%;\n    min-width: 0;\n    width: 100%;\n  }\n\n  input[type=\"checkbox\"],\n  input[type=\"radio\"],\n  select {\n    box-sizing: border-box;\n  }\n\n  input[type=\"search\"] {\n    appearance: textfield;\n    box-sizing: content-box;\n  }\n\n  ::-webkit-search-decoration {\n    display: none;\n  }\n\n  textarea {\n    margin-top: 4px;\n    min-height: 44px;\n    overflow: auto;\n    padding: 8px 12px 8px 0;\n    resize: vertical;\n    vertical-align: top;\n  }\n\n  input {\n    max-height: 32px;\n    padding: 8px 0;\n  }\n\n  input:focus,\n  input:active,\n  input[aria-expanded=\"true\"],\n  textarea:focus,\n  textarea:active {\n    outline: none;\n  }\n\n  .c-input__content {\n    align-items: center;\n    display: flex;\n    width: 100%;\n\n    slot {\n      display: none;\n    }\n\n    c-icon-button {\n      aspect-ratio: 1;\n      margin-right: -6px;\n    }\n  }\n\n  &__control {\n    border-radius: inherit;\n    color: currentColor;\n    display: flex;\n    flex-flow: column wrap;\n    flex-grow: 1;\n    gap: 8px;\n    height: auto;\n    min-width: 0;\n    width: 100%;\n    position: relative;\n  }\n\n  &__slot {\n    align-items: stretch;\n    background: transparent;\n    border-radius: inherit;\n    color: inherit;\n    cursor: text;\n    display: flex;\n    min-height: 44px;\n    padding: 0 12px;\n    position: relative;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n    width: 100%;\n  }\n\n  &__field {\n    align-items: center;\n    display: flex;\n    flex: 1 1 auto;\n    gap: 8px;\n    position: relative;\n\n    input,\n    textarea {\n      flex: 1;\n      outline: 0;\n    }\n\n    label {\n      font-size: 16px;\n      height: 20px;\n      left: 0;\n      letter-spacing: normal;\n      line-height: 20px;\n      max-width: 90%;\n      min-height: 8px;\n      overflow: hidden;\n      pointer-events: none;\n      position: absolute;\n      right: auto;\n      text-overflow: ellipsis;\n      top: 12px;\n      transform-origin: top left;\n      transform: translateX(var(--_c-input-label-position)) translateY(0)\n        scale(1);\n      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1) 0.08s;\n      white-space: nowrap;\n\n      &.active {\n        transform: translateY(-18px) scale(0.75);\n      }\n\n      span {\n        color: var(--c-error-600);\n      }\n    }\n  }\n\n  &--select {\n    input {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .c-input__slot {\n      cursor: pointer;\n    }\n  }\n\n  fieldset {\n    background-color: var(--_c-input-background-color);\n    border-collapse: collapse;\n    border-color: var(--_c-input-inactive-color);\n    border-radius: inherit;\n    border-style: solid;\n    border-width: var(--_c-input-border-width);\n    inset: 0;\n    margin: 0;\n    padding: 0 0 0 8px;\n    pointer-events: none;\n    position: absolute;\n    transition-duration: 0.15s;\n    transition-property: color;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    legend {\n      float: none;\n      line-height: 11px;\n      margin-left: -1px;\n      padding: 0;\n      text-align: left;\n      transition: width 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      width: 0;\n\n      &.active {\n        width: var(--_c-input-legend-width);\n      }\n    }\n  }\n\n  &--shadow {\n    #{$this} {\n      &__slot {\n        background-color: var(--_c-input-shadow-background-color);\n        box-shadow: rgba(0, 0, 0, 0.15) 0 5px 15px 0;\n\n        input,\n        textarea {\n          color: var(--_c-input-shadow-text-color);\n        }\n\n        &:focus-within {\n          outline: 2px var(--_c-input-active-color) solid;\n\n          c-icon {\n            --c-icon-color: var(--_c-input-shadow-active-color) !important;\n          }\n        }\n      }\n    }\n\n    input::placeholder,\n    textarea::placeholder {\n      color: var(--_c-input-shadow-placeholder-color);\n      opacity: 1;\n    }\n  }\n\n  &--disabled {\n    input,\n    textarea,\n    fieldset,\n    label {\n      --_c-input-error-color: var(--c-tertiary-500);\n\n      color: var(--c-tertiary-500);\n    }\n  }\n\n  &--textarea {\n    #{$this} {\n      &__field {\n        margin-right: -12px;\n      }\n    }\n  }\n\n  ::placeholder {\n    color: var(--_c-input-placeholder-color);\n    opacity: 1;\n  }\n\n  &:focus-within,\n  &--active,\n  &:not(.c-input--disabled):active {\n    --_c-input-border-width: 2px;\n\n    color: var(--_c-input-active-color);\n\n    fieldset {\n      border-color: var(--_c-input-active-color);\n    }\n\n    label {\n      color: var(--_c-input-active-color);\n      transform: translateX(0) translateY(-18px) scale(0.75);\n    }\n\n    legend {\n      width: var(--_c-input-legend-width);\n    }\n  }\n\n  &.active:not(.filled) {\n    .c-input-menu__input {\n      position: relative;\n\n      &::after {\n        display: flex;\n        align-items: center;\n        position: absolute;\n        inset: 0;\n        content: attr(data-placeholder);\n        pointer-events: none;\n        color: var(--_c-input-placeholder-color);\n      }\n    }\n  }\n\n  &--error {\n    color: var(--c-error-600);\n\n    fieldset {\n      border-color: var(--c-error-600) !important;\n    }\n\n    label {\n      color: var(--c-error-600) !important;\n    }\n\n    &:focus-within {\n      color: var(--c-error-600);\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  h,\n  State,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  Watch,\n  Method,\n} from '@stencil/core';\nimport { CAutocompleteItem, CSelectItem } from '../../types';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-input',\n  styleUrl: 'c-input.scss',\n  shadow: false,\n})\nexport class CInput {\n  @Element() el!: HTMLCInputElement;\n\n  /**\n   * Active state\n   */\n  @Prop() active = false;\n\n  /**\n   * Auto focus the input\n   */\n  @Prop() autofocus = false;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Render a hidden input outside the shadow dom\n   */\n  @Prop() form = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the input\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Id of the input element\n   */\n  @Prop() inputId: string;\n\n  /**\n   * Items for the dropdown\n   */\n  @Prop() items: CSelectItem[];\n\n  /**\n   * Items per page before adding scroll\n   */\n  @Prop() itemsPerPage = 6;\n\n  /**\n   * Label of the input\n   */\n  @Prop() label: string;\n\n  /**\n   * Maximum value on a numeric input\n   */\n  @Prop() max: number = null;\n\n  /**\n   * Minimum value on a numeric input\n   */\n  @Prop() min: number = null;\n\n  /**\n   * Name of the input\n   */\n  @Prop() name: string;\n\n  /**\n   * Placeholder of the input\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Mark as readonly\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Set the input as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Rows on the input\n   */\n  @Prop() rows = 1;\n\n  /**\n   * Shadow variant of the input\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Step size on a numeric input\n   */\n  @Prop() step: number = null;\n\n  /**\n   * Type of the input\n   */\n  @Prop() type: string;\n\n  /**\n   * Set the validíty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Value of the input\n   */\n  @Prop() value: string | number | boolean | CSelectItem | CAutocompleteItem;\n\n  /**\n   * Variant\n   */\n  @Prop() variant: 'text' | 'select' = 'text';\n\n  /**\n   * Emit changes to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  /**\n   * Emit click to the parent\n   * @private\n   */\n  @Event({ bubbles: false }) itemClick: EventEmitter;\n\n  /**\n   * Emit close to the parent\n   * @private\n   */\n  @Event({ bubbles: false }) dropdownClose: EventEmitter;\n\n  @State() isFocused = false;\n\n  @State() labelWidth = 0;\n\n  @State() preSlotWidth = 0;\n\n  @State() statusText = '';\n\n  @State() currentIndex: number = null;\n\n  @Watch('valid')\n  onValidChange() {\n    if (this.validateOnBlur && !this._hasBlurred) return;\n\n    this._setAriaDescriptionId();\n  }\n\n  @Watch('validation')\n  onValidationMessageChange() {\n    this._updateStatusText();\n  }\n\n  @Watch('value')\n  onValueChange(value) {\n    if (!value) {\n      this._onReset();\n    }\n  }\n\n  @Watch('placeholder')\n  onPlaceholderChange(placeholder) {\n    if (placeholder) this._onReset();\n  }\n\n  private _hasBlurred = false;\n\n  private _labelRef: HTMLLabelElement;\n\n  private _debounce = null;\n\n  private _dropdownElement: HTMLCDropdownElement;\n\n  /**\n   * @private\n   */\n  @Method()\n  async reset() {\n    this._onReset();\n  }\n\n  componentDidLoad() {\n    if (this.autofocus) {\n      setTimeout(() => {\n        this._onFocus(false);\n      }, 500);\n    }\n\n    this._calculateElementWidths();\n    this._setAriaDescriptionId();\n\n    if (this.label) {\n      this._observer.observe(this._labelRef);\n    }\n\n    this.inputField?.addEventListener('focus', () => this._onFocus(false));\n    this.inputField?.addEventListener('blur', () => this._onBlur());\n    this.inputField?.addEventListener(\n      'keypress',\n      this._preventNonNumericalInput,\n    );\n\n    // hide the placeholder text initially if there is a label\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !!this.label || !this.placeholder ? '' : this.placeholder;\n\n      this.inputField.title = this.label ?? this.placeholder;\n\n      requestAnimationFrame(() => {\n        const container = this.inputField.closest(\n          '.c-input-menu__input',\n        ) as HTMLDivElement;\n\n        if (!container) return;\n\n        container.dataset.placeholder = this.placeholder;\n      });\n    }\n  }\n\n  disconnectedCallback() {\n    this.inputField?.removeEventListener('focus', () => this._onFocus(false));\n    this.inputField?.removeEventListener('blur', () => this._onBlur());\n    this.inputField?.removeEventListener(\n      'keypress',\n      this._preventNonNumericalInput,\n    );\n\n    this._observer.disconnect();\n\n    this._dropdownElement?.remove();\n  }\n\n  get isActive() {\n    return !!this.value || typeof this.value === 'boolean' || this.isFocused;\n  }\n\n  private _setAriaDescriptionId() {\n    this.inputField.removeAttribute('aria-describedby');\n\n    let type = null;\n\n    if (this.valid && !this.value && this.hint) {\n      type = 'hint';\n    }\n\n    if (!this.valid) {\n      type = 'error';\n    }\n\n    if (type) {\n      this.inputField.setAttribute(\n        'aria-describedby',\n        `${type}-${this.inputId}`,\n      );\n    }\n  }\n\n  private _observer = new IntersectionObserver(\n    (entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this._calculateElementWidths();\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    { threshold: 1 },\n  );\n\n  private _calculateElementWidths() {\n    this.labelWidth = !!this.label ? this._labelRef.scrollWidth * 0.75 + 6 : 0;\n    this.preSlotWidth = this.inputField.offsetLeft;\n  }\n\n  private _onBlur = () => {\n    // delay the blur event to prevent the label from 'flashing' on c-select selection\n    setTimeout(() => {\n      this.isFocused = false;\n\n      this._hasBlurred = true;\n\n      // show the label if there's no label or value\n      this._onReset();\n    }, 100);\n  };\n\n  private _onFocus = (click = true) => {\n    if (this.disabled) return;\n\n    this.isFocused = true;\n\n    this.inputField?.focus();\n\n    if (click) {\n      this.inputField?.click();\n\n      if (this.variant === 'select') {\n        this.itemClick.emit();\n      }\n    }\n\n    // show the label if there's no value\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !!this.value || !this.placeholder ? '' : this.placeholder;\n    }\n  };\n\n  private _onReset() {\n    if (this.inputField) {\n      if (\n        !!this.placeholder &&\n        !this.value &&\n        (this.active || this.isFocused)\n      ) {\n        this.inputField.placeholder = this.placeholder;\n\n        return;\n      }\n\n      this.inputField.placeholder =\n        !this.label && !this.value && !!this.placeholder\n          ? this.placeholder\n          : '';\n    }\n  }\n\n  /**\n   * Prevent non numeric values in the numeric fields\n   */\n  private _preventNonNumericalInput(event: KeyboardEvent) {\n    if (this.type !== 'number') return;\n\n    if (!event.key.match(/^[0-9,\\.-]+$/)) {\n      event.preventDefault();\n    }\n  }\n\n  private _renderBorders() {\n    if (this.shadow) return;\n\n    const classes = {\n      active: this.isActive || this.active,\n    };\n\n    return (\n      <fieldset aria-hidden=\"true\">\n        <legend\n          class={classes}\n          style={{\n            '--_c-input-legend-width': this.labelWidth + 'px',\n          }}\n        >\n          <span class=\"notranslate\"></span>\n        </legend>\n      </fieldset>\n    );\n  }\n\n  private _renderLabel() {\n    if (!this.label) return;\n\n    const classes = {\n      active: this.isActive,\n    };\n\n    return (\n      <label\n        htmlFor={this.inputId}\n        ref={(el) => (this._labelRef = el as HTMLLabelElement)}\n        class={classes}\n      >\n        {this.label}\n        {this.required && <span>&nbsp;*</span>}\n      </label>\n    );\n  }\n\n  get inputField() {\n    return this.el?.querySelector('.c-input__input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      this.statusText = this.valid ? '' : `Error: ${this.validation}`;\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  render() {\n    const containerClasses = {\n      'c-input': true,\n      'c-input--disabled': this.disabled,\n      'c-input--shadow': this.shadow,\n      'c-input--textarea': this.rows > 1,\n      'c-input--error': !this.valid,\n      'c-input--active': this.isFocused || this.active,\n      filled: !!this.value,\n      [`c-input--${this.variant}`]: true,\n    };\n\n    return (\n      <Host disabled={this.disabled}>\n        <div\n          id={'announce-' + this.inputId}\n          class=\"visuallyhidden\"\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n        >\n          {this.statusText}\n        </div>\n\n        <div class={containerClasses}>\n          <div class=\"c-input__control\">\n            <div class=\"c-input__slot\" onClick={() => this._onFocus()}>\n              {this._renderBorders()}\n\n              <div\n                class=\"c-input__field\"\n                style={{\n                  '--_c-input-label-position': this.preSlotWidth + 'px',\n                }}\n              >\n                <slot name=\"pre\"></slot>\n\n                {this._renderLabel()}\n\n                <slot></slot>\n              </div>\n            </div>\n\n            {this.variant === 'select' && <slot name=\"dropdown\"></slot>}\n\n            {!this.hideDetails && (\n              <c-message\n                hint={this.hint}\n                inputId={this.inputId}\n                valid={this.valid}\n                validation={this.validation}\n              />\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-loader-color: Loader color\n   * @prop --c-loader-background-color: Loader background color\n   * @prop --c-loader-text-color: Loader text color\n   */\n  --_c-loader-color: var(--c-loader-color, var(--c-primary-600));\n  --_c-loader-background-color: var(--c-loader-background-color, rgba(var(--c-white-rgb), 0.8));\n  --_c-loader-text-color: var(--c-loader-text-color, var(--c-text-system));\n\n  // private\n  --_c-stroke-start-dasharray: 1, 200;\n  --_c-stroke-end-dasharray: 89, 200;\n\n  width: 100%;\n  position: absolute;\n  inset: 0;\n  z-index: 6;\n  background: var(--_c-loader-background-color);\n  border-radius: inherit;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n}\n\n:host(.active) {\n  opacity: 1;\n  visibility: visible;\n\n  .c-loader {\n    transform: scale(1);\n  }\n}\n\n.c-loader {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  transform: scale(0.5);\n  transition: transform 0.3s ease-in-out;\n\n  &__slot {\n    line-height: 40px;\n    font-size: 14px;\n    color: var(--_c-loader-text-color);\n    text-align: center;\n    font-weight: 500;\n    display: block;\n    max-height: 0;\n    overflow: hidden;\n    animation-duration: 4s;\n    animation-direction: forwards;\n    animation-iteration-count: 1;\n    animation-name: fadein;\n    animation-fill-mode: forwards;\n  }\n}\n\n@keyframes rotate {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes animate-stroke {\n  0% {\n    stroke-dasharray: var(--_c-stroke-start-dasharray);\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: var(--_c-stroke-end-dasharray);\n    stroke-dashoffset: -35;\n  }\n\n  100% {\n    stroke-dasharray: var(--_c-stroke-end-dasharray);\n    stroke-dashoffset: -124;\n  }\n}\n\n@keyframes fadein {\n  0% {\n    max-height: 0;\n  }\n\n  100% {\n    max-height: 300px;\n  }\n}\n","import { Component, Element, Host, h, Prop, Watch } from '@stencil/core';\n\n/**\n * A loader component that fills the nearest containing element that has css-property position set to 'relative'\n *\n * @group Indicators\n */\n@Component({\n  tag: 'c-loader',\n  styleUrl: 'c-loader.scss',\n  shadow: true,\n})\nexport class CLoader {\n  /**\n   * Delay in seconds of showing the contents in the slot of the loader\n   */\n  @Prop() contentdelay = 0;\n\n  /**\n   * Hide the loader\n   */\n  @Prop() hide = false;\n\n  /**\n   * Size of the loader\n   */\n  @Prop() size = 48;\n\n  /**\n   * Width of the loader\n   */\n  @Prop() width = 4;\n\n  @Element() el: HTMLCLoaderElement;\n\n  @Watch('hide')\n  onElementHide(hide) {\n    requestAnimationFrame(() => this.el.classList.toggle('active', !hide));\n  }\n\n  componentDidLoad() {\n    requestAnimationFrame(() => this.el.classList.toggle('active', !this.hide));\n  }\n\n  render() {\n    const slotHasContent = !!this.el.childNodes.length;\n\n    const styles = {\n      '--c-loader-size': `${this.size}px`,\n    };\n\n    return (\n      <Host>\n        <div class=\"c-loader\" style={styles}>\n          <c-spinner\n            color=\"var(--_c-loader-color)\"\n            size={this.size}\n            width={this.width}\n          />\n\n          {slotHasContent && (\n            <div\n              class=\"c-loader__slot\"\n              style={{ 'animation-delay': `${this.contentdelay}s` }}\n            >\n              <slot />\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host(c-main) {\n  /**\n   * @prop --c-main-background-color: Background color\n   * @prop --c-main-text-color: Text color\n   */\n  --_c-main-background-color: var(--c-main-background-color, var(--c-primary-200));\n  --_c-main-text-color: var(--c-main-text-color, var(--c-text-body));\n\n  background: var(--_c-main-background-color);\n  color: var(--_c-main-text-color);\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n\n  ::slotted(*) {\n    color: var(--_c-main-text-color);\n  }\n\n  main.dashboard {\n    display: grid;\n    grid-template: \"toolbar toolbar\" auto \"sidenav page\" 1fr / auto 1fr;\n    gap: 0;\n    \n    ::slotted(c-toolbar) {\n      grid-area: toolbar;\n    }\n    \n    ::slotted(c-page) {\n      grid-area: page;\n    }\n    \n    ::slotted(c-side-navigation) {\n      grid-area: sidenav;\n    }\n  }\n}\n\n*,\n::after,\n::before,\nbody {\n  box-sizing: border-box;\n  margin: 0;\n}\n","import { Component, Prop, h } from '@stencil/core';\n/**\n * Wrapper component for the whole page\n *\n * @group Layout\n * @slot Default slot - Contents of the page\n */\n@Component({\n  tag: 'c-main',\n  styleUrl: 'c-main.scss',\n  shadow: true,\n})\nexport class CMain {\n  /**\n   * Disable the default dashboard layout\n   */\n  @Prop() disableLayout = false;\n\n  render() {\n    return (\n      <main class={{ dashboard: !this.disableLayout }}>\n        <slot></slot>\n      </main>\n    );\n  }\n}\n",":host {\n  --_c-message-error-color: var(--c-error-600);\n  --_c-message-hint-color: var(--c-text-system);\n\n  display: block;\n  line-height: 1;\n  padding: 0 12px;\n}\n\n.c-message {\n  $this: &;\n\n  &--active {\n    #{$this} {\n      &-item {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n  }\n\n  &-item {\n    font-size: 12px;\n    min-height: 16px;\n    opacity: 0;\n    transform: translateY(-4px);\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &--hint {\n      color: var(--_c-message-hint-color);\n    }\n\n    &--error {\n      color: var(--_c-message-error-color);\n    }\n\n    span {\n      align-items: flex-start;\n      color: currentColor;\n      display: flex;\n      gap: 4px;\n      min-height: 16px;\n    }\n\n    svg {\n      fill: currentColor;\n      height: 16px;\n      width: 16px;\n      position: relative;\n      top: -2px;\n    }\n  }\n\n  .visuallyhidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n}\n","import { mdiCloseCircle } from '@mdi/js';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-message',\n  styleUrl: 'c-message.scss',\n  shadow: true,\n})\nexport class CMessage {\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the related input element\n   */\n  @Prop() inputId: string;\n\n  /**\n   * Parent validíty\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  @State() messageOptions = {\n    show: true,\n    type: 'hint',\n    content: '',\n  };\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    // if (this.validateOnBlur && !this._hasBlurred) return;\n\n    this._handleValidation(valid);\n  }\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    if (this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Error: </span>\n          {this._validationIcon} {message}\n        </span>\n      ),\n    };\n  }\n\n  @Watch('hint')\n  onHintMessageChange(message: string) {\n    if (!this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Hint: </span>\n          {message}\n        </span>\n      ),\n    };\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    this.messageOptions = {\n      ...this.messageOptions,\n      show: false,\n    };\n\n    setTimeout(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span id={`hint-${this.inputId}`}>\n            <span class=\"visuallyhidden\">Hint: </span>\n            {this.hint}\n          </span>\n        ) : (\n          <span id={`error-${this.inputId}`}>\n            {this._validationIcon}\n            <span class=\"visuallyhidden\">Error: </span>\n            {this.validation}\n          </span>\n        ),\n      };\n    }, timeout);\n  }\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  componentDidLoad() {\n    this._handleValidation(this.valid, 0);\n  }\n\n  render() {\n    const classes = {\n      'c-message': true,\n      'c-message--active': this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-message-item': true,\n      [`c-message-item--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <Host>\n        <div class={classes}>\n          <div class={messageClasses}>{this.messageOptions.content}</div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-navigation-button-color: Burger menu color\n   */\n  --_c-navigation-button-color: var(\n    --c-navigation-button-color,\n    var(--c-text-system)\n  );\n\n  display: block;\n  margin-right: 0;\n  cursor: pointer;\n  user-select: none;\n  border-radius: 50%;\n\n  --c-icon-button-text-text-color: var(--_c-navigation-button-color);\n}\n","import { mdiMenu } from '@mdi/js';\nimport { Component, Host, h } from '@stencil/core';\n/**\n * @parent c-toolbar\n */\n@Component({\n  tag: 'c-navigation-button',\n  styleUrl: 'c-navigation-button.scss',\n  shadow: true,\n})\nexport class CNavigationButton {\n  render() {\n    return (\n      <Host tabindex={0}>\n        <c-icon-button text>\n          <c-icon path={mdiMenu}></c-icon>\n        </c-icon-button>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  width: 100%;\n  padding: 8px 0;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n/**\n * @parent c-select\n */\n@Component({\n  tag: 'c-option',\n  styleUrl: 'c-option.scss',\n  shadow: true,\n})\nexport class COption {\n  /**\n   * Set option as selected\n   */\n  @Prop() selected = false;\n\n  /**\n   * Set option as disabled\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Option name\n   */\n  @Prop() name: string;\n\n  /**\n   * Option value\n   */\n  @Prop() value: string | number;\n\n  render() {\n    return (\n      <Host tabindex=\"-1\">\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-otp-input-border-color: OTP input border color\n   * @prop --c-otp-input-border-color-active: Active OTP input border color\n   * @prop --c-otp-input-height: OTP input height\n   * @prop --c-otp-input-width: OTP input width\n   * @prop --c-otp-input-font-size: OTP input font size\n   * @prop --c-otp-input-text-color: OTP input text color\n   */\n  --_c-otp-input-border-color: var(--c-otp-input-border-color, var(--c-tertiary-500));\n  --_c-otp-input-border-color-active: var(--c-otp-input-border-color-active, var(--c-primary-600));\n  --_c-otp-input-height: var(--c-otp-input-height, 56px);\n  --_c-otp-input-width: var(--c-otp-input-width, 42px);\n  --_c-otp-input-font-size: var(--c-otp-input-font-size, 24px);\n  --_c-otp-input-text-color: var(--c-otp-input-text-color, var(--c-text-body));\n\n  // private\n  --_c-otp-input-border-width: 1px;\n\n  display: block;\n}\n\n:host(.error) {\n  --_c-otp-input-border-color: var(--c-error-600);\n  --_c-otp-input-border-color-active: var(--c-error-600);\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-otp-input {\n  backface-visibility: hidden;\n  display: inline-grid;\n  gap: 8px;\n  grid-auto-columns: minmax(auto, var(--_c-otp-input-width));\n  grid-auto-flow: column;\n  margin-bottom: 8px;\n  transform: translate3d(0, 0, 0);\n\n  &--hide-details {\n    margin-bottom: 0;\n  }\n\n  input {\n    border-radius: 4px;\n    border: none;\n    box-shadow: inset 0 0 0 var(--_c-otp-input-border-width) var(--_c-otp-input-border-color);\n    color: var(--_c-otp-input-text-color);\n    font-size: var(--_c-otp-input-font-size);\n    height: var(--_c-otp-input-height);\n    max-width: var(--_c-otp-input-width);\n    min-width: 24px;\n    text-align: center;\n    width: 100%;\n\n    &:focus {\n      --_c-otp-input-border-width: 2px;\n      --_c-otp-input-border-color: var(--_c-otp-input-border-color-active);\n\n      outline: none;\n    }\n  }\n\n  c-message {\n    grid-column: 1 / span var(--_c-otp-input-count);\n    grid-row: 2;\n  }\n}\n","import {\n  AttachInternals,\n  Component,\n  Event,\n  EventEmitter,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n  h,\n} from '@stencil/core';\n\n/**\n * @group Form\n */\n@Component({\n  tag: 'c-otp-input',\n  styleUrl: 'c-otp-input.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class COtpInput {\n  // eslint-disable-next-line\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) elementId!: string;\n\n  /**\n   * Length of the OTP code\n   */\n  @Prop() length = 6;\n\n  /**\n   * Set the validíty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Value of the input\n   */\n  @Prop({ mutable: true }) value: string;\n\n  /**\n   * Run on input - returns the current value\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter<string>;\n\n  /**\n   * Run on completion - returns the current value\n   */\n  @Event({ bubbles: false }) completion: EventEmitter<string>;\n\n  @State() statusText = '';\n\n  /**\n   * Reset input value\n   */\n  @Method()\n  async reset() {\n    this.value = '';\n\n    this._handleValueChange(this.value, true);\n\n    this.internals.setFormValue(this.value);\n  }\n\n  private _backSpacePressed = false;\n\n  private _debounce = null;\n\n  private _isPasting = false;\n\n  private _inputs: HTMLInputElement[] = new Array(this.length).fill(null);\n\n  private static _uniqueId = 0;\n\n  @Watch('validation')\n  onValidationMessageChange() {\n    this._updateStatusText();\n  }\n\n  @Watch('value')\n  onValueChange(value: string) {\n    this._handleValueChange(value);\n    this._updateStatusText();\n  }\n\n  private _emitValue() {\n    requestAnimationFrame(() => {\n      this.value = [...this._inputs].map((input) => input.value).join('');\n\n      const isFullyFilled = this.value.length === this.length;\n\n      this.changeValue.emit(isFullyFilled ? this.value : null);\n\n      if (isFullyFilled) {\n        this.completion.emit(this.value || null);\n      }\n\n      this.internals.setFormValue(this.value);\n\n      this._updateStatusText();\n    });\n  }\n\n  private _getElements(event: InputEvent | KeyboardEvent) {\n    const target = event.target as HTMLInputElement;\n    const nextElement = target.nextElementSibling as HTMLInputElement;\n    const previousElement = target.previousElementSibling as HTMLInputElement;\n\n    return { target, nextElement, previousElement };\n  }\n\n  /**\n   * Select value in an input on focus\n   */\n  private _onFocus(index: number) {\n    this._inputs[index].select();\n  }\n\n  private _onKeyDown(event: KeyboardEvent) {\n    this._backSpacePressed = false;\n\n    const { target, previousElement } = this._getElements(event);\n\n    if (event.key === 'Backspace') {\n      this._backSpacePressed = true;\n\n      // go to the previous element if the input is empty\n      if (previousElement && !target.value) {\n        previousElement.focus();\n      }\n\n      this._emitValue();\n    }\n  }\n\n  get id() {\n    return this.elementId || `c-otp-input--${COtpInput._uniqueId}`;\n  }\n\n  private _onInput(event: InputEvent) {\n    const { target, nextElement, previousElement } = this._getElements(event);\n\n    // exclude non numeric input values\n    if (isNaN(+target.value)) {\n      event.preventDefault();\n\n      target.value = null;\n\n      return;\n    }\n\n    if (this._isPasting) {\n      this._isPasting = false;\n\n      return;\n    }\n\n    if (this._backSpacePressed) {\n      return;\n    }\n\n    if (event.data) {\n      nextElement?.focus();\n    } else {\n      previousElement?.focus();\n    }\n\n    this._emitValue();\n  }\n\n  // TODO:  prevent pasting non numeric values and iclude validation\n  private _onPaste(event: ClipboardEvent) {\n    event.preventDefault();\n\n    const pasteData = event.clipboardData.getData('text');\n\n    if (isNaN(+pasteData)) {\n      return;\n    }\n\n    this._isPasting = true;\n\n    for (const [index, value] of pasteData.split('').entries()) {\n      // prevent pasting too long codes\n      if (index >= this._inputs.length) {\n        continue;\n      }\n\n      this._inputs[index].value = null;\n      this._inputs[index].value = value;\n    }\n\n    const nextElementIndex = Math.min(this.length, pasteData.length) - 1;\n\n    requestAnimationFrame(() => {\n      this._inputs[nextElementIndex].focus();\n\n      this._emitValue();\n    });\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      const value = [...this._inputs].map((input) => input.value).join('');\n\n      this.statusText = this.valid ? '' : `Error: ${this.validation} `;\n      this.statusText += `Currently entered - ${\n        !value.length ? 'nothing' : value.split('').join(' - ')\n      }`;\n      this.statusText = this.statusText.trim();\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  private _handleValueChange(value: string | null, forceEmpty = false) {\n    if (!value && !forceEmpty) return;\n\n    const digits = value.split('');\n\n    this._inputs.map((input, index) => (input.value = digits[index] || ''));\n\n    this.internals.setFormValue(value);\n  }\n\n  private _renderInput(index: number) {\n    return (\n      <input\n        id={`${this.id}--input-${index + 1}`}\n        ref={(el) => (this._inputs[index] = el as HTMLInputElement)}\n        aria-label={`Enter code - digit number - ${index + 1} of ${\n          this.length\n        }`}\n        type=\"tel\"\n        maxlength=\"1\"\n        onFocus={() => this._onFocus(index)}\n        onInput={(event) => this._onInput(event)}\n        onKeyDown={(event) => this._onKeyDown(event)}\n        onPaste={(event) => index === 0 && this._onPaste(event)}\n      />\n    );\n  }\n\n  componentWillLoad() {\n    COtpInput._uniqueId += 1;\n  }\n\n  componentDidLoad() {\n    this._handleValueChange(this.value);\n\n    this.internals.setFormValue(this.value);\n  }\n\n  render() {\n    const classes = {\n      'c-otp-input': true,\n      'c-otp-input--hide-details': this.hideDetails,\n    };\n\n    return (\n      <Host\n        id={this.id}\n        style={{ '--_c-otp-input-count': this.length.toString() }}\n        class={{ error: !this.valid }}\n      >\n        <div\n          id={'announce-' + this.id}\n          class=\"visuallyhidden\"\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n        >\n          {this.statusText}\n        </div>\n\n        <div class={classes}>\n          {new Array(this.length)\n            .fill(0)\n            .map((_, index) => this._renderInput(index))}\n\n          <c-message\n            hint={this.hint}\n            inputId={this.elementId}\n            valid={this.valid}\n            validation={this.validation}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n",":host(c-page) {\n  /**\n   * @prop --c-page-max-width: Maximum width for the content\n   * @prop --c-page-justify-content: Justify page content\n   */\n  --_c-page-max-width: var(--c-page-max-width, 1280px);\n  --_c-page-justify-content: var(--c-page-justify-content, start);\n\n  display: grid;\n  height: calc(100lvh - 60px);\n  grid-template-rows: 1fr auto;\n  grid-template-columns: 1fr;\n  width: 100%;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  position: relative;\n  place-items: start var(--_c-page-justify-content);\n  \n  .scroll-indicator {\n    z-index: 9;\n    height: 4px;\n    background-color: var(--c-primary-600);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 0%;\n  }\n  \n  .c-page__container {\n    padding: 0.5rem;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    max-width: var(--_c-page-max-width);\n\n    @media (min-width: 640px) {\n      padding: 0.75rem;\n    }\n  \n    @media (min-width: 768px) {\n      padding: 1rem;\n    }\n  }\n}\n","import { Component, Element, Host, Prop, h } from '@stencil/core';\n\n/**\n * @group Layout\n * @slot default - Default slot\n * @slot footer - Footer slot\n */\n@Component({\n  tag: 'c-page',\n  styleUrl: 'c-page.scss',\n  shadow: true,\n})\nexport class CPage {\n  @Element() el: HTMLCPageElement;\n\n  /**\n   * Display scroll indicator\n   */\n  @Prop() scrollIndicator = false;\n\n  private _scrollIndicator: HTMLDivElement;\n\n  private _onScroll() {\n    if (!this.scrollIndicator) return;\n\n    const scrollTop = this.el.scrollTop;\n    const height = this.el.scrollHeight - this.el.clientHeight;\n    const scrolled = (scrollTop / height) * 100;\n\n    this._scrollIndicator.style.width = scrolled + '%';\n  }\n\n  componentDidLoad() {\n    this.el.onscroll = this._onScroll.bind(this);\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.scrollIndicator && (\n          <div\n            ref={(el) => (this._scrollIndicator = el)}\n            class=\"scroll-indicator\"\n          />\n        )}\n\n        <div class=\"c-page__container\">\n          <slot></slot>\n        </div>\n\n        <slot name=\"footer\"></slot>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n/**\n * @parent c-radio-group\n */\n@Component({\n  tag: 'c-radio',\n  styleUrl: 'c-radio.scss',\n  shadow: true,\n})\nexport class CRadio {\n  /**\n   * Set option as checked\n   */\n  @Prop() checked = false;\n\n  /**\n   * Disable the radio button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Radio button value\n   */\n  @Prop() value: string;\n\n  render() {\n    return <Host></Host>;\n  }\n}\n",":host {\n  /**\n   * @prop --c-radio-group-background-color-hover: Radio button hover background color\n   * @prop --c-radio-group-color: Radio button color\n   * @prop --c-radio-group-color-active: Active radio button color\n   * @prop --c-radio-group-color-disabled: Disabled radio button color\n   */\n  --_c-radio-group-background-color-hover: var(--c-radio-group-background-color-hover, rgba(var(--c-primary-rgb), 0.1));\n  --_c-radio-group-color: var(--c-radio-group-color, var(--c-primary-600));\n  --_c-radio-group-color-active: var(--c-radio-group-color-active, var(--_c-radio-group-color));\n  --_c-radio-group-color-disabled: var(--c-radio-group-color-disabled, var(--c-tertiary-500));\n\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: fit-content;\n}\n\n.c-radio-group {\n  --_c-radio-group-error-color: var(--c-error-600);\n  --_c-radio-flex-direction: column;\n  --_c-radio-item-gap: 2px;\n\n  &__items {\n    display: flex;\n    flex-flow: var(--_c-radio-flex-direction) wrap;\n    gap: var(--_c-radio-item-gap);\n  }\n\n  &__label {\n    span.required {\n      color: var(--_c-radio-group-error-color);\n    }\n  }\n\n  &--disabled {\n    --_c-radio-group-color: var(--_c-radio-group-color-disabled);\n    --_c-radio-group-error-color: var(--_c-radio-group-color-disabled);\n\n    color: var(--_c-radio-group-color-disabled);\n    cursor: default;\n    opacity: 0.75;\n  }\n\n  &--error {\n    --_c-radio-group-color: var(--_c-radio-group-error-color);\n    --_c-radio-group-color-active: var(--_c-radio-group-error-color);\n\n    color: var(--_c-radio-group-error-color);\n  }\n\n  &--inline {\n    --_c-radio-flex-direction: row;\n    --_c-radio-item-gap: 12px;\n  }\n}\n\n.c-radio {\n  $this: &;\n\n  align-items: flex-start;\n  display: flex;\n  position: relative;\n  cursor: pointer;\n  font-size: 16px;\n  user-select: none;\n  gap: 4px;\n  line-height: 1.2;\n\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n\n    &:checked ~ .ripple .selection {\n      &::after {\n        display: block;\n        transform: scale(1);\n      }\n    }\n  }\n\n  .ripple {\n    position: relative;\n    height: 42px;\n    width: 42px;\n    min-width: 42px;\n    border-radius: 50%;\n    overflow: hidden;\n    transition: translateZ(0);\n    color: var(--_c-radio-group-color);\n  }\n\n  .selection {\n    position: absolute;\n    top: 11px;\n    left: 11px;\n    height: 20px;\n    width: 20px;\n    background-color: transparent;\n    box-shadow: inset 0 0 0 2px var(--_c-radio-group-color);\n    border-radius: 50%;\n    transition: box-shadow 0.15s ease-in-out;\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      transform: scale(0);\n      transition: transform 0.15s ease-in-out;\n      top: 5px;\n      left: 5px;\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background: var(--_c-radio-group-color-active);\n    }\n  }\n\n  &__label {\n    padding-top: 12px;\n  }\n\n  &--disabled {\n    --_c-radio-group-color: var(--_c-radio-group-color-disabled);\n    --_c-radio-group-color-active: var(--_c-radio-group-color-disabled);\n\n    color: var(--_c-radio-group-color);\n    cursor: default;\n    opacity: 0.75;\n  }\n\n  &--error {\n    --_c-radio-group-color: var(--_c-radio-group-error-color);\n\n    color: var(--_c-radio-group-error-color);\n\n    span,\n    svg {\n      fill: var(--_c-radio-group-error-color);\n      color: var(--_c-radio-group-error-color);\n    }\n  }\n\n  input:focus {\n    outline: none;\n  }\n\n  input:focus + .ripple {\n    outline: 2px var(--_c-radio-group-color-active) solid;\n  }\n\n  @supports selector(:focus-visible) {\n    input:focus + .ripple {\n      outline: none;\n    }\n  }\n\n  input:focus-visible + .ripple {\n    outline: 2px var(--_c-radio-group-color) solid;\n  }\n\n  &:not(.c-radio--disabled) {\n    .ripple:hover {\n      background-color: var(--_c-radio-group-background-color-hover);\n    }\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  AttachInternals,\n} from '@stencil/core';\nimport { CRadioGroupItem } from '../../types';\n\n/**\n * @group Form\n * @slot Default slot - Default slot for the label\n */\n@Component({\n  tag: 'c-radio-group',\n  styleUrl: 'c-radio-group.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CRadioGroup {\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Value of the radio group\n   */\n  @Prop({ mutable: true }) value: string | number | CRadioGroupItem;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Display radio buttons inline\n   */\n  @Prop() inline = false;\n\n  /**\n   * Label of the radio group\n   */\n  @Prop() label: string;\n\n  /**\n   * Color of the radio group\n   */\n  @Prop() color = '';\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Radio group items\n   */\n  @Prop() items: CRadioGroupItem[] = [];\n\n  /**\n   * Disable the radio group\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Return the whole item object\n   */\n  @Prop() returnObject = false;\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validity of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Emit value change to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @Element() el: HTMLCRadioGroupElement;\n\n  private _containers?: HTMLDivElement[] = [];\n\n  private _rippleElements: HTMLCRippleElement[] = [];\n\n  private static _uniqueId = 0;\n\n  private get _id() {\n    return this.hostId || `radio-group_${CRadioGroup._uniqueId}`;\n  }\n\n  private _handleKeyDown(event: KeyboardEvent, item, index) {\n    if (['Space', 'Enter'].includes(event.code)) {\n      event.preventDefault();\n\n      this._select(event, item, index);\n    }\n  }\n\n  private _select(event, item, index) {\n    if (!!item.disabled || this.disabled) return;\n\n    this._rippleElements[index].createRipple(\n      event,\n      this._containers[index],\n      true,\n    );\n    this.value = !this.returnObject ? item?.value : item;\n    this.changeValue.emit(this.value);\n\n    const value = !this.returnObject\n      ? this.value\n      : (this.value as CRadioGroupItem).value;\n\n    this.internals.setFormValue(value as string);\n  }\n\n  private _handleSlotChange = () => {\n    this._getRadioButtons();\n  };\n\n  private _getRadioButtons = () => {\n    const radios = this.el.querySelectorAll('c-radio');\n\n    if (radios.length) {\n      this.returnObject = false;\n\n      this.items = [\n        ...Array.from(radios).map((radio) => {\n          if (!!radio.checked) {\n            this.value = radio.value;\n            this.changeValue.emit(this.value);\n          }\n\n          radio.style.display = 'none';\n\n          return {\n            name: radio.textContent,\n            value: radio.value,\n            disabled: !!radio.disabled,\n          };\n        }),\n      ];\n    }\n  };\n\n  private _getRadioButton = (item, index) => {\n    const itemId = item.value.toString().replace(/[^a-zA-Z0-9-_]/g, '');\n\n    const isChecked = !this.returnObject\n      ? this.items?.find((i) => i.value === item.value)?.value === this.value\n      : (this.value as CRadioGroupItem)?.value === item.value;\n\n    const classes = {\n      'c-radio': true,\n      'c-radio--disabled': !!item.disabled || this.disabled,\n      'c-radio--error': !this.valid,\n    };\n\n    return (\n      <label\n        class={classes}\n        id={itemId}\n        onKeyDown={(event) => this._handleKeyDown(event, item, index)}\n      >\n        <input\n          type=\"radio\"\n          aria-checked={(this.value === item).toString()}\n          aria-disabled={(!!item.disabled || this.disabled).toString()}\n          aria-labelledby={itemId}\n          disabled={!!item.disabled || this.disabled}\n          checked={isChecked}\n          name={CRadioGroup._uniqueId.toString()}\n          onChange={(event) => this._select(event, item, index)}\n        />\n\n        <span\n          class=\"ripple\"\n          ref={(el) => (this._containers[index] = el as HTMLDivElement)}\n        >\n          <span class=\"selection\"></span>\n\n          <c-ripple ref={(el) => (this._rippleElements[index] = el)}></c-ripple>\n        </span>\n\n        <div class=\"c-radio__label\">{item.name}</div>\n      </label>\n    );\n  };\n\n  componentWillLoad() {\n    CRadioGroup._uniqueId += 1;\n\n    const radios = this.el.querySelectorAll('c-radio');\n\n    const checkedRadio = Array.from(radios).find((item) => item.checked);\n\n    if (checkedRadio) {\n      const value = checkedRadio.value;\n\n      this.internals.setFormValue(value as string);\n    } else if (this.value) {\n      const value = !this.returnObject\n        ? this.value\n        : (this.value as CRadioGroupItem).value;\n\n      this.internals.setFormValue(value as string);\n    }\n  }\n\n  render() {\n    const slotHasContent = !!this.el.childNodes.length;\n\n    const wrapperClasses = {\n      'c-radio-group': true,\n      'c-radio-group--disabled': this.disabled,\n      'c-radio-group--inline': this.inline,\n      'c-radio-group--error': !this.valid,\n    };\n\n    return (\n      <div\n        class={wrapperClasses}\n        role=\"radiogroup\"\n        aria-labelledby=\"c-radio-group__label\"\n      >\n        {(!!this.label || slotHasContent) && (\n          <label class=\"c-radio-group__label\">\n            {!!this.label && this.label}\n\n            <slot onSlotchange={this._handleSlotChange}></slot>\n\n            {this.required && <span class=\"required\">&nbsp;*</span>}\n          </label>\n        )}\n\n        <div class=\"c-radio-group__items\">\n          {this.items.map((item, index) => this._getRadioButton(item, index))}\n        </div>\n\n        {!this.hideDetails && (\n          <c-message\n            hint={this.hint}\n            inputId={this._id}\n            valid={this.valid}\n            validation={this.validation}\n          />\n        )}\n      </div>\n    );\n  }\n}\n",":host {\n  pointer-events: none;\n  user-select: none;\n  display: block;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: inherit;\n  z-index: 1;\n}\n\n.c-ripple {\n  position: absolute;\n  pointer-events: none;\n  border-radius: 50%;\n  transform: scale(0);\n  background: currentColor;\n  opacity: 0;\n\n  &.animate {\n    animation: ripple 0.5s backwards linear;\n    opacity: 0.3;\n  }\n\n  @keyframes ripple {\n    100% {\n      opacity: 0;\n      transform: scale(5);\n    }\n  }\n}\n","import { Component, Element, Host, Method, h } from '@stencil/core';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-ripple',\n  styleUrl: 'c-ripple.scss',\n  shadow: true,\n})\nexport class CRipple {\n  @Element() el: HTMLCRippleElement;\n\n  private _rippleElement: HTMLDivElement;\n\n  /**\n   * Creates a ripple\n   */\n  @Method()\n  async createRipple(event: MouseEvent, parent: HTMLElement, center = false) {\n    // clear animation on repeat clicks\n    this._rippleElement.classList.remove('animate');\n\n    const width = parent.offsetWidth;\n    const height = parent.offsetHeight;\n    const rect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const maxDimension = this._calculateHeight(\n      Math.max(parent.offsetWidth, parent.offsetHeight),\n    );\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    const top = y - maxDimension / 2 + 'px';\n    const left = x - maxDimension / 2 + 'px';\n\n    const centerPosition = {\n      top:\n        maxDimension === height\n          ? '0px'\n          : ((maxDimension - height) / 2) * -1 + 'px',\n      left:\n        maxDimension === width\n          ? '0px'\n          : ((maxDimension - width) / 2) * -1 + 'px',\n    };\n\n    this.el.style.width = width + 'px';\n    this.el.style.height = height + 'px';\n\n    this._rippleElement.style.width = maxDimension + 'px';\n    this._rippleElement.style.height = maxDimension + 'px';\n\n    this._rippleElement.style.top = center ? centerPosition.top : top;\n    this._rippleElement.style.left = center ? centerPosition.left : left;\n\n    this._rippleElement.classList.add('animate');\n\n    setTimeout(() => {\n      this._rippleElement.classList.remove('animate');\n    }, 500);\n  }\n\n  private _calculateHeight(height: number) {\n    const radius = (height / 2) * Math.sqrt(2);\n\n    return radius * 2;\n  }\n\n  render() {\n    return (\n      <Host aria-hidden=\"true\">\n        <div ref={(el) => (this._rippleElement = el)} class=\"c-ripple\" />\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-select-active-color: Active select color\n   * @prop --c-select-inactive-color: Inactive select color\n   * @prop --c-select-background-color: Inactive select background color\n   * @prop --c-select-text-color: Select text color\n   * @prop --c-select-placeholder-color: Select placeholder color\n   * @prop --c-select-option-background-color: Select option background color\n   * @prop --c-select-option-background-color-hover: Select option hover background color\n   * @prop --c-select-option-text-color: Select option text color\n   */\n  --_c-select-active-color: var(--c-select-active-color, var(--c-primary-600));\n  --_c-select-inactive-color: var(--c-select-inactive-color, var(--c-tertiary-600));\n  --_c-select-background-color: var(--c-select-background-color, var(--c-transparent));\n  --_c-select-text-color: var(--c-select-text-color, var(--c-text-body));\n  --_c-select-placeholder-color: var(--c-select-placeholder-color, var(--c-tertiary-500));\n  --_c-select-option-background-color: var(--c-select-option-background-color, var(--c-white));\n  --_c-select-option-background-color-hover: var(--c-select-option-background-color-hover, var(--c-primary-100));\n  --_c-select-option-text-color: var(--c-select-option-text-color, var(--c-text-body));\n  --_c-select-shadow-active-color: var(--c-select-shadow-active-color, var(--_c-select-active-color));\n  --_c-select-shadow-background-color: var(--c-select-shadow-background-color, var(--c-white));\n  --_c-select-shadow-text-color: var(--c-select-shadow-text-color, var(--_c-select-text-color));\n  --_c-select-shadow-placeholder-color: var(--c-select-shadow-placeholder-color, var(--_c-select-placeholder-color));\n\n  // private\n  --_c-input-active-color: var(--_c-select-active-color);\n  --_c-input-inactive-color: var(--_c-select-inactive-color);\n  --_c-input-background-color: var(--_c-select-background-color);\n  --_c-input-text-color: var(--_c-select-text-color);\n  --_c-input-placeholder-color: var(--_c-select-placeholder-color);\n  --_c-input-shadow-active-color: var(--_c-select-shadow-active-color);\n  --_c-input-shadow-background-color: var(--_c-select-shadow-background-color);\n  --_c-input-shadow-text-color: var(--_c-select-shadow-text-color);\n  --_c-input-shadow-placeholder-color: var(--_c-select-shadow-placeholder-color);\n}\n\n@import \"../c-input/c-input-menu\";\n","import {\n  AttachInternals,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  h,\n} from '@stencil/core';\nimport { CSelectItem } from '../../types';\nimport { mdiChevronDown, mdiClose } from '@mdi/js';\n\n/**\n * @group Form\n * @slot Default slot - Use c-option elements only\n */\n@Component({\n  tag: 'c-select',\n  styleUrl: 'c-select.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CSelect {\n  @Element() el: HTMLCSelectElement;\n\n  // eslint-disable-next-line\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Dropdown items\n   */\n  @Prop() items: CSelectItem[] = [];\n\n  /**\n   * Selected item\n   */\n  @Prop() value: string | number | CSelectItem = null;\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Make the selected value clearable\n   */\n  @Prop() clearable = false;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label: string;\n\n  /**\n   * Input field name\n   */\n  @Prop() name: string;\n\n  /**\n   * Placeholder text\n   */\n  @Prop() placeholder = '';\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Show loading state\n   */\n  @Prop() loading = false;\n\n  /**\n   * Show required validation\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validíty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Shadow variant\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Return object instead of value\n   */\n  @Prop() returnObject = false;\n\n  /**\n   * Items per page before adding scroll\n   */\n  @Prop() itemsPerPage = 6;\n\n  /**\n   * display the option as selection (works only when c-option elements are used)\n   */\n  @Prop() optionAsSelection: false;\n\n  /**\n   * Triggered when option is selected\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() optionElements: NodeListOf<HTMLCOptionElement>;\n\n  @State() currentIndex: number = null;\n\n  @State() dropdownVisible = false;\n\n  @State() statusText = '';\n\n  @State() optionElementsExist = false;\n\n  private static _uniqueId = 0;\n\n  private _dropdownElement: HTMLCDropdownElement;\n\n  private _inputElement: HTMLInputElement;\n\n  private _cInputElement: HTMLCInputElement;\n\n  private _selectionElement: HTMLDivElement;\n\n  private _inputId: string;\n\n  private _preventDialogOpen = false;\n\n  private _debounce = null;\n\n  private _lastKeyPressTime = null;\n\n  private _searchString = '';\n\n  private get _id() {\n    return this.hostId || `select_${CSelect._uniqueId}`;\n  }\n\n  private get _items() {\n    return this.optionElementsExist ? this.optionElements : this.items;\n  }\n\n  private get _value() {\n    if (!this.value) return '';\n\n    if (\n      !this.returnObject &&\n      !['number', 'string'].includes(typeof this.value)\n    ) {\n      console.warn(\n        `[C-SELECT] The value should be of type 'number' or 'string' when return-object is not used.`,\n      );\n\n      return '';\n    }\n\n    if (\n      !this.returnObject &&\n      ['number', 'string'].includes(typeof this.value)\n    ) {\n      return Array.from(this._items)?.find((item) => item.value === this.value)\n        ?.name;\n    }\n\n    return Array.from(this._items as CSelectItem[])?.find(\n      (item) => item.value === (this.value as CSelectItem).value,\n    )?.name;\n  }\n\n  /**\n   * Reset select state\n   */\n  @Method()\n  async reset() {\n    this.changeValue.emit(null);\n\n    this.internals.setFormValue(null);\n\n    this._dropdownElement.updateList();\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeyDown(event: KeyboardEvent) {\n    const alphanumeric = /^[0-9a-zA-Z ]+$/;\n\n    if (this.disabled) return;\n\n    if (event.key.match(alphanumeric) && event.key.length === 1) {\n      if (this.dropdownVisible) return;\n\n      if (Date.now() - this._lastKeyPressTime > 3000) {\n        this._searchString = event.key;\n      } else {\n        this._searchString += event.key;\n      }\n\n      this._lastKeyPressTime = Date.now();\n\n      const selectionIndex = Array.from(this._items).findIndex((i) =>\n        i.name.toLowerCase().startsWith(this._searchString),\n      );\n\n      this.currentIndex = selectionIndex >= 0 ? selectionIndex : null;\n\n      if (this.currentIndex !== null) {\n        this._dropdownElement.selectItem(this.currentIndex);\n      }\n\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      this._preventDialogOpen = true;\n      this._dropdownElement.close();\n      this._inputElement.focus();\n\n      return;\n    }\n\n    if (event.key === 'Tab') {\n      this._dropdownElement.close();\n    }\n\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n\n      if (!this._items.length) return;\n\n      if (!this.dropdownVisible) {\n        this._dropdownElement.open();\n      }\n\n      this.currentIndex =\n        this.currentIndex === null\n          ? 0\n          : Math.min(this.currentIndex + 1, this._items.length - 1);\n\n      this._dropdownElement.focusItem(this.currentIndex);\n    }\n\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n\n      if (this.currentIndex === 0) {\n        this._dropdownElement.close();\n        this._inputElement.focus();\n      }\n\n      if (!this.dropdownVisible) {\n        this._dropdownElement.open();\n      }\n\n      this.currentIndex =\n        this.currentIndex === null\n          ? this._items.length - 1\n          : Math.max(this.currentIndex - 1, 0);\n\n      this._dropdownElement.focusItem(this.currentIndex);\n    }\n\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (this.currentIndex === null) return;\n\n      this._dropdownElement.selectItem(this.currentIndex);\n    }\n\n    if (event.key === 'Home' && this.dropdownVisible) {\n      this.currentIndex = 0;\n    }\n\n    if (event.key === 'End' && this.dropdownVisible) {\n      this.currentIndex = this._items.length - 1;\n    }\n  }\n\n  @Listen('dropdownStateChange')\n  onDropdownStateChange(event: CustomEvent<boolean>) {\n    const isOpen = event.detail;\n\n    this.dropdownVisible = isOpen;\n  }\n\n  @Listen('selectOption')\n  onSelectOption(event: CustomEvent<{ name: string; value: string }>) {\n    this._dropdownElement.close();\n\n    const { name, value } = event.detail;\n\n    const selection = this._setCurrentIndex({ name, value });\n\n    if (this.optionElementsExist && this.optionAsSelection && selection) {\n      const clone = (selection as HTMLCOptionElement).cloneNode(true);\n\n      this._selectionElement.classList.add('c-input-menu__selection--show');\n      this._selectionElement.replaceChildren(clone);\n    }\n\n    this._dropdownElement.updateList();\n\n    this.value = this.returnObject ? event.detail : value;\n\n    this.changeValue.emit(this.value);\n\n    this.internals.setFormValue(value);\n\n    this._preventDialogOpen = true;\n\n    this._inputElement.focus();\n  }\n\n  private _setCurrentIndex({ value, name }: { value: string; name: string }) {\n    let selection: HTMLCOptionElement | CSelectItem | null = null;\n\n    Array.from(this._items).forEach((item, index) => {\n      const selected = item.value === value && item.name === name;\n\n      if (this.optionElementsExist) {\n        (item as HTMLCOptionElement).selected = selected;\n      }\n\n      if (selected) {\n        this.currentIndex = index;\n\n        selection = item;\n      }\n    });\n\n    return selection;\n  }\n\n  private _toggleDropdown = (event) => {\n    event.stopPropagation();\n\n    if (this.dropdownVisible) {\n      this._dropdownElement.close();\n\n      return;\n    }\n\n    this._dropdownElement.open();\n  };\n\n  private _onButtonKeyDown = (\n    src: 'chevron' | 'reset',\n    event: KeyboardEvent,\n  ) => {\n    event.stopPropagation();\n\n    if (event.key !== 'Tab') event.preventDefault();\n\n    if (['Enter', ' '].includes(event.key)) {\n      if (src === 'chevron') {\n        this._toggleDropdown(event);\n\n        return;\n      }\n\n      this._onReset(event);\n\n      this._preventDialogOpen = true;\n\n      requestAnimationFrame(() => {\n        this._inputElement.focus();\n      });\n    }\n  };\n\n  private _onSlotChange = () => {\n    this.optionElements = this.el.querySelectorAll('c-option');\n\n    if (this.optionElements.length && !this.optionElementsExist) {\n      this.optionElementsExist = true;\n    }\n\n    const selection = Array.from(this.optionElements).find(\n      (option) => option.selected,\n    );\n\n    if (selection) {\n      this.value = this.returnObject\n        ? { name: selection.name, value: selection.value }\n        : selection.value;\n\n      this.changeValue.emit(this.value);\n\n      this.internals.setFormValue(selection.value.toString());\n    }\n  };\n\n  private _onReset = (event) => {\n    event.stopPropagation();\n\n    this.changeValue.emit(null);\n\n    this.internals.setFormValue(null);\n\n    this._selectionElement.classList.remove('c-input-menu__selection--show');\n    this._selectionElement.replaceChildren(null);\n\n    this._preventDialogOpen = true;\n\n    this._cInputElement.reset();\n\n    this._inputElement.focus();\n\n    this._dropdownElement.updateList();\n  };\n\n  private _updateInput() {\n    this._dropdownElement.open();\n\n    this._dropdownElement.updateList();\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      this.statusText = '';\n\n      if (this.currentIndex === null) {\n        this.statusText = this._items.length\n          ? `${this._items.length} option${\n              this._items.length !== 1 ? 's' : ''\n            } available`\n          : 'No options available';\n      }\n\n      const ending = !!this._items.length\n        ? ', navigate using the up and down arrows'\n        : '';\n\n      this._dropdownElement.setStatusText(this.statusText + ending);\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  private _onInputFocus = () => {\n    if (this.disabled) return;\n\n    if (!this._preventDialogOpen) {\n      this._dropdownElement.open();\n    }\n\n    this._updateStatusText();\n\n    this._preventDialogOpen = false;\n  };\n\n  componentWillLoad() {\n    CSelect._uniqueId += 1;\n\n    this._inputId =\n      'input_' +\n      (this.hostId || this.label || this.placeholder).replace(\n        /[^a-zA-Z0-9-_]/g,\n        '',\n      );\n  }\n\n  componentDidLoad() {\n    if (!this.value) return;\n\n    const selection = Array.from(this._items).find((item) => {\n      if (this.returnObject) {\n        return (\n          item.name === (this.value as CSelectItem).name &&\n          item.value === (this.value as CSelectItem).value\n        );\n      }\n\n      return item.value === this.value;\n    });\n\n    this._setCurrentIndex({\n      name: selection.name,\n      value: selection.value.toString(),\n    });\n  }\n\n  private _renderLoader() {\n    return <c-spinner color=\"var(--_c-autocomplete-active-color)\" size={20} />;\n  }\n\n  private _renderChevron() {\n    const classes = {\n      'c-input-menu__chevron': true,\n      'c-input-menu__chevron--active': this.dropdownVisible,\n    };\n\n    return (\n      <c-icon-button\n        size=\"x-small\"\n        class={classes}\n        disabled={this.disabled}\n        text\n        onClick={(event) => this._toggleDropdown(event)}\n        onKeyDown={(event) => this._onButtonKeyDown('chevron', event)}\n      >\n        <c-icon path={mdiChevronDown} size={24} />\n      </c-icon-button>\n    );\n  }\n\n  private _renderInputElement() {\n    return (\n      <div class=\"c-input-menu__input\">\n        <input\n          type=\"text\"\n          readonly\n          ref={(el) => (this._inputElement = el)}\n          aria-expanded={this.dropdownVisible.toString()}\n          aria-owns={this._inputId + '-items'}\n          aria-autocomplete=\"list\"\n          autocomplete=\"off\"\n          class=\"c-input__input\"\n          role=\"combobox\"\n          value={this._value}\n          name={this.name ?? null}\n          disabled={this.disabled}\n          onInput={() => this._updateInput()}\n          onFocus={() => this._onInputFocus()}\n        />\n\n        <div\n          ref={(el) => (this._selectionElement = el)}\n          class=\"c-input-menu__selection\"\n        />\n      </div>\n    );\n  }\n\n  private _renderReset() {\n    return (\n      <c-icon-button\n        aria-label=\"\"\n        size=\"x-small\"\n        disabled={this.disabled}\n        text\n        onClick={(event) => this._onReset(event)}\n        onKeyDown={(event) => this._onButtonKeyDown('reset', event)}\n      >\n        <c-icon path={mdiClose} size={20} />\n      </c-icon-button>\n    );\n  }\n\n  render() {\n    const itemType = this.optionElementsExist ? 'option' : 'item';\n\n    return (\n      <Host>\n        <c-dropdown\n          ref={(el) => (this._dropdownElement = el)}\n          id={`${this._id}-dropdown`}\n          index={this.currentIndex}\n          items-per-page={this.itemsPerPage}\n          item-type={itemType}\n          items={this._items as NodeListOf<HTMLCOptionElement> & CSelectItem[]}\n          parent={this.el}\n          type=\"select\"\n        >\n          <c-input\n            slot=\"default\"\n            ref={(el) => (this._cInputElement = el)}\n            active={this.dropdownVisible}\n            disabled={this.disabled}\n            hide-details={this.hideDetails}\n            hint={this.hint}\n            id={this.hostId}\n            input-id={this._inputId}\n            label={this.label}\n            name={this.name}\n            placeholder={this.placeholder}\n            required={this.required}\n            shadow={this.shadow}\n            valid={this.valid}\n            validate={this.validate}\n            validate-on-blur={this.validateOnBlur}\n            validation={this.validation}\n            value={this.value}\n            variant=\"select\"\n            onClick={() => !this.disabled && this._dropdownElement.open()}\n          >\n            <slot name=\"pre\" slot=\"pre\"></slot>\n\n            <div class=\"c-input__content\">\n              {this._renderInputElement()}\n\n              {this.loading && this._renderLoader()}\n\n              {!this.loading &&\n                this.value &&\n                this.clearable &&\n                this._renderReset()}\n\n              {!this.loading &&\n                (!this.value || !this.clearable) &&\n                this._renderChevron()}\n\n              <slot onSlotchange={() => this._onSlotChange()}></slot>\n            </div>\n\n            <slot name=\"post\" slot=\"post\"></slot>\n          </c-input>\n        </c-dropdown>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-side-navigation-background-color: Side navigation background color\n   * @prop --c-side-navigation-overlay-color: Side navigation overlay color\n   */\n  --_c-side-navigation-background-color: var(\n    --c-side-navigation-background-color,\n    var(--c-primary-600)\n  );\n  --_c-side-navigation-overlay-color: var(\n    --c-side-navigation-overlay-color,\n    rgba(var(--c-black), 0.5)\n  );\n}\n\n:host(.autoheight) {\n  height: calc(100vh - 60px);\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\n:host(.desktop) {\n  background-color: var(--_c-side-navigation-background-color);\n  display: flex;\n  min-width: clamp(300px, 20vw, 340px);\n}\n\n.c-side-navigation {\n  background-color: var(--_c-side-navigation-background-color);\n  display: flex;\n  flex-flow: column nowrap;\n  flex: 1;\n  gap: 4px;\n  min-height: fit-content;\n  padding: 24px 0 24px 24px;\n  position: relative;\n  transition: transform 0.3s ease;\n  width: 100%;\n  z-index: 8;\n\n  &__content {\n    $content: &;\n\n    display: flex;\n    flex-direction: column;\n    flex: 1 2 260px;\n    width: 320px;\n\n    &--mobile {\n      height: 100vh;\n      max-width: 320px;\n      overflow-y: scroll;\n      position: fixed;\n      right: 0;\n      top: 0;\n      transition: transform 0.2s cubic-bezier(0.25, 0.8, 0.5, 1);\n      transform: translateX(0%);\n      z-index: 999;\n\n      &#{$content} {\n        &--hidden {\n          transform: translateX(100%);\n        }\n      }\n\n      > nav {\n        min-height: auto;\n        padding-top: 0;\n      }\n    }\n  }\n\n  &__burger {\n    background-color: var(--_c-side-navigation-background-color);\n    display: flex;\n    justify-content: flex-end;\n    padding: 8px 16px;\n  }\n\n  ul {\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 8px;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n}\n\n.autoheight > nav {\n  height: calc(100vh - 60px);\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.vertical-spacer {\n  flex: 1;\n  margin-bottom: 8px;\n}\n\n.c-overlay {\n  background: var(--_c-side-navigation-overlay-color);\n  backdrop-filter: blur(4px);\n  inset: 0;\n  position: fixed;\n  z-index: 998;\n}\n\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n.c-fade-in {\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n  animation-name: fade-in;\n  z-index: 997;\n}\n\nc-side-navigation-item,\nc-sub-navigation-item {\n  display: contents;\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n","import { mdiArrowRight } from '@mdi/js';\nimport { Component, Host, h, Prop, Listen, Element } from '@stencil/core';\n/**\n * @group Navigation\n * @slot Default slot - Default slot\n * @slot bottom - Place items at the bottom\n */\n@Component({\n  tag: 'c-side-navigation',\n  styleUrl: 'c-side-navigation.scss',\n  shadow: true,\n})\nexport class CSideNavigation {\n  /**\n   * Mobile version\n   */\n  @Prop() mobile: boolean;\n\n  /**\n   * Mobile version menu visibility\n   */\n  @Prop({ mutable: true }) menuVisible: boolean = false; // eslint-disable-line\n\n  @Element() host: HTMLCSideNavigationElement;\n\n  @Listen('itemChange')\n  handleChange(event: Event) {\n    const slotted = this.host.querySelectorAll('c-side-navigation-item');\n    const target = event.target as HTMLCSideNavigationItemElement;\n    const { active } = target;\n\n    slotted.forEach((item) => {\n      if (item.querySelector('c-sub-navigation-item[slot=\"sub-item\"]')) {\n        item.active = false;\n      }\n    });\n\n    if (target.querySelector('[slot=\"sub-item\"]')) {\n      target.active = !active;\n    } else {\n      target.active = true;\n    }\n  }\n\n  private _assignSubItemSlots() {\n    const subItems = this.host.querySelectorAll('c-sub-navigation-item');\n\n    Array.from(subItems).forEach((item) => {\n      item.setAttribute('slot', 'sub-item');\n    });\n  }\n\n  componentWillLoad() {\n    this._assignSubItemSlots();\n  }\n\n  componentDidLoad() {\n    const el = document.querySelector('body');\n\n    ['click', 'keyup'].forEach((eventType) => {\n      el.addEventListener(eventType, (e: MouseEvent | KeyboardEvent) => {\n        if ((e.target as HTMLElement).matches('c-navigation-button')) {\n          if (eventType === 'click') {\n            this.menuVisible = !this.menuVisible;\n          } else if (e instanceof KeyboardEvent && e.key === 'Enter') {\n            this.menuVisible = !this.menuVisible;\n          }\n        }\n      });\n    });\n  }\n\n  private _closeMenu() {\n    this.menuVisible = false;\n  }\n\n  render() {\n    const classes = {\n      'c-side-navigation': true,\n      'hide-menu': !this.menuVisible,\n      mobile: !!this.mobile,\n      desktop: !this.mobile,\n    };\n\n    const containerClasses = {\n      'c-side-navigation__content': true,\n      'c-side-navigation__content--hidden': !this.menuVisible,\n      'c-side-navigation__content--mobile': !!this.mobile,\n      'c-side-navigation__content--desktop': !this.mobile,\n    };\n\n    return (\n      <Host class={{ desktop: !this.mobile }}>\n        <div class={containerClasses}>\n          {this.mobile && (\n            <div class=\"c-side-navigation__burger\">\n              <c-icon-button inverted text onClick={() => this._closeMenu()}>\n                <span class=\"visuallyhidden\">Close sidemenu</span>\n                <c-icon path={mdiArrowRight}></c-icon>\n              </c-icon-button>\n            </div>\n          )}\n\n          <nav class={classes} role=\"menubar\">\n            <slot></slot>\n\n            <div class=\"vertical-spacer\"></div>\n\n            <slot name=\"bottom\"></slot>\n          </nav>\n        </div>\n\n        {this.menuVisible && this.mobile && (\n          <div\n            class=\"c-overlay c-fade-in\"\n            onClick={() => this._closeMenu()}\n          ></div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host(c-side-navigation-item) {\n  /**\n   * @prop --c-side-navigation-item-background-color-active: Active side navigation item background color\n   * @prop --c-side-navigation-item-background-color-hover: Side navigation item hover background color\n   * @prop --c-side-navigation-item-background-color: Side navigation item background color\n   * @prop --c-side-navigation-item-outline-color: Side navigation item outline color\n   * @prop --c-side-navigation-item-text-color-active: Active side navigation item text color\n   * @prop --c-side-navigation-item-text-color: Side navigation item text color\n   */\n  --_c-side-navigation-item-background-color-active: var(--c-side-navigation-item-background-color-active, var(--c-primary-200));\n  --_c-side-navigation-item-background-color-hover: var(--c-side-navigation-item-background-color-hover, var(--c-primary-500));\n  --_c-side-navigation-item-background-color: var(--c-side-navigation-item-background-color, var(--c-transparent));\n  --_c-side-navigation-item-outline-color: var(--c-side-navigation-item-outline-color, var(--c-white));\n  --_c-side-navigation-item-text-color-active: var(--c-side-navigation-item-text-color-active, var(--c-primary-600));\n  --_c-side-navigation-item-text-color: var(--c-side-navigation-item-text-color, var(--c-white));\n\n  /**\n   * @prop --c-side-navigation-item-sub-item-background-color-active: Active 2nd level item background color\n   * @prop --c-side-navigation-item-sub-item-background-color-hover: 2nd level item hover background color\n   * @prop --c-side-navigation-item-sub-item-background-color: 2nd level item background color\n   * @prop --c-side-navigation-item-sub-item-text-color-active: Active 2nd level item text color\n   * @prop --c-side-navigation-item-sub-item-text-color: 2nd level item text color\n   */\n  --_c-side-navigation-item-sub-item-background-color-active: var(--c-side-navigation-item-sub-item-background-color-active, var(--c-white));\n  --_c-side-navigation-item-sub-item-background-color-hover: var(--c-side-navigation-item-sub-item-background-color-hover, var(--c-primary-100));\n  --_c-side-navigation-item-sub-item-background-color: var(--c-side-navigation-item-sub-item-background-color, var(--c-white));\n  --_c-side-navigation-item-sub-item-outline-color: var(--c-side-navigation-item-sub-item-outline-color, var(--c-primary-600));\n  --_c-side-navigation-item-sub-item-text-color-active: var(--c-side-navigation-item-sub-item-text-color-active, var(--c-primary-600));\n  --_c-side-navigation-item-sub-item-text-color: var(--c-side-navigation-item-sub-item-text-color, var(--c-primary-600));\n}\n\n:host(.c-side-navigation-item) {\n  align-items: center;\n  backface-visibility: hidden;\n  border-radius: 4px 0 0 4px;\n  background-color: var(--_c-side-navigation-item-background-color);\n  color: var(--_c-side-navigation-item-text-color);\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: 1fr;\n  font-weight: 400;\n  overflow: hidden;\n  position: relative;\n  transform: translate3d(0, 0, 0);\n  user-select: none;\n}\n\n:host(.c-side-navigation-item:hover) {\n  background-color: var(--_c-side-navigation-item-background-color-hover);\n}\n\n:host(.c-side-navigation-item:focus) {\n  outline: none;\n}\n\n:host(.c-side-navigation-item:focus-visible) {\n  outline: 2px var(--_c-side-navigation-item-outline-color) solid;\n  outline-offset: 2px;\n}\n\n:host(.c-side-navigation-item.active) {\n  background-color: var(--_c-side-navigation-item-background-color-active);\n  color: var(--_c-side-navigation-item-text-color-active);\n\n  .svg {\n    fill: var(--_c-side-navigation-item-text-color-active);\n    transform: rotate(90deg);\n  }\n\n  .c-side-navigation-item__header {\n    color: var(--_c-side-navigation-item-text-color-active);\n  }\n}\n\n.c-side-navigation-item {\n  &__header {\n    align-items: center;\n    color: var(--_c-side-navigation-item-text-color);\n    display: grid;\n    gap: 8px;\n    grid-template-columns: 1fr;\n    min-height: 46px;\n    padding: 8px 12px;\n\n    &--expandable {\n      grid-template-columns: auto 1fr;\n    }\n  }\n\n  &__slot {\n    align-items: center;\n    display: flex;\n    gap: 8px;\n    line-height: normal;\n    max-width: 100%;\n  }\n}\n\n:host(.c-side-navigation-item--parent.active) {\n  padding-bottom: 4px;\n}\n\n::slotted(span),\n::slotted(c-icon) {\n  font-size: 20px;\n}\n\n.styleMain {\n  padding-left: 16px;\n}\n\n.sub-item {\n  height: 0;\n  overflow-y: hidden;\n  transition: all 500ms ease;\n  width: 100%;\n}\n\n.subnavactive {\n  height: max-content;\n  width: 100%;\n}\n\n.svg {\n  align-self: center;\n  fill: var(--_c-side-navigation-item-text-color);\n  transition: transform 0.3s ease;\n}\n\n:host > div.active .svg {\n  fill: var(--_c-side-navigation-item-text-color-active);\n  transform: rotate(90deg);\n}\n\n.svg.hidden {\n  opacity: 0;\n}\n\n.middle {\n  display: flex;\n  height: 100%;\n  align-items: center;\n}\n\n:host([slot=\"sub-item\"]) {\n  --_c-side-navigation-item-text-color: var(--c-side-navigation-item-text-color, var(--_c-side-navigation-item-sub-item-text-color));\n  --_c-side-navigation-item-background-color: var(--c-side-navigation-item-background-color, var(--_c-side-navigation-item-sub-item-background-color));\n  --_c-side-navigation-item-background-color-hover: var(--c-side-navigation-item-background-color-hover, var(--_c-side-navigation-item-sub-item-background-color-hover));\n  --_c-side-navigation-item-text-color-active: var(--c-side-navigation-item-text-color-active, var(--_c-side-navigation-item-sub-item-text-color-active));\n  --_c-side-navigation-item-background-color-active: var(--c-side-navigation-item-background-color-active, var(--_c-side-navigation-item-sub-item-background-color-active));\n  --_c-side-navigation-item-outline-color: var(--c-side-navigation-item-outline-color, var(--_c-side-navigation-item-sub-item-outline-color));\n\n  border-radius: 4px;\n  margin: 0 8px 4px;\n}\n","import {\n  Component,\n  h,\n  Host,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  Watch,\n} from '@stencil/core';\nimport { mdiChevronRight } from '@mdi/js';\n\n/**\n * @parent c-side-navigation\n */\n@Component({\n  tag: 'c-side-navigation-item',\n  styleUrl: 'c-side-navigation-item.scss',\n  shadow: true,\n})\nexport class CSideNavigationItem {\n  @Element() hostElement: HTMLCSideNavigationItemElement;\n\n  /**\n   * Indicate active state\n   */\n  @Prop() active: boolean;\n\n  /**\n   * Hyperlink url\n   */\n  @Prop() href: string;\n\n  /**\n   * Hyperlink target\n   */\n  @Prop() target: string = null;\n\n  /**\n   * Loading state\n   */\n  @Prop() loading = false;\n\n  /**\n   * Emit changes to the c-accordion\n   * @private\n   */\n  @Event() itemChange: EventEmitter;\n\n  @Listen('itemChange')\n  handleChange(event: Event) {\n    if (this._isSubItem) {\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      this.active = !this.active;\n    }\n  }\n\n  @Watch('active')\n  onActiveChange(active: boolean) {\n    this._handleChildFocusableChange(active);\n  }\n\n  private _ariaLabel: string;\n\n  private _isSubItem = false;\n\n  private _handleChildFocusableChange(focusable: boolean) {\n    if (!this._slotHasContent) return;\n\n    Array.from(this.hostElement.querySelectorAll('[slot=\"sub-item\"]')).forEach(\n      (child: HTMLCSubNavigationItemElement) => {\n        child.ariaHidden = (!focusable).toString();\n        child.focusable = focusable;\n      },\n    );\n  }\n\n  private _redirect(event: KeyboardEvent | Event) {\n    if (\n      (event instanceof KeyboardEvent && event?.key === 'Enter') ||\n      !(event instanceof KeyboardEvent)\n    ) {\n      if (this._isSubItem) {\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        event.preventDefault();\n      }\n\n      this.itemChange.emit(event);\n\n      if (!this._slotHasContent) {\n        const sidenav = document.querySelector('c-side-navigation');\n        sidenav.menuVisible = false;\n      }\n\n      if (this.href) {\n        if (this.target) {\n          window.open(this.href, this.target);\n        } else {\n          window.location.href = this.href;\n        }\n      }\n    }\n  }\n\n  private _slotHasContent = false;\n\n  private _assignSubItemSlots() {\n    const subItems = this.hostElement.querySelectorAll(\n      'c-side-navigation-item',\n    );\n\n    Array.from(subItems).forEach((item) => {\n      item.setAttribute('slot', 'sub-item');\n    });\n  }\n\n  componentWillLoad() {\n    this._assignSubItemSlots();\n\n    this._slotHasContent =\n      !!this.hostElement.querySelector('[slot=\"sub-item\"]');\n\n    this._isSubItem = !!this.hostElement.getAttribute('slot');\n\n    this._handleChildFocusableChange(this.active);\n  }\n\n  componentDidLoad() {\n    for (const node of this.hostElement.childNodes) {\n      if (node.nodeName === '#text') {\n        this._ariaLabel = node.nodeValue.trim();\n        break;\n      }\n    }\n\n    this._handleChildClasses();\n  }\n\n  private _handleChildClasses() {\n    if (!this._isSubItem) return;\n\n    Array.from(this.hostElement.children)\n      .filter((child) => child.tagName === 'C-SUB-NAVIGATION-ITEM')\n      .forEach((child: HTMLCSubNavigationItemElement) => {\n        child.classList.add('c-sub-navigation-item--sub-level');\n      });\n  }\n\n  render() {\n    const classes = {\n      'c-side-navigation-item': true,\n      'c-side-navigation-item--parent': this._slotHasContent,\n      active: this.active,\n    };\n\n    const subNavigationClasses = {\n      subnavactive: this.active,\n      'sub-item': !this.active,\n    };\n\n    const a11y = {\n      role: 'menuitem',\n      tabindex: '0',\n    };\n\n    if (this._slotHasContent) {\n      a11y['aria-expanded'] = (!!this.active)?.toString();\n    } else if (this.active) {\n      a11y['aria-current'] = 'page';\n    }\n\n    return (\n      <Host\n        {...a11y}\n        class={classes}\n        onClick={(e) => this._redirect(e)}\n        onKeyDown={(e) => this._redirect(e)}\n      >\n        <div\n          class={{\n            'c-side-navigation-item__header': true,\n            'c-side-navigation-item__header--expandable': this._slotHasContent,\n          }}\n        >\n          {this._slotHasContent && (\n            <c-icon class=\"svg\" path={mdiChevronRight}></c-icon>\n          )}\n          <div class=\"c-side-navigation-item__slot\">\n            <slot></slot>\n          </div>\n        </div>\n\n        {this._slotHasContent && (\n          <nav\n            role=\"menubar\"\n            aria-label={this._ariaLabel}\n            aria-expanded={(!!this.active)?.toString()}\n            class={subNavigationClasses}\n          >\n            <slot name=\"sub-item\"></slot>\n          </nav>\n        )}\n\n        <c-loader\n          size={32}\n          hide={!this.loading}\n          style={{ pointerEvents: 'none' }}\n        ></c-loader>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-side-navigation-title-color: Title color\n   * @prop --c-side-navigation-title-border-color: Title border color\n   */\n  --_c-side-navigation-title-color: var(--c-side-navigation-title-color, var(--c-white));\n  --_c-side-navigation-title-border-color: var(--c-side-navigation-title-border-color, var(--c-white));\n\n  align-items: center;\n  box-shadow: 0 1px 0 0 var(--_c-side-navigation-title-border-color);\n  color: var(--_c-side-navigation-title-color);\n  display: flex;\n  gap: 8px;\n  margin: 1.25rem 0 1rem;\n  padding: 4px 0;\n}\n","import { Component, Host, h } from '@stencil/core';\n\n/**\n * @parent c-side-navigation\n */\n@Component({\n  tag: 'c-side-navigation-title',\n  styleUrl: 'c-side-navigation-title.scss',\n  shadow: true,\n})\nexport class CSideNavigationTitle {\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",":host {\n  flex-grow: 1 !important;\n}\n","import { Component, Host, h } from '@stencil/core';\n/**\n * Spacer component for flex containers\n * @group Layout\n */\n@Component({\n  tag: 'c-spacer',\n  styleUrl: 'c-spacer.scss',\n  shadow: true,\n})\nexport class CSpacer {\n  render() {\n    return <Host></Host>;\n  }\n}\n",":host {\n  /**\n   * @prop --c-spinner-color: Spinner color\n   */\n  --_c-spinner-color: var(--c-spinner-color, var(--c-color));\n\n  // private\n  --_c-spinner-size: var(--c-size);\n  --_c-spinner-width: var(--c-width);\n\n  display: block;\n  height: var(--_c-spinner-size);\n  width: var(--_c-spinner-size);\n}\n\n:host(.c-spinner) {\n  svg {\n    fill: var(--_c-spinner-color);\n    height: var(--_c-spinner-size);\n    overflow: visible;\n    width: var(--_c-spinner-size);\n\n    circle {\n      animation: spinner 2.5s linear infinite;\n      fill: transparent;\n      stroke-dasharray: calc(3.14 * var(--_c-spinner-size));\n      stroke-linecap: round;\n      stroke-width: var(--_c-spinner-width);\n      stroke: var(--_c-spinner-color);\n      transform-origin: calc(0.5px * var(--_c-spinner-size))\n        calc(0.5px * var(--_c-spinner-size)) 0;\n    }\n  }\n\n  @keyframes spinner {\n    0% {\n      transform: rotate(0deg);\n      stroke-dashoffset: calc(0.66 * var(--_c-spinner-size));\n    }\n\n    50% {\n      transform: rotate(720deg);\n      stroke-dashoffset: calc(3.14 * var(--_c-spinner-size));\n    }\n\n    100% {\n      transform: rotate(1080deg);\n      stroke-dashoffset: calc(0.66 * var(--_c-spinner-size));\n    }\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n/**\n * @group indicators\n */\n@Component({\n  tag: 'c-spinner',\n  styleUrl: 'c-spinner.scss',\n  shadow: true,\n})\nexport class CSpinner {\n  /**\n   * Color of the spinner\n   */\n  @Prop() color = 'var(--c-primary-600)';\n\n  /**\n   * Size of the spinner\n   */\n  @Prop() size = 24;\n\n  /**\n   * Width of the spinner\n   */\n  @Prop() width = 2;\n\n  render() {\n    const iconParams = {\n      cx: this.size / 2,\n      cy: this.size / 2,\n      r: this.size / 2 - 2,\n    };\n\n    const style = {\n      '--c-size': `${this.size}px`,\n      '--c-width': `${this.width}px`,\n      '--c-color': this.color,\n    };\n\n    return (\n      <Host class=\"c-spinner\" style={style}>\n        <svg>\n          <circle {...iconParams}></circle>\n        </svg>\n      </Host>\n    );\n  }\n}\n",":host(c-sub-navigation-item) {\n  /**\n   * @prop --c-sub-navigation-item-text-color: Sub navigation item text color\n   * @prop --c-sub-navigation-item-background-color-hover: Sub navigation item hover background color\n   * @prop --c-sub-navigation-item-text-color-active: Sub navigation item active text color\n   * @prop --c-sub-navigation-item-background-color-active: Sub navigation item active background color\n   */\n  --_c-sub-navigation-item-text-color: var(\n    --c-sub-navigation-item-text-color,\n    var(--c-text-body)\n  );\n  --_c-sub-navigation-item-background-color: var(\n    --c-sub-navigation-item-background-color,\n    var(--c-transparent)\n  );\n  --_c-sub-navigation-item-background-color-hover: var(\n    --c-sub-navigation-item-background-color-hover,\n    var(--c-primary-100)\n  );\n  --_c-sub-navigation-item-text-color-active: var(\n    --c-sub-navigation-item-text-color-active,\n    var(--c-primary-600)\n  );\n  --_c-sub-navigation-item-background-color-active: var(\n    --c-sub-navigation-item-background-color-active,\n    var(--c-white)\n  );\n\n  /**\n   * @prop --c-sub-navigation-item-sub-item-background-color-active: Active 3rd level item background color\n   * @prop --c-sub-navigation-item-sub-item-background-color-hover: 3rd level item hover background color\n   * @prop --c-sub-navigation-item-sub-item-background-color: 3rd level item background color\n   * @prop --c-sub-navigation-item-sub-item-text-color-active: Active 3rd level item text color\n   * @prop --c-sub-navigation-item-sub-item-text-color: 3rd level item text color\n   */\n  --_c-sub-navigation-item-sub-item-background-color-active: var(\n    --c-sub-navigation-item-sub-item-background-color-active,\n    var(--c-primary-100)\n  );\n  --_c-sub-navigation-item-sub-item-background-color-hover: var(\n    --c-sub-navigation-item-sub-item-background-color-hover,\n    var(--c-primary-100)\n  );\n  --_c-sub-navigation-item-sub-item-background-color: var(\n    --c-sub-navigation-item-sub-item-background-color,\n    var(--c-transparent)\n  );\n  --_c-sub-navigation-item-sub-item-text-color-active: var(\n    --c-sub-navigation-item-sub-item-text-color-active,\n    var(--c-primary-600)\n  );\n  --_c-sub-navigation-item-sub-item-text-color: var(\n    --c-sub-navigation-item-sub-item-text-color,\n    var(--c-text-body)\n  );\n}\n\n:host(.c-sub-navigation-item--sub-level) {\n  --_c-sub-navigation-item-background-color: var(\n    --_c-sub-navigation-item-sub-item-background-color\n  );\n  --_c-sub-navigation-item-text-color: var(\n    --_c-sub-navigation-item-sub-item-text-color\n  );\n  --_c-sub-navigation-item-background-color-hover: var(\n    --_c-sub-navigation-item-sub-item-background-color-hover\n  );\n  --_c-sub-navigation-item-text-color-active: var(\n    --_c-sub-navigation-item-sub-item-text-color-active\n  );\n  --_c-sub-navigation-item-background-color-active: var(\n    --_c-sub-navigation-item-sub-item-background-color-active\n  );\n}\n\n.c-sub-navigation-item {\n  align-items: center;\n  background-color: var(--_c-sub-navigation-item-background-color);\n  border-radius: 4px;\n  color: var(--_c-sub-navigation-item-text-color);\n  cursor: pointer;\n  display: flex;\n  font-weight: 400;\n  line-height: 46px;\n  margin: 0 8px;\n  overflow: hidden;\n  padding-left: 34px;\n  position: relative;\n  transition: background-color 0.2s ease-in;\n  user-select: none;\n}\n\n.c-sub-navigation-item__wrapper {\n  padding: 2px 0;\n}\n\n.c-sub-navigation-item__content {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.c-sub-navigation-item__content::before {\n  background-color: var(--_c-sub-navigation-item-text-color-active);\n  content: '';\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transform: translateZ(0) translateX(-8px);\n  transition: transform 0.2s ease-in-out;\n  width: 8px;\n}\n\n.c-sub-navigation-item:hover {\n  background-color: var(--_c-sub-navigation-item-background-color-hover);\n  color: var(--_c-sub-navigation-item-text-color-active);\n}\n\n:host(.active) .c-sub-navigation-item {\n  background-color: var(--_c-sub-navigation-item-background-color-active);\n}\n\n:host(.active) .c-sub-navigation-item__content::before {\n  transform: translateZ(0) translateX(0);\n}\n\n::slotted(span) {\n  margin-right: 8px;\n  font-size: 20px;\n  line-height: 1;\n}\n\n:host(:host:focus),\n:host(:host:focus) .c-sub-navigation-item {\n  outline: none;\n}\n\n:host(:host:focus-visible) .c-sub-navigation-item {\n  outline: 2px var(--_c-sub-navigation-item-text-color-active) solid;\n  outline-offset: 2px;\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-sub-navigation-item__slot {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  slot {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n}\n","import { Component, h, Host, Element, Prop } from '@stencil/core';\n/**\n * @parent c-side-navigation\n */\n@Component({\n  tag: 'c-sub-navigation-item',\n  styleUrl: 'c-sub-navigation-item.scss',\n  shadow: true,\n})\nexport class CSubNavigationItem {\n  @Element() element: HTMLCSubNavigationItemElement;\n\n  /**\n   * Active state\n   */\n  @Prop() active: boolean;\n\n  /**\n   * Element is visible and focusable\n   */\n  @Prop() focusable = false;\n\n  /**\n   * Link url\n   */\n  @Prop() href: string;\n\n  /**\n   * Link target\n   */\n  @Prop() target: string = null;\n\n  /**\n   * Loading state\n   */\n  @Prop() loading = false;\n\n  private _redirect(event: KeyboardEvent | MouseEvent | PointerEvent) {\n    if (\n      (event instanceof KeyboardEvent && event?.key === 'Enter') ||\n      event instanceof MouseEvent ||\n      event instanceof PointerEvent\n    ) {\n      event.stopPropagation();\n\n      const sidenav = document.querySelector('c-side-navigation');\n      sidenav.menuVisible = false;\n\n      if (this.href) {\n        if (this.target) {\n          window.open(this.href, this.target);\n        } else {\n          window.location.href = this.href;\n        }\n      }\n    }\n  }\n\n  render() {\n    const a11y = {\n      tabindex: this.focusable ? '0' : '-1',\n      role: 'menuitem',\n    };\n\n    if (this.active) {\n      a11y['aria-current'] = 'page';\n    }\n\n    return (\n      <Host\n        {...a11y}\n        class={{ active: this.active }}\n        onClick={(e) => this._redirect(e)}\n        onKeyDown={(e) => this._redirect(e)}\n      >\n        <div class=\"c-sub-navigation-item__wrapper\">\n          <div class=\"c-sub-navigation-item\">\n            <div class=\"c-sub-navigation-item__content\">\n              <div class=\"c-sub-navigation-item__slot\">\n                <slot></slot>\n              </div>\n              {this.active && (\n                <span class=\"visuallyhidden\">, Current page</span>\n              )}\n            </div>\n\n            <c-loader\n              size={32}\n              hide={!this.loading}\n              style={{ pointerEvents: 'none' }}\n            ></c-loader>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host(c-switch) {\n  /**\n   * @prop --c-switch-border-color: Border color\n   * @prop --c-switch-handle-color: Handle color\n   * @prop --c-switch-slider-color: Background color\n   */\n  --_c-switch-border-color: var(--c-switch-border-color, var(--c-tertiary-600));\n  --_c-switch-handle-color: var(--c-switch-handle-color, var(--c-tertiary-600));\n  --_c-switch-slider-color: var(--c-switch-slider-color, var(--c-transparent));\n\n  /**\n   * @prop --c-switch-border-color-disabled: Disabled border color\n   * @prop --c-switch-handle-color-disabled: Disabled handle color\n   * @prop --c-switch-slider-color-disabled: Disabled background color\n   */\n  --_c-switch-border-color-disabled: var(--c-switch-border-color-disabled, var(--c-transparent));\n  --_c-switch-handle-color-disabled: var(--c-switch-handle-color-disabled, var(--c-tertiary-500));\n  --_c-switch-slider-color-disabled: var(--c-switch-slider-color-disabled, var(--c-tertiary-200));\n\n  /**\n   * @prop --c-switch-slider-color-active: Active background color\n   * @prop --c-switch-border-color-active: Active border color\n   * @prop --c-switch-handle-color-active: Active handle color\n   */\n  --_c-switch-border-color-active: var(--c-switch-border-color-active, var(--c-primary-600));\n  --_c-switch-handle-color-active: var(--c-switch-handle-color-active, var(--c-white));\n  --_c-switch-slider-color-active: var(--c-switch-slider-color-active, var(--c-primary-600));\n\n  /**\n   * @prop --c-switch-border-color-active-disabled: Disabled active border color\n   * @prop --c-switch-handle-color-active-disabled: Disabled active handle color\n   * @prop --c-switch-slider-color-active-disabled: Disabled active background color\n   */\n  --_c-switch-border-color-active-disabled: var(--c-switch-border-color-active-disabled, var(--c-tertiary-400));\n  --_c-switch-handle-color-active-disabled: var(--c-switch-handle-color-active-disabled, var(--c-white));\n  --_c-switch-slider-color-active-disabled: var(--c-switch-slider-color-active-disabled, var(--c-tertiary-400));\n\n  display: inline-block;\n}\n\n.c-switch {\n  --_c-switch-handle-margin: 5px;\n  --_c-switch-pointer: pointer;\n  --_c-switch-height: 22px;\n  --_c-switch-width: 44px;\n  --_c-switch-handle-size: calc(var(--_c-switch-height) - 2 * var(--_c-switch-handle-margin));\n  --_c-switch-handle-position-active: calc(\n    var(--_c-switch-width) - var(--_c-switch-handle-size) - 2 * var(--_c-switch-handle-margin)\n  );\n\n  $this: &;\n\n  backface-visibility: hidden;\n  transform: translate3d(0, 0, 0);\n  display: inline-grid;\n  height: var(--_c-switch-height);\n  position: relative;\n  grid-template-columns: 1fr;\n  gap: 12px;\n  align-items: center;\n\n  &--disabled {\n    --_c-switch-pointer: default;\n    --_c-switch-handle-color: var(--_c-switch-handle-color-disabled);\n    --_c-switch-slider-color: var(--_c-switch-slider-color-disabled);\n    --_c-switch-border-color: var(--_c-switch-border-color-disabled);\n    --c-error-600: var(--c-tertiary-400);\n\n    color: var(--c-tertiary-500);\n  }\n\n  &--label {\n    grid-template-columns: var(--_c-switch-width) auto;\n  }\n\n  &__label {\n    span.required {\n      color: var(--c-error-600);\n    }\n  }\n\n  &__input {\n    height: var(--_c-switch-height);\n    position: relative;\n    width: var(--_c-switch-width);\n    align-self: start;\n  }\n\n  &__slider {\n    background-color: var(--_c-switch-slider-color);\n    border-radius: var(--_c-switch-height);\n    box-shadow: inset 0 0 0 2px var(--_c-switch-border-color);\n    inset: 0;\n    cursor: var(--_c-switch-pointer);\n    position: absolute;\n    transform-origin: 50% 50%;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &::before {\n      background-color: var(--_c-switch-handle-color);\n      border-radius: 50%;\n      bottom: var(--_c-switch-handle-margin);\n      content: \"\";\n      height: var(--_c-switch-handle-size);\n      left: var(--_c-switch-handle-margin);\n      position: absolute;\n      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      width: var(--_c-switch-handle-size);\n    }\n  }\n\n  input {\n    height: 0;\n    opacity: 0;\n    width: 0;\n\n    &:checked {\n      + {\n        #{$this} {\n          &__slider {\n            --_c-switch-handle-color: var(--_c-switch-handle-color-active);\n            --_c-switch-slider-color: var(--_c-switch-slider-color-active);\n            --_c-switch-border-color: var(--_c-switch-border-color-active);\n\n            &::before {\n              transform: translateX(var(--_c-switch-handle-position-active));\n            }\n\n            &--disabled {\n              --_c-switch-handle-color: var(--_c-switch-handle-color-active-disabled);\n              --_c-switch-slider-color: var(--_c-switch-slider-color-active-disabled);\n              --_c-switch-border-color: var(--_c-switch-border-color-active-disabled);\n            }\n          }\n        }\n      }\n    }\n\n    &:focus {\n      + {\n        #{$this} {\n          &__slider {\n            outline: none;\n          }\n        }\n      }\n    }\n\n    &:focus-visible {\n      + {\n        #{$this} {\n          &__slider {\n            outline: 2px var(--c-primary-600) solid;\n            outline-offset: 2px;\n          }\n        }\n      }\n    }\n  }\n}\n","import {\n  Component,\n  h,\n  Element,\n  Prop,\n  State,\n  Event,\n  EventEmitter,\n  AttachInternals,\n} from '@stencil/core';\n\n/**\n * @group Form\n * @slot label - Label text for the switch\n */\n@Component({\n  tag: 'c-switch',\n  styleUrl: 'c-switch.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CSwitch {\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * If `true`, the checkbox is selected.\n   */\n  @Prop({ mutable: true }) checked = false;\n\n  /**\n   * The input value\n   * - Only used when the checkbox participates in a native `<form>`\n   */\n  @Prop() value: string | boolean = false;\n\n  /**\n   * The value when the checkbox is checked\n   */\n  @Prop() trueValue: boolean | string = true;\n\n  /**\n   * The value when the checkbox is unchecked\n   */\n  @Prop() falseValue: boolean | string = false;\n\n  /**\n   * Disable the switch\n   */\n  @Prop({ attribute: 'disabled' }) hostDisabled = false;\n\n  /**\n   * Id for the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  @Element() host: HTMLCSwitchElement;\n\n  @State() hasLabel = false;\n\n  /**\n   * Emit inner value change to parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  componentWillLoad() {\n    this.checked = this.checked || this.value === this.trueValue;\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  componentDidLoad() {\n    const slotted = this.host.childNodes;\n\n    this.hasLabel = slotted && slotted.length > 0;\n  }\n\n  private _toggleState = () => {\n    if (this.hostDisabled) return;\n\n    this.checked = !this.checked;\n\n    this.changeValue.emit(this.checked ? this.trueValue : this.falseValue);\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  };\n\n  render() {\n    const classes = {\n      'c-switch': true,\n      'c-switch--disabled': !!this.hostDisabled,\n      'c-switch--label': this.hasLabel,\n    };\n\n    const sliderClasses = {\n      'c-switch__slider': true,\n      'c-switch__slider--disabled': !!this.hostDisabled,\n    };\n\n    return (\n      <label class={classes} htmlFor={this.hostId}>\n        <div class=\"c-switch__input\">\n          <input\n            id={this.hostId}\n            aria-checked={this.checked.toString()}\n            type=\"checkbox\"\n            role=\"switch\"\n            disabled={this.hostDisabled}\n            checked={this.checked ? true : undefined}\n            onChange={() => this._toggleState()}\n          />\n          <span class={sliderClasses}></span>\n        </div>\n        {this.hasLabel ? (\n          <div class=\"c-switch__label\">\n            <slot></slot>\n\n            {this.required && <span class=\"required\">&nbsp;*</span>}\n          </div>\n        ) : null}\n      </label>\n    );\n  }\n}\n",":host,\n:root {\n  /**\n   * @prop --c-table-border-color: Table border color\n   * @prop --c-table-header-text-color: Table header text color\n   * @prop --c-table-row-background-color-mobile: Background color for table rows (even) in mobile\n   */\n  --_c-table-border-color: var(--c-table-border-color, var(--c-tertiary-200));\n  --_c-table-header-text-color: var(--c-table-header-text-color, var(--c-text-system));\n  --_c-table-row-background-color-mobile: var(--c-table-row-background-color-mobile, rgba(var(--c-primary-rgb), 0.05));\n}\n\ntable.c-table {\n  border-collapse: collapse;\n  border-spacing: 0;\n  border: 0;\n  font-size: 100%;\n  font-family: var(--c-font-family);\n  margin: 0;\n  padding: 0;\n  width: 100%;\n\n  slot {\n    display: table;\n  }\n\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td {\n    border: 0;\n    font-size: 100%;\n    font-family: var(--c-font-family);\n    margin: 0;\n    padding: 0;\n  }\n\n  thead {\n    background-color: var(--c-white);\n    position: relative;\n\n    th {\n      border-bottom: 2px solid var(--_c-table-border-color);\n      text-align: left;\n    }\n  }\n\n  tbody {\n    box-shadow: inset 1px 0 0 0 var(--_c-table-border-color),\n      inset -1px 0 0 0 var(--_c-table-border-color),\n      inset 0 1px 0 0 var(--_c-table-border-color),\n      inset 0 -1px 0 0 var(--_c-table-border-color);\n\n    /* Safari box shadow replacement */\n    @supports (-webkit-hyphens: none) {\n      border: 1px solid var(--_c-table-border-color);\n\n      tr {\n        border-bottom: 1px solid var(--_c-table-border-color);\n      }\n    }\n\n    tr {\n      box-shadow: inset 0 1px 0 0 var(--_c-table-border-color);\n    }\n  }\n\n  tfoot {\n    background-color: var(--c-white);\n\n    tr {\n      box-shadow: inset 0 1px 0 0 var(--_c-table-border-color);\n    }\n\n    td {\n      min-height: 48px;\n\n      c-pagination {\n        flex: 1;\n      }\n    }\n  }\n\n  th,\n  td {\n    font-weight: 400;\n    box-sizing: border-box;\n    line-height: normal;\n    padding: 16px;\n  }\n\n  th {\n    height: 48px;\n    font-size: 14px;\n    color: var(--_c-table-header-text-color);\n  }\n\n  td {\n    font-size: 16px;\n    color: var(--c-text-body);\n  }\n\n  &--mobile {\n    border-spacing: 0 16px;\n    border-collapse: separate;\n\n    tbody {\n      box-shadow: none;\n\n      tr {\n        border-radius: 4px;\n\n        /* Safari box shadow replacement */\n        @supports (-webkit-hyphens: none) {\n          display: grid;\n          margin-bottom: 16px;\n          border: none;\n        }\n\n        box-shadow: inset 0 0 0 1px var(--_c-table-border-color);\n      }\n    }\n\n    thead {\n      display: none;\n    }\n\n    td {\n      display: grid;\n      gap: 4px;\n      padding: 12px;\n      min-height: 62px;\n\n      &::before {\n        font-size: 14px;\n        color: var(--_c-table-header-text-color);\n        content: attr(data-title);\n        display: inline-block;\n        text-align: start;\n        padding-right: 8px;\n      }\n\n      &:nth-of-type(even) {\n        background-color: var(--_c-table-row-background-color-mobile);\n      }\n    }\n  }\n}\n","import { Component, Element, Host, Prop, h } from '@stencil/core';\n\n/**\n * @group tables\n */\n@Component({\n  tag: 'c-table',\n  styleUrl: 'c-table.scss',\n  shadow: false,\n})\nexport class CTable {\n  @Element() el: HTMLCTableElement;\n\n  /**\n   * Mobile breakpoint in pixels\n   */\n  @Prop() mobileBreakpoint = 600;\n\n  /**\n   * Should the table be responsive\n   */\n  @Prop() responsive = false;\n\n  private _tableElement: HTMLTableElement;\n\n  private _observer: ResizeObserver;\n\n  get cells() {\n    return Array.from(\n      this._tableElement.querySelectorAll('td'),\n    ) as HTMLTableCellElement[];\n  }\n\n  get headers() {\n    return (\n      Array.from(\n        this._tableElement.querySelectorAll('th'),\n      ) as HTMLTableCellElement[]\n    ).map((th) => th.innerHTML);\n  }\n\n  private _handleResize(width: number) {\n    const isMobile = width <= this.mobileBreakpoint;\n\n    this._tableElement.classList.toggle('c-table--mobile', isMobile);\n  }\n\n  componentWillLoad() {\n    this._tableElement = this.el.querySelector('table');\n    this._tableElement.classList.add('c-table');\n\n    this._observer = new ResizeObserver(([entry]) => {\n      const { width } = entry.contentRect;\n\n      this._handleResize(width);\n    });\n  }\n\n  componentDidLoad() {\n    if (this.responsive) {\n      this._observer.observe(this._tableElement);\n    }\n\n    this.cells.forEach((cell, index) => {\n      cell.dataset.title = this.headers[+index % this.headers.length];\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",":root,\n:host {\n  /**\n   * @prop --c-text-field-active-color: Active text field color\n   * @prop --c-text-field-inactive-color: Inactive text field color\n   * @prop --c-text-field-background-color: Inactive text field background color\n   * @prop --c-text-field-text-color: Text field text color\n   * @prop --c-text-field-placeholder-color:Text field placeholder color\n   * @prop --c-text-field-shadow-active-color: Shadow text field active color\n   * @prop --c-text-field-shadow-background-color: Shadow text field background color\n   * @prop --c-text-field-shadow-text-color: Shadow text field text color\n   * @prop --c-text-field-shadow-placeholder-color: Shadow text field placeholder color\n   */\n  --_c-text-field-active-color: var(--c-text-field-active-color, var(--c-primary-600));\n  --_c-text-field-inactive-color: var(--c-text-field-inactive-color, var(--c-tertiary-600));\n  --_c-text-field-background-color: var(--c-text-field-background-color, var(--c-transparent));\n  --_c-text-field-text-color: var(--c-text-field-text-color, var(--c-text-body));\n  --_c-text-field-placeholder-color: var(--c-text-field-placeholder-color, var(--c-tertiary-500));\n  --_c-text-field-shadow-active-color: var(--c-text-field-shadow-active-color, var(--_c-text-field-active-color));\n  --_c-text-field-shadow-background-color: var(--c-text-field-shadow-background-color, var(--c-white));\n  --_c-text-field-shadow-text-color: var(--c-text-field-shadow-text-color, var(--_c-text-field-text-color));\n  --_c-text-field-shadow-placeholder-color: var(--c-text-field-shadow-placeholder-color, var(--_c-text-field-placeholder-color));\n}\n\n.c-input {\n  --_c-input-active-color: var(--_c-text-field-active-color);\n  --_c-input-inactive-color: var(--_c-text-field-inactive-color);\n  --_c-input-background-color: var(--_c-text-field-background-color);\n  --_c-input-text-color: var(--_c-text-field-text-color);\n  --_c-input-placeholder-color: var(--_c-text-field-placeholder-color);\n  --_c-input-shadow-active-color: var(--_c-text-field-shadow-active-color);\n  --_c-input-shadow-background-color: var(--_c-text-field-shadow-background-color);\n  --_c-input-shadow-text-color: var(--_c-text-field-shadow-text-color);\n  --_c-input-shadow-placeholder-color: var(--_c-text-field-shadow-placeholder-color);\n\n  &__password-toggle,\n  &__date-toggle {\n    cursor: pointer;\n    fill: currentColor;\n    height: 22px;\n    width: 22px;\n\n    &--disabled {\n      cursor: not-allowed;\n      fill: var(--c-tertiary-500);\n    }\n  }\n\n  input {\n    &[type=\"date\"] {\n      opacity: 0;\n\n      &::-webkit-calendar-picker-indicator,\n      &::-webkit-inner-spin-button {\n        display: none;\n        appearance: none;\n      }\n\n      &:focus,\n      &.c-input__input--filled {\n        opacity: 1;\n      }\n    }\n  }\n}\n","import {\n  AttachInternals,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { mdiCalendar, mdiEye, mdiEyeOff } from '@mdi/js';\n\n/**\n * @group Form\n * @slot pre - Content added before the input\n * @slot post - Content added after the input\n */\n@Component({\n  tag: 'c-text-field',\n  styleUrl: 'c-text-field.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CTextField {\n  // eslint-disable-next-line\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Auto focus the input\n   */\n  @Prop() autofocus = false;\n\n  /**\n   * HTML input autocapitalize\n   */\n  @Prop() autocapitalize = '';\n\n  /**\n   * HTML input autocorrect\n   */\n  @Prop() autocorrect = '';\n\n  /**\n   * HTML input autocomplete\n   */\n  @Prop() autocomplete = '';\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the input\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Trim whitespace from the return value\n   */\n  @Prop() trimWhitespace = false;\n\n  /**\n   * Label of the input\n   */\n  @Prop() label: string;\n\n  /**\n   * Maximum value on a numeric input\n   */\n  @Prop() max: number = null;\n\n  /**\n   * Minimum value on a numeric input\n   */\n  @Prop() min: number = null;\n\n  /**\n   * Name of the input\n   */\n  @Prop() name: string;\n\n  /**\n   * Placeholder of the input\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Mark as readonly\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Set the input as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Rows on the input\n   */\n  @Prop() rows = 1;\n\n  /**\n   * Shadow variant of the input\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Step size on a numeric input\n   */\n  @Prop() step: number = null;\n\n  /**\n   * Type of the input\n   */\n  @Prop() type = 'text';\n\n  /**\n   * Set the validity of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Value of the input\n   */\n  @Prop({ mutable: true }) value: string;\n\n  /**\n   * Emit changes to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() isFocused = false;\n\n  @State() labelWidth = 0;\n\n  @State() preSlotWidth = 0;\n\n  @Element() hiddenEl!: HTMLCTextFieldElement;\n\n  private _inputElement: HTMLInputElement;\n\n  private _originalType = '';\n\n  private _inputId: string;\n\n  private static _uniqueId = 0;\n\n  componentWillLoad() {\n    CTextField._uniqueId += 1;\n\n    this._originalType = this.type;\n\n    this._inputId = `${(\n      this.hostId ||\n      this.label ||\n      this.placeholder ||\n      ''\n    ).replace(/[^a-zA-Z0-9-_]/g, '')}_${CTextField._uniqueId}`;\n\n    this.internals.setFormValue(this.value);\n  }\n\n  get isActive() {\n    return !!this.value || this.isFocused;\n  }\n\n  get passwordIcon() {\n    return this.type === 'password' ? mdiEye : mdiEyeOff;\n  }\n\n  private _handleChange = (event) => {\n    if (this.type === 'number' && !event.target.value && event.key === '-') {\n      return;\n    }\n\n    this.value = this.trimWhitespace\n      ? event.target.value.trim()\n      : event.target.value;\n\n    this.changeValue.emit(this.value);\n    this.internals.setFormValue(this.value);\n  };\n\n  private _handleBlur = (event) => {\n    if (this.trimWhitespace) {\n      const trimmedValue = event.target.value.trim();\n\n      event.target.value = trimmedValue;\n    }\n  };\n\n  private _renderInputElement() {\n    const props = {\n      classes: {\n        'c-input__input': true,\n        'c-input__input--filled': !!this.value,\n      },\n      shared: {\n        id: this._inputId,\n        name: this.name,\n        disabled: this.disabled,\n        readonly: this.readonly,\n        value: this.value,\n        onInput: this._handleChange,\n        onChange: this._handleChange,\n        onBlur: this._handleBlur,\n      },\n      input: {\n        type: this.type,\n        min: this.min,\n        max: this.max,\n        step: this.step,\n        ...(!!this.autocomplete && { autocomplete: this.autocomplete }),\n        ...(!!this.autocapitalize && { autocapitalize: this.autocapitalize }),\n        ...(!!this.autocorrect && { autocorrect: this.autocorrect }),\n      },\n      textArea: {\n        rows: this.rows,\n      },\n    };\n\n    const textInput = (\n      <input\n        class={props.classes}\n        {...props.input}\n        {...props.shared}\n        ref={(el) => (this._inputElement = el)}\n      />\n    );\n\n    const textArea = (\n      <textarea\n        class={props.classes}\n        {...props.shared}\n        {...props.textArea}\n      ></textarea>\n    );\n\n    return this.rows > 1 ? textArea : textInput;\n  }\n\n  private _isFirefox() {\n    return !!navigator.userAgent.match(/firefox|fxios/i);\n  }\n\n  private _renderDateToggle() {\n    if (this._originalType !== 'date' || this._isFirefox()) return;\n\n    const classes = {\n      'c-input__date-toggle': true,\n      'c-input__date-toggle--disabled': this.disabled,\n    };\n\n    return (\n      <svg\n        class={classes}\n        viewBox=\"0 0 24 24\"\n        onClick={this._toggleDatepicker.bind(this)}\n      >\n        <path d={mdiCalendar} />\n      </svg>\n    );\n  }\n\n  private _toggleDatepicker() {\n    this._inputElement?.showPicker();\n  }\n\n  private _renderPasswordToggle() {\n    if (this._originalType !== 'password') return;\n\n    const classes = {\n      'c-input__password-toggle': true,\n      'c-input__password-toggle--disabled': this.disabled,\n    };\n\n    return (\n      <svg\n        class={classes}\n        viewBox=\"0 0 24 24\"\n        onClick={this._togglePasswordVisibility}\n      >\n        <path d={this.passwordIcon} />\n      </svg>\n    );\n  }\n\n  private _togglePasswordVisibility = () => {\n    if (this.disabled) return;\n\n    this.type = this.type === 'password' ? 'text' : 'password';\n  };\n\n  render() {\n    return (\n      <Host>\n        <c-input\n          autofocus={this.autofocus}\n          disabled={this.disabled}\n          hide-details={this.hideDetails}\n          hint={this.hint}\n          id={this.hostId}\n          input-id={this._inputId}\n          label={this.label}\n          name={this.name}\n          placeholder={this.placeholder}\n          readonly={this.readonly}\n          required={this.required}\n          rows={this.rows}\n          shadow={this.shadow}\n          type={this.type}\n          valid={this.valid}\n          validate={this.validate}\n          validate-on-blur={this.validateOnBlur}\n          validation={this.validation}\n          value={this.value}\n        >\n          <slot name=\"pre\" slot=\"pre\"></slot>\n\n          {this._renderInputElement()}\n\n          {this._renderPasswordToggle()}\n\n          {this._renderDateToggle()}\n\n          <slot name=\"post\"></slot>\n        </c-input>\n      </Host>\n    );\n  }\n}\n",":host {\n  /**\n   * @prop --c-toolbar-background-color: Toolbar background color\n   * @prop --c-toolbar-text-color: Toolbar text color\n   */\n  --_c-toolbar-background-color: var(--c-toolbar-background-color, var(--c-white));\n  --_c-toolbar-text-color: var(--c-toolbar-text-color, var(--c-text-system));\n\n  z-index: 1;\n\n  .c-toolbar {\n    align-items: center;\n    background: var(--_c-toolbar-background-color);\n    box-shadow: 2px 4px 10px #00000029;\n    color: var(--_c-toolbar-text-color);\n    column-gap: 12px;\n    display: flex;\n    height: 60px;\n    padding-left: 16px;\n    padding-right: 16px;\n    position: fixed;\n    width: 100%;\n  }\n\n  .spacer {\n    height: 60px;\n    width: 100%;\n  }\n}\n\n:host(.relative) .c-toolbar {\n  position: relative;\n  margin-bottom: -60px;\n}\n","import { Component, Host, h } from '@stencil/core';\n/**\n * @group Navigation\n * @slot Default slot - Content of toolbar\n */\n@Component({\n  tag: 'c-toolbar',\n  styleUrl: 'c-toolbar.scss',\n  shadow: true,\n})\nexport class CToolbar {\n  render() {\n    return (\n      <Host>\n        <div class=\"c-toolbar\">\n          <slot></slot>\n        </div>\n        <div class=\"spacer\"></div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}