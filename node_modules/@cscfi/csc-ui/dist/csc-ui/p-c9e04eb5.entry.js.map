{"version":3,"names":["cPaginationCss","CPagination","this","_textContent","itemsPerPageText","nextPage","prevPage","_buttons","_increasePageNumber","_currentPage","_getTotalPages","_valueChangeHandler","_decreasePageNumber","itemCount","valueHandler","value","oldValue","_isEqual","requestAnimationFrame","_setRange","options1","options2","keys1","Object","keys","keys2","length","key","componentWillLoad","_getText","source","_a","textOverrides","currentPage","_itemsPerPage","itemsPerPage","_totalVisible","totalVisible","_pageSizes","pageSizes","startFrom","endTo","changeValue","emit","_renderMenu","map","i","name","toString","action","onMenuClick","event","stopPropagation","h","class","items","onClick","Math","ceil","_setPage","number","_getRange","hideRange","end","min","start","pageTextOverride","pageText","parsedPageTextOverride","count","_getArrowLeft","size","disabled","text","path","mdiChevronLeft","_getArrowRight","mdiChevronRight","_button","params","pageOfTextOverride","pageOfText","parsedPageOfTextOverride","pageNumber","assign","_addButton","push","_addSeparator","tabindex","role","width","height","viewBox","d","mdiDotsHorizontal","_addButtons","buttonStart","buttonCount","index","allPagesVisible","_getPageButtons","morePagesThanVisible","_renderPaginationButtons","buttonsize","simple","render","classes","Host","hideDetails","range"],"sources":["src/components/c-pagination/c-pagination.scss?tag=c-pagination&encapsulation=shadow","src/components/c-pagination/c-pagination.tsx"],"sourcesContent":[":host {\n  /**\n   * @prop --c-pagination-button-active-background-color: Active pagination button background color\n   * @prop --c-pagination-button-active-background-color-hover: Active pagination button hover background color\n   * @prop --c-pagination-button-active-text-color: Active pagination button text color\n   * @prop --c-pagination-button-background-color: Pagination button background color\n   * @prop --c-pagination-button-background-color-hover:  Pagination button hover background color\n   * @prop --c-pagination-button-text-color: Pagination button text color\n   * @prop --c-pagination-text-color: Pagination text color\n   */\n  --_c-pagination-button-active-background-color: var(--c-pagination-button-active-background-color, var(--c-primary-600));\n  --_c-pagination-button-active-background-color-hover: var(--c-pagination-button-active-background-color-hover, var(--c-primary-400));\n  --_c-pagination-button-active-text-color: var(--c-pagination-button-active-text-color, var(--c-white));\n  --_c-pagination-button-background-color: var(--c-pagination-button-background-color, var(--c-transparent));\n  --_c-pagination-button-background-color-hover: var(--c-pagination-button-background-color-hover, rgba(var(--c-primary-rgb), 0.1));\n  --_c-pagination-button-text-color: var(--c-pagination-button-text-color, var(--_c-pagination-button-active-background-color));\n  --_c-pagination-text-color: var(--c-pagination-text-color, var(--c-text-system));\n\n  /**\n   * @prop --c-pagination-menu-text-color: Pagination menu text color\n   * @prop --c-pagination-menu-text-color-active: Active pagination menu text color\n   * @prop --c-pagination-menu-background-color-hover: Pagination menu hover background color\n   * @prop --c-pagination-menu-outline-color: Pagination menu outline color\n   */\n  --_c-pagination-menu-text-color: var(--c-pagination-menu-text-color, var(--c-text-system));\n  --_c-pagination-menu-text-color-active: var(--c-pagination-menu-text-color-active, var(--c-primary-600));\n  --_c-pagination-menu-background-color-hover: var(--c-pagination-menu-background-color-hover, var(--c-primary-200));\n  --_c-pagination-menu-outline-color: var(--c-pagination-menu-outline-color, var(--c-primary-600));\n\n  c-icon-button {\n    --c-icon-button-background-color: var(--_c-pagination-button-active-background-color);\n    --c-icon-button-background-color-hover: var(--_c-pagination-button-active-background-color-hover);\n    --c-icon-button-text-color: var(--_c-pagination-button-active-text-color);\n    --c-icon-button-text-background-color: var(--_c-pagination-button-background-color);\n    --c-icon-button-text-background-color-hover: var(--_c-pagination-button-background-color-hover);\n    --c-icon-button-text-text-color: var(--_c-pagination-button-text-color);\n  }\n\n  display: block;\n\n  span {\n    font-size: 14px;\n    text-align: right;\n    white-space: nowrap;\n  }\n\n  .range {\n    min-width: 132px;\n  }\n\n  .visuallyhidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n}\n\n:host(.c-pagination) {\n  nav {\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0 24px;\n    justify-content: center;\n    width: 100%;\n  }\n\n  ul {\n    align-items: center;\n    display: flex;\n    gap: 4px;\n    justify-content: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .c-pagination__details {\n    color: var(--_c-pagination-text-color);\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    flex: auto;\n    justify-content: space-between;\n  }\n\n  .c-pagination__items-per-page {\n    color: var(--_c-pagination-text-color);\n    font-size: 14px;\n    text-align: right;\n    white-space: nowrap;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n  }\n\n  c-menu {\n    --c-menu-text-color: var(--_c-pagination-menu-text-color);\n    --c-menu-text-color-active: var(--_c-pagination-menu-text-color-active);\n    --c-menu-background-color-hover: var(--_c-pagination-menu-background-color-hover);\n    --c-menu-outline-color: var(--_c-pagination-menu-outline-color);\n  }\n}\n\n:host(.c-pagination--simple) {\n  ul {\n    flex: 1;\n    justify-content: flex-end;\n  }\n}\n\n:host(.c-pagination--small) {\n  ul {\n    gap: 2px;\n  }\n}\n","import {\n  Component,\n  h,\n  Host,\n  Prop,\n  Event,\n  EventEmitter,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { mdiChevronLeft, mdiChevronRight, mdiDotsHorizontal } from '@mdi/js';\nimport { CMenuOption, CPaginationOptions } from '../../types';\n\n/**\n * @group Navigation\n */\n\n@Component({\n  tag: 'c-pagination',\n  styleUrl: 'c-pagination.scss',\n  shadow: true,\n})\nexport class CPagination {\n  /**\n   * Object containing values that are needed for pagination.\n   *\n   * Note! startFrom and endTo are assigned automatically to the object based on other values\n   */\n  @Prop() value: CPaginationOptions = {\n    itemCount: 0,\n  };\n\n  /**\n   * Hide details (per page dropdown and the 'x - y of n pages' text)\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hide page number buttons\n   */\n  @Prop() simple = false;\n\n  /**\n   * Hide details (per page dropdown and the 'x - y of n pages' text)\n   */\n  @Prop() size: 'default' | 'small' = 'default';\n\n  @State() private _currentPage;\n\n  @State() private _itemsPerPage;\n\n  @State() private _pageSizes;\n\n  @State() private _totalVisible;\n\n  /**\n   * Triggered when values are changed\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter<CPaginationOptions>;\n\n  /**\n   * Hide range indicator\n   */\n  @Prop() hideRange = false;\n\n  @State() tick = '';\n\n  @Watch('value')\n  valueHandler(value: CPaginationOptions, oldValue: CPaginationOptions) {\n    if (this._isEqual(value, oldValue)) return;\n\n    requestAnimationFrame(() => {\n      this._setRange();\n    });\n  }\n\n  private _isEqual(options1: CPaginationOptions, options2: CPaginationOptions) {\n    const keys1 = Object.keys(options1 || {});\n    const keys2 = Object.keys(options2 || {});\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      if (options1[key] !== options2[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  componentWillLoad() {\n    this._setRange();\n  }\n\n  private _textContent = {\n    itemsPerPageText: 'Items per page:',\n    nextPage: 'Next page',\n    prevPage: 'Previous page',\n  };\n\n  private _getText(key: string) {\n    const source = this.value.textOverrides?.[key]\n      ? this.value.textOverrides\n      : this._textContent;\n\n    return source[key];\n  }\n\n  private _setRange() {\n    if (!this.value) return;\n\n    this._currentPage = this.value.currentPage || 1;\n\n    this._itemsPerPage = this.value.itemsPerPage || 25;\n\n    this._totalVisible = this.value.totalVisible || 7;\n\n    this._pageSizes = this.value.pageSizes || [5, 25, 50, 100];\n\n    this.value.startFrom =\n      this._currentPage * this._itemsPerPage - this._itemsPerPage;\n\n    this.value.endTo = this._currentPage * this._itemsPerPage - 1;\n\n    this.changeValue.emit(this.value);\n  }\n\n  private _buttons: HTMLLIElement[] = [];\n\n  private _valueChangeHandler() {\n    this.value.currentPage = this._currentPage;\n\n    this.value.itemsPerPage = this._itemsPerPage;\n\n    this._setRange();\n  }\n\n  private _renderMenu() {\n    const pageSizes: CMenuOption[] = this._pageSizes.map((i) => ({\n      name: i.toString(),\n      action: () => {\n        this._itemsPerPage = i;\n        this._currentPage = 1;\n        this._valueChangeHandler();\n      },\n    }));\n\n    const onMenuClick = (event) => {\n      event.stopPropagation();\n    };\n\n    return (\n      <div class=\"c-pagination__items-per-page\">\n        {this._getText('itemsPerPageText')}\n\n        <c-menu items={pageSizes} onClick={onMenuClick}>\n          <div>\n            <span class=\"items-per-page\">{this._itemsPerPage}</span>\n          </div>\n        </c-menu>\n      </div>\n    );\n  }\n\n  private _getTotalPages() {\n    return Math.ceil(this.value.itemCount / this._itemsPerPage);\n  }\n\n  private _increasePageNumber = () => {\n    if (this._currentPage < this._getTotalPages()) {\n      this._currentPage += 1;\n      this._valueChangeHandler();\n    }\n  };\n\n  private _decreasePageNumber = () => {\n    if (this._currentPage > 1) {\n      this._currentPage -= 1;\n      this._valueChangeHandler();\n    }\n  };\n\n  private _setPage(number) {\n    this._currentPage = number;\n    this._valueChangeHandler();\n  }\n\n  private _getRange() {\n    if (this.hideRange || !this.value.itemCount) return;\n\n    const end = Math.min(\n      this._currentPage * this._itemsPerPage,\n      this.value.itemCount,\n    );\n    const start = this.value.startFrom + 1;\n\n    const pageTextOverride = this.value.textOverrides?.pageText;\n\n    let parsedPageTextOverride;\n\n    if (pageTextOverride) {\n      parsedPageTextOverride = pageTextOverride({\n        start: start,\n        end: end,\n        count: this.value.itemCount,\n      });\n    }\n\n    return pageTextOverride\n      ? parsedPageTextOverride\n      : `${start} - ${end} of ${this.value.itemCount} items`;\n  }\n\n  private _getArrowLeft(size) {\n    return (\n      <li>\n        <c-icon-button\n          aria-disabled={this.value.currentPage <= 1 ? 'true' : 'false'}\n          aria-label={`${this._getText('prevPage')}`}\n          disabled={this.value.currentPage <= 1}\n          size={size}\n          text\n          onClick={this._decreasePageNumber}\n        >\n          <span class=\"visuallyhidden\">{this._getText('prevPage')}</span>\n\n          <c-icon path={mdiChevronLeft}></c-icon>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _getArrowRight(size) {\n    return (\n      <li>\n        <c-icon-button\n          aria-disabled={\n            this.value.currentPage >= this._getTotalPages() ? 'true' : 'false'\n          }\n          aria-label={`${this._getText('nextPage')}`}\n          disabled={this.value.currentPage >= this._getTotalPages()}\n          size={size}\n          text\n          onClick={this._increasePageNumber}\n        >\n          <span class=\"visuallyhidden\">{this._getText('nextPage')}</span>\n\n          <c-icon path={mdiChevronRight}></c-icon>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _button(number, size) {\n    const params = {\n      text: this._currentPage !== number,\n      onClick: () => this._setPage(number),\n      size,\n    };\n\n    if (this._currentPage === number) {\n      params['aria-current'] = 'page';\n    }\n\n    const pageOfTextOverride = this.value.textOverrides?.pageOfText;\n\n    let parsedPageOfTextOverride;\n\n    if (pageOfTextOverride) {\n      parsedPageOfTextOverride = pageOfTextOverride({\n        pageNumber: number,\n        count: this._getTotalPages(),\n      });\n    }\n\n    return (\n      <li>\n        <c-icon-button {...params}>\n          <span\n            aria-label={\n              pageOfTextOverride\n                ? parsedPageOfTextOverride\n                : `page ${number} of ${this._getTotalPages()}`\n            }\n          >\n            {number}\n          </span>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _addButton(number, size) {\n    this._buttons.push(this._button(number, size));\n  }\n\n  private _addSeparator(size) {\n    this._buttons.push(\n      <li>\n        <c-icon-button\n          aria-disabled=\"true\"\n          size={size}\n          tabindex=\"-1\"\n          role=\"separator\"\n          disabled\n          text\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n            <path d={mdiDotsHorizontal} />\n          </svg>\n        </c-icon-button>\n      </li>,\n    );\n  }\n\n  private _addButtons(buttonStart, buttonCount, size) {\n    if (buttonStart > 1) {\n      this._addButton(1, size);\n      this._addSeparator(size);\n    }\n\n    for (let index = 1; index < buttonCount; index++) {\n      this._addButton(buttonStart + index, size);\n    }\n\n    const allPagesVisible = this._getTotalPages() <= this._totalVisible;\n\n    if (\n      (this._currentPage < this._totalVisible - 1 ||\n        this._currentPage < this._getTotalPages() - this._totalVisible + 4) &&\n      !allPagesVisible\n    ) {\n      this._addSeparator(size);\n    }\n  }\n\n  private _getPageButtons(size) {\n    this._buttons = [];\n    let buttonStart = 0;\n    let buttonCount = this._getTotalPages() + 1;\n    const morePagesThanVisible = this._getTotalPages() > this._totalVisible;\n\n    if (morePagesThanVisible) {\n      if (this._currentPage < this._totalVisible - 2) {\n        buttonCount = this._totalVisible - 1;\n      } else if (\n        this._currentPage <\n        this._getTotalPages() - this._totalVisible + 4\n      ) {\n        buttonStart = Math.ceil(this._currentPage - this._totalVisible / 2) + 1;\n        buttonCount = this._totalVisible - 3;\n      } else {\n        buttonStart = this._getTotalPages() - this._totalVisible + 2;\n        buttonCount = this._totalVisible - 2;\n      }\n    }\n\n    this._addButtons(buttonStart, buttonCount, size);\n\n    if (morePagesThanVisible) {\n      this._buttons.push(this._button(this._getTotalPages(), size));\n    }\n\n    return this._buttons;\n  }\n\n  private _renderPaginationButtons() {\n    if (!this.value.itemCount) return '';\n\n    const buttonsize = this.size === 'small' ? 'x-small' : 'small';\n\n    return (\n      <ul>\n        {this._getArrowLeft(buttonsize)}\n        {!this.simple && this._getPageButtons(buttonsize)}\n        {this._getArrowRight(buttonsize)}\n      </ul>\n    );\n  }\n\n  render() {\n    const classes = {\n      'c-pagination': true,\n      'c-pagination--small': this.size === 'small',\n      'c-pagination--simple': this.simple,\n    };\n\n    return (\n      <Host class={classes}>\n        <nav role=\"navigation\" aria-label=\"pagination\">\n          {!this.hideDetails && (\n            <div class=\"c-pagination__details\">\n              {this._renderMenu()}\n              <span class={{ range: !this.simple }}>{this._getRange()}</span>\n            </div>\n          )}\n          {this._renderPaginationButtons()}\n        </nav>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}