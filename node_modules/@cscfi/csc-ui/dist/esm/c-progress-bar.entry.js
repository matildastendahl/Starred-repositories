import { r as registerInstance, h, H as Host } from './index-47956d53.js';

const cProgressBarCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{--_c-progress-bar-color:var(--c-progress-bar-color, var(--c-primary-600));--_c-progress-bar-background-color:var(\n    --c-progress-bar-background-color,\n    var(--c-tertiary-200)\n  );--_c-progress-bar-border-width:var(--c-progress-bar-border-width, 4px);--_c-progress-bar-height:var(--c-progress-bar-height, 16px);--_c-progress-bar-value:var(--c-progress-bar-value, 0%);align-items:center;display:flex;flex-wrap:wrap}.c-progress{position:relative;background-color:var(--_c-progress-bar-background-color);border-radius:var(--_c-progress-bar-height);box-shadow:0 0 0 var(--_c-progress-bar-border-width) var(--_c-progress-bar-background-color);flex-basis:100%;height:calc(var(--_c-progress-bar-height) - var(--_c-progress-bar-border-width) * 2);margin:var(--_c-progress-bar-border-width);opacity:0.75;overflow:hidden;transform:translateZ(0);width:calc(100% - var(--_c-progress-bar-border-width) * 2);}.c-progress.adjacent-details{flex:1}.c-progress__percentage{flex-basis:100%;font-size:14px;margin-top:2px;text-align:end;white-space:nowrap;padding-left:16px}.c-progress__percentage--negative{color:var(--c-error-600)}.c-progress__percentage.adjacent-details{flex:0}.c-progress progress{background-color:var(--_c-progress-bar-background-color);border-radius:var(--_c-progress-bar-height);width:100%;overflow:hidden;height:calc(var(--_c-progress-bar-height) - var(--_c-progress-bar-border-width) * 2);position:absolute;border:none}@supports selector(:focus-within){.c-progress progress:focus{outline:none}}.c-progress:focus-within{outline:2px var(--c-primary-600) solid;outline-offset:6px}.c-progress ::-webkit-progress-bar{background-color:transparent}.c-progress ::-webkit-progress-value{transition:width 0.3s ease-in-out;background-color:var(--_c-progress-bar-color);border-radius:var(--_c-progress-bar-height)}.c-progress ::-moz-progress-bar{transition:padding-bottom 1s;padding-left:60px;padding-bottom:var(--_c-progress-bar-value);background-color:var(--_c-progress-bar-color);height:0;transform-origin:0 0;transform:rotate(-90deg) translateX(-60px)}.c-progress :indeterminate::-moz-progress-bar{width:0}.c-progress--indeterminate::before{content:\"\";z-index:1;position:absolute;background-color:var(--_c-progress-bar-color);border-radius:var(--_c-progress-bar-height);left:-100%;height:100%;transform:translateX(var(--_c-progress-bar-value, 0%));transition:transform 0.3s ease-in-out;animation:indeterminate 2s infinite linear;width:50%;transform-origin:0% 50%}@keyframes indeterminate{0%{transform:translateX(100%) scaleX(1)}30%{transform:translateX(170%) scaleX(1.75)}70%{transform:translateX(500%) scaleX(0.1)}100%{transform:translateX(500%) scaleX(0.1)}}";

const CProgressBar = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.value = 0;
    this.hideDetails = false;
    this.singleLine = false;
    this.label = '';
    this.indeterminate = false;
  }
  _getSafeValue() {
    if (this.value >= 0 && this.value <= 100)
      return this.value;
    if (this.value < 0)
      return 0;
    return 100;
  }
  render() {
    const value = this._getSafeValue();
    const style = {
      '--_c-progress-bar-value': `${value}%`,
    };
    const classes = {
      'c-progress': true,
      'c-progress--indeterminate': this.indeterminate,
      'adjacent-details': this.singleLine,
    };
    const detailsClasses = {
      'c-progress__percentage': true,
      'c-progress__percentage--negative': this.value < 0,
      'adjacent-details': this.singleLine,
    };
    const a11y = {
      'aria-busy': (!this.indeterminate).toString(),
      title: `${value} %`,
    };
    const params = {
      role: 'progressbar',
      max: '100',
    };
    if (!this.indeterminate) {
      params.value = value.toString();
      params['aria-valuenow'] = value.toString();
    }
    return (h(Host, Object.assign({}, a11y), h("label", { class: classes, style: style }, h("progress", Object.assign({}, params), !this.indeterminate && `${value}%`)), !this.indeterminate && !this.hideDetails && (h("div", { class: detailsClasses }, this.value, " % ", this.label))));
  }
};
CProgressBar.style = cProgressBarCss;

export { CProgressBar as c_progress_bar };

//# sourceMappingURL=c-progress-bar.entry.js.map