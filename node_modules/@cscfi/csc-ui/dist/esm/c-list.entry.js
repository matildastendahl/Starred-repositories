import { r as registerInstance, h, g as getElement, H as Host } from './index-47956d53.js';

const cListCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}.c-list{display:grid;gap:2px}";

const CList = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.disabled = false;
  }
  onDisabledChange(disabled) {
    this._items.forEach((item) => {
      const isDisabled = item.hasAttribute('disabled') && !('disabled' in item.dataset);
      if (!isDisabled) {
        item.disabled = !!disabled;
        item.disabledByParent = !!disabled;
      }
    });
  }
  get _items() {
    return Array.from(this.el.querySelectorAll('c-list-item'));
  }
  componentDidLoad() {
    this.onDisabledChange(this.disabled);
  }
  render() {
    const classes = {
      'c-list': true,
      'c-list--disabled': this.disabled,
    };
    return h(Host, { role: "list", class: classes });
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "disabled": ["onDisabledChange"]
  }; }
};
CList.style = cListCss;

export { CList as c_list };

//# sourceMappingURL=c-list.entry.js.map