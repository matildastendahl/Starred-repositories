import { r as registerInstance, c as createEvent, h, g as getElement } from './index-47956d53.js';

const cAccordionCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}.c-accordion{display:flex;flex-wrap:wrap;gap:8px}.c-accordion ::slotted(*){flex-basis:100%}";

const CAccordion = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.changeValue = createEvent(this, "changeValue", 3);
    this.value = undefined;
    this.mandatory = false;
    this.multiple = false;
    this.outlined = false;
  }
  watchPropHandler(value) {
    this.changeValue.emit(value);
    this._handleItemExpansion();
  }
  onAccordionItemChange(event) {
    const { value, expanded } = event.detail;
    if (this.multiple && Array.isArray(this.value)) {
      if (expanded) {
        this.value.push(value);
      }
      else {
        this.value = this.value.filter((v) => v !== value);
      }
    }
    else {
      this.value = expanded ? value : null;
    }
  }
  get items() {
    return Array.from(this.el.childNodes);
  }
  _handleItemExpansion() {
    const isExpanded = (item) => Array.isArray(this.value)
      ? this.value.includes(item.value)
      : item.value === this.value;
    const isLastExpandedItem = (item) => Array.isArray(this.value)
      ? isExpanded(item) && this.value.length === 1
      : isExpanded(item);
    for (const item of this.items) {
      item.collapsable =
        !this.mandatory || (this.mandatory && !isLastExpandedItem(item));
      item.outlined = this.outlined;
      item.expanded = isExpanded(item);
    }
  }
  componentDidLoad() {
    this._handleItemExpansion();
  }
  render() {
    return (h("div", { class: "c-accordion" }, h("slot", null)));
  }
  get el() { return getElement(this); }
  static get watchers() { return {
    "value": ["watchPropHandler"]
  }; }
};
CAccordion.style = cAccordionCss;

export { CAccordion as c_accordion };

//# sourceMappingURL=c-accordion.entry.js.map