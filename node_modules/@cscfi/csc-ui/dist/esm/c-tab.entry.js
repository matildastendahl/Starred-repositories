import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-47956d53.js';

const cTabCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:host{--_c-tab-border-color-active:var(--c-tab-border-color-active, var(--_c-tab-text-color));--_c-tab-background-color-hover:var(--c-tab-background-color-hover, var(--c-primary-100));--_c-tab-outline-color:var(--c-tab-outline-color, var(--_c-tab-text-color));--_c-tab-text-color:var(--c-tab-text-color, var(--c-primary-600));display:block;user-select:none;min-width:min-content;padding-inline:12px;flex-grow:1}:host span{max-width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host(:focus){outline:none}:host(:focus-visible){border-radius:4px;outline:2px var(--_c-tab-outline-color) solid;outline-offset:2px}:host([role=tab][aria-disabled=true]){cursor:default !important}slot{pointer-events:none}:host(.c-tab){align-items:center;color:var(--_c-tab-text-color);cursor:pointer;display:inline-flex;font-weight:600;height:52px;justify-content:center;overflow:hidden;position:relative}:host(.c-tab:hover){background-color:var(--_c-tab-background-color-hover)}:host(.c-tab--active:hover){background-color:transparent !important}:host(.c-tab--disabled){color:var(--c-tertiary-500);cursor:default;opacity:0.75;pointer-events:none}:host(.c-tab button){appearance:none;background-color:transparent;border:none;color:inherit;cursor:inherit;font-family:inherit;font-size:inherit;font-weight:inherit;height:100%;overflow:hidden;position:relative;width:100%}";

const CTab = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.tabChange = createEvent(this, "tabChange", 7);
    this.tabFocus = createEvent(this, "tabFocus", 7);
    this._onClick = (event, center = false) => {
      if (this.disabled)
        return;
      this._rippleElement.createRipple(event, this.element, center);
      this.tabChange.emit({ value: this.value, element: this.element });
    };
    this.active = false;
    this.disabled = false;
    this.hostId = undefined;
    this.position = undefined;
    this.setsize = undefined;
    this.value = undefined;
  }
  onTabFocus() {
    this.tabFocus.emit(this.value);
  }
  handleKeydown(event) {
    if (['Space', 'Enter'].includes(event.code)) {
      event.preventDefault();
      this._onClick(event, true);
    }
  }
  render() {
    const classes = {
      'c-tab': true,
      'c-tab--active': this.active,
      'c-tab--disabled': this.disabled,
    };
    const a11y = {
      'aria-disabled': this.disabled.toString(),
      'aria-hidden': this.disabled.toString(),
      'aria-selected': this.active.toString(),
      'aria-setsize': this.setsize,
      'aria-posinset': this.position,
      role: 'tab',
      tabindex: this.active && !this.disabled ? 0 : -1,
    };
    return (h(Host, Object.assign({}, a11y, { id: this.hostId, "data-value": this.value, class: classes, onClick: this._onClick }), h("span", null, h("slot", null)), h("c-ripple", { ref: (el) => (this._rippleElement = el) })));
  }
  get element() { return getElement(this); }
};
CTab.style = cTabCss;

export { CTab as c_tab };

//# sourceMappingURL=c-tab.entry.js.map