{"file":"c-tag.entry.js","mappings":";;;AAAA,MAAM,OAAO,GAAG,2tIAA2tI;;MCY9tI,IAAI;;;;kBAIE,KAAK;iBAKN,KAAK;eAKP,KAAK;gBAKJ,KAAK;qBAKA,KAAK;iBAKQ,IAAI;gBAKD,SAAS;;EAOrC,QAAQ;IACd,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;GACnB;EAED,MAAM;IACJ,MAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;IAElD,MAAM,WAAW,GAAG;MAClB,OAAO,EAAE,IAAI;MACb,kBAAkB,EAAE,IAAI,CAAC,SAAS;MAClC,cAAc,EAAE,QAAQ;MACxB,eAAe,EAAE,IAAI,CAAC,MAAM;MAC5B,cAAc,EAAE,IAAI,CAAC,KAAK;MAC1B,YAAY,EAAE,IAAI,CAAC,GAAG;MACtB,aAAa,EAAE,IAAI,CAAC,IAAI;MACxB,cAAc,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO;KACtC,CAAC;IAEF,MAAM,UAAU,iCACd,QAAQ,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,KACxB,CAAC,IAAI,CAAC,IAAI,IAAI;MAChB,IAAI,EAAE,QAAQ;KACf,KACG,QAAQ,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,EACjD,CAAC;IAEF,QACE,EAAC,IAAI,oBAAK,UAAU,IAAE,KAAK,EAAE,WAAW,KACtC,eAAa,EAEZ,IAAI,CAAC,SAAS,KACb,qBAAe,OAAO,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,IAC3C,cAAQ,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,GAAW,CAC7B,CACjB,CACI,EACP;GACH;;;;;;","names":[],"sources":["src/components/c-tag/c-tag.scss?tag=c-tag&encapsulation=shadow","src/components/c-tag/c-tag.tsx"],"sourcesContent":[":host {\n  /**\n   * @prop --c-tag-background-color-active-hover: Active tag background color on hover\n   * @prop --c-tag-background-color-active: Active tag background color\n   * @prop --c-tag-background-color-hover: Tag background color on hover\n   * @prop --c-tag-background-color: Tag background color\n   * @prop --c-tag-badge-background-color-active: Active tag badge background color\n   * @prop --c-tag-badge-background-color: Tag badge background color\n   * @prop --c-tag-badge-text-color-active: Active tag badge text color\n   * @prop --c-tag-badge-text-color: Tag badge text color\n   * @prop --c-tag-border-color: Tag border color\n   * @prop --c-tag-text-color-active: Active tag text color\n   * @prop --c-tag-text-color: Tag text color\n   * @prop --c-tag-border-radius: Tag border radius\n   */\n  --_c-tag-background-color-active-hover: var(--c-tag-background-color-active-hover, var(--c-primary-400));\n  --_c-tag-background-color-active: var(--c-tag-background-color-active, var(--_c-tag-text-color));\n  --_c-tag-background-color-hover: var(--c-tag-background-color-hover, rgba(var(--c-primary-rgb), 0.1));\n  --_c-tag-background-color: var(--c-tag-background-color, var(--c-transparent));\n  --_c-tag-badge-background-color-active: var(--c-tag-badge-background-color-active, var(--_c-tag-text-color-active));\n  --_c-tag-badge-background-color: var(--c-tag-badge-background-color, var(--_c-tag-background-color-active));\n  --_c-tag-badge-text-color-active: var(--c-tag-badge-text-color-active, var(--_c-tag-text-color));\n  --_c-tag-badge-text-color: var(--c-tag-badge-text-color, var(--_c-tag-text-color-active));\n  --_c-tag-border-color: var(--c-tag-border-color, var(--_c-tag-text-color));\n  --_c-tag-text-color-active: var(--c-tag-text-color-active, var(--c-white));\n  --_c-tag-text-color: var(--c-tag-text-color, var(--c-primary-600));\n  --_c-tag-border-radius: var(--c-tag-border-radius, 999px);\n\n  // private\n  --c-tag-min-height: 28px;\n  --c-tag-padding-y: 4px;\n  --c-tag-padding-x: 12px;\n  --c-tag-padding: var(--c-tag-padding-y) var(--c-tag-padding-x);\n  --c-tag-badge-size: 20px;\n  --c-tag-icon-button-offset: 0;\n\n  --c-icon-button-outline-offset: 0;\n\n  align-items: center;\n  background: var(--_c-tag-background-color);\n  border-radius: var(--_c-tag-border-radius);\n  box-shadow: inset 0 0 0 1px var(--_c-tag-border-color);\n  color: var(--_c-tag-text-color);\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 14px;\n  font-weight: 400;\n  gap: 8px;\n  justify-content: center;\n  line-height: 1;\n  min-height: var(--c-tag-min-height);\n  min-width: 48px;\n  padding: var(--c-tag-padding);\n  transform: translate3d(0, 0, 0);\n  transition: background-color 0.2s ease;\n  user-select: none;\n\n  c-icon-button {\n    --_c-icon-button-height: 20px;\n    --_c-icon-button-width: 20px;\n    --_c-icon-button-background-color: var(--c-transparent);\n    --_c-icon-button-text-color: var(--_c-tag-text-color);\n    --_c-icon-button-background-hover: var(--_c-tag-background-color-active);\n\n    margin: var(--c-tag-icon-button-offset);\n\n    &:hover {\n      --_c-icon-button-text-color: var(--_c-tag-text-color-active);\n    }\n  }\n}\n\n:host(:host:hover) {\n  background-color: var(--_c-tag-background-color-hover);\n}\n\n:host([data-badge]) {\n  padding-left: var(--c-tag-padding-y);\n\n  &::before {\n    content: attr(data-badge);\n    background-color: var(--_c-tag-badge-background-color);\n    border-radius: calc(var(--_c-tag-border-radius) - var(--c-tag-padding-y));\n    color: var(--_c-tag-badge-text-color);\n    display: inline-grid;\n    font-size: 12px;\n    height: var(--c-tag-badge-size);\n    line-height: 1;\n    min-width: var(--c-tag-badge-size);\n    padding: 0 4px;\n    place-content: center;\n  }\n}\n\n:host([data-badge].c-tag--active) {\n  &::before {\n    background-color: var(--_c-tag-badge-background-color-active);\n    color: var(--_c-tag-badge-text-color-active);\n  }\n}\n\n:host(.c-tag--closeable) {\n  padding-right: var(--c-tag-padding-y);\n}\n\n:host(.c-tag--block) {\n  flex-basis: 100%;\n}\n\n:host(.c-tag--fit) {\n  flex-grow: 1;\n}\n\n:host(.c-tag--flat) {\n  pointer-events: none;\n}\n\n:host(.c-tag--small) {\n  --c-tag-min-height: 20px;\n  --c-tag-padding-y: 2px;\n  --c-tag-padding-x: 8px;\n  --c-tag-badge-size: 16px;\n  --c-tag-icon-button-offset: 1px 0 0;\n\n  c-icon-button {\n    --_c-icon-button-height: 16px;\n    --_c-icon-button-width: 16px;\n  }\n}\n\n:host([data-badge].c-tag--small) {\n  padding-left: var(--c-tag-padding-y);\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host(:focus-visible) {\n  outline: 2px var(--_c-tag-border-color) solid;\n  outline-offset: 2px;\n  z-index: 1;\n}\n\n:host(.c-tag--active) {\n  background: var(--_c-tag-background-color-active);\n  color: var(--_c-tag-text-color-active);\n\n  --c-icon-button-outline-color: var(--c-white);\n}\n\n:host(.c-tag--active .c-tag__badge) {\n  background: var(--_c-tag-badge-background-color-active);\n  color: var(--_c-tag-badge-text-color-active);\n}\n\n:host(.c-tag--active:hover) {\n  background: var(--_c-tag-background-color-active-hover);\n  box-shadow: none;\n\n  --_c-icon-button-text-color: var(--_c-tag-text-color);\n  --_c-icon-button-background-color: var(--_c-tag-text-color-active);\n  --_c-icon-button-background-color-hover: var(--_c-tag-background-color-active);\n}\n\n:host(.c-tag--active) c-icon-button {\n  --_c-icon-button-text-color: var(--_c-tag-text-color-active);\n  --_c-icon-button-background-color-hover: var(--_c-tag-background-color-active);\n}\n","import { mdiClose } from '@mdi/js';\nimport { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @parent c-tags\n * @slot Default slot - Default slot\n */\n@Component({\n  tag: 'c-tag',\n  styleUrl: 'c-tag.scss',\n  shadow: true,\n})\nexport class CTag {\n  /**\n   * Mark tag as active\n   */\n  @Prop() active = false;\n\n  /**\n   * Stretch to fill the container row\n   */\n  @Prop() block = false;\n\n  /**\n   * Stretch to fill the container\n   */\n  @Prop() fit = false;\n\n  /**\n   * Remove the hover effect\n   */\n  @Prop() flat = false;\n\n  /**\n   * Mark tag as closeable\n   */\n  @Prop() closeable = false;\n\n  /**\n   * Display an optional badge at the start of the tag\n   */\n  @Prop() badge: string | number = null;\n\n  /**\n   * Size of the tag\n   */\n  @Prop() size: 'default' | 'small' = 'default';\n\n  /**\n   * Emit close event on close icon click\n   */\n  @Event() close: EventEmitter;\n\n  private _onClose() {\n    this.close.emit();\n  }\n\n  render() {\n    const hasBadge = !!this.badge || this.badge === 0;\n\n    const hostClasses = {\n      'c-tag': true,\n      'c-tag--closeable': this.closeable,\n      'c-tag--badge': hasBadge,\n      'c-tag--active': this.active,\n      'c-tag--block': this.block,\n      'c-tag--fit': this.fit,\n      'c-tag--flat': this.flat,\n      'c-tag--small': this.size === 'small',\n    };\n\n    const hostParams = {\n      tabindex: this.flat ? -1 : 0,\n      ...(!this.flat && {\n        role: 'button',\n      }),\n      ...(hasBadge ? { 'data-badge': this.badge } : {}),\n    };\n\n    return (\n      <Host {...hostParams} class={hostClasses}>\n        <slot></slot>\n\n        {this.closeable && (\n          <c-icon-button onClick={() => this._onClose()}>\n            <c-icon size={16} path={mdiClose}></c-icon>\n          </c-icon-button>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}