{"file":"c-row.entry.js","mappings":";;AAAA,MAAM,OAAO,GAAG,22BAA22B;;MCc92B,IAAI;;;eAMD,CAAC;kBAKE,KAAK;;;;EAYtB,gBAAgB;IACd,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;GAChE;EAED,MAAM;IACJ,MAAM,OAAO,GAAG;MACd,OAAO,EAAE,IAAI;MACb,eAAe,EAAE,IAAI,CAAC,MAAM;MAC5B,CAAC,gBAAgB,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK;MAC5C,CAAC,kBAAkB,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO;KACnD,CAAC;IAEF,QACE,EAAC,IAAI,gBAAW,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,EAAE,OAAO,IAC7C,eAAa,CACR,EACP;GACH;;;;;;;","names":[],"sources":["src/components/c-row/c-row.scss?tag=c-row&encapsulation=shadow","src/components/c-row/c-row.tsx"],"sourcesContent":[":host(.c-row) {\n  display: flex;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  gap: var(--_c-row-gap);\n\n  slot {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    gap: var(--_c-row-gap);\n  }\n}\n\n:host(.c-row--nowrap) slot {\n  flex-wrap: nowrap !important;\n}\n\n:host(.c-row--align-center) slot {\n  align-items: center;\n}\n\n:host(.c-row--align-start) slot {\n  align-items: flex-start;\n}\n\n:host(.c-row--align-end) slot {\n  align-items: flex-end;\n}\n\n:host(.c-row--justify-start) slot {\n  justify-content: flex-start;\n}\n\n:host(.c-row--justify-center) slot {\n  justify-content: center;\n}\n\n:host(.c-row--justify-end) slot {\n  justify-content: flex-end;\n}\n\n:host(.c-row--justify-space-between) slot {\n  justify-content: space-between;\n}\n\n:host(.c-row--justify-space-around) slot {\n  justify-content: space-around;\n}\n","import { Component, Element, h, Host, Prop } from '@stencil/core';\nimport { CRowAlign, CRowJustify } from '../../types';\n\n/**\n * Generic flex row component\n *\n * @group Layout\n * @slot Default slot - Should contain items to be displayed in the row\n */\n@Component({\n  tag: 'c-row',\n  styleUrl: 'c-row.scss',\n  shadow: true,\n})\nexport class CRow {\n  @Element() el: HTMLCRowElement;\n\n  /**\n   * Gap between items in px\n   */\n  @Prop() gap = 0;\n\n  /**\n   * Disable flex wrap\n   */\n  @Prop() nowrap = false;\n\n  /**\n   * Align items vertically\n   */\n  @Prop() align: CRowAlign;\n\n  /**\n   * Justify content horizontally\n   */\n  @Prop() justify: CRowJustify;\n\n  componentDidLoad() {\n    this.el.style.setProperty('--_c-row-gap', this.el.dataset.gap);\n  }\n\n  render() {\n    const classes = {\n      'c-row': true,\n      'c-row--nowrap': this.nowrap,\n      [`c-row--align-${this.align}`]: !!this.align,\n      [`c-row--justify-${this.justify}`]: !!this.justify,\n    };\n\n    return (\n      <Host data-gap={`${this.gap}px`} class={classes}>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"version":3}