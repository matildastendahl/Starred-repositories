{"version":3,"file":"c-data-table.e2e.js","sourceRoot":"","sources":["../../../../../src/components/c-data-table/test/c-data-table.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAuB,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACxE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAEjD,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;EAC5B,IAAI,IAAa,CAAC;EAElB,IAAI,KAAiB,CAAC;EAEtB,UAAU,CAAC,KAAK,IAAI,EAAE;IACpB,IAAI,GAAG,MAAM,UAAU,CAAC,EAAE,IAAI,EAAE,+BAA+B,EAAE,CAAC,CAAC;IACnE,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;IACjC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAEtC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;IACjD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IACzD,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IAEzB,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACtC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAErC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAChE,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,IAAI,CACvC,qCAAqC,CACtC,CAAC;IAEF,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;IAE3B,MAAM,CAAC,MAAM,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAExD,MAAM,SAAS,CAAC,KAAK,EAAE,CAAC;IAExB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,CAAC,MAAM,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEvD,MAAM,CAAC,iBAAiB,CAAC,CAAC,eAAe,EAAE,CAAC;IAE5C,MAAM,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;EACzC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;IAC7C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IACzD,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IAEzB,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACtC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACrC,KAAK,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAE3C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;IACpE,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,OAAO,CAC3C,qCAAqC,CACtC,CAAC;IAEF,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;IAE3B,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAE5B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAE5B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAEvC,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5D,MAAM,CAAC,MAAM,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE3D,MAAM,CAAC,kBAAkB,CAAC,CAAC,eAAe,EAAE,CAAC;EAC/C,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACtC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IAC3C,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAErC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,IAAI,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACzC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IAEF,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;IAC3E,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAE5E,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;IAE7B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;IAE3B,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACrC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IAEF,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAEtD,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;IAE7B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACrC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IAEF,MAAM,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAEzC,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvC,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5B,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAE5B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACrC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IACF,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvC,MAAM,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAE3C,MAAM,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IAE1C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACrC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IAEF,MAAM,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAEtC,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;IACvC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACtC,KAAK,CAAC,WAAW,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC3C,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IAC3C,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAErC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,IAAI,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACzC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IAEF,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;IAC3E,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAE5E,MAAM,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC;IAElC,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5B,MAAM,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAE5B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,cAAc,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;IAE/C,mBAAmB,GAAG,MAAM,IAAI,CAAC,MAAM,CACrC,8BAA8B,EAC9B,CAAC,IAA2B,EAAE,EAAE;MAC9B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CACF,CAAC;IACF,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IACzD,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IAEzB,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACtC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAErC,MAAM,QAAQ,GAAa,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAE3B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE,CAAC;IAEhC,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { E2EElement, E2EPage, newE2EPage } from '@stencil/core/testing';\nimport { basicData, basicHeaders } from './data';\nimport { Viewport } from 'puppeteer';\nimport { takeScreenshot } from '../../../utils/test/takeScreenshot';\n\ndescribe('c-data-table', () => {\n  let page: E2EPage;\n\n  let table: E2EElement;\n\n  beforeEach(async () => {\n    page = await newE2EPage({ html: `<c-data-table></c-data-table>` });\n    table = await page.find('c-data-table');\n  });\n\n  it('renders correctly', async () => {\n    expect(table).toHaveClass('hydrated');\n\n    await takeScreenshot(page);\n  });\n\n  it('displays hidden data on row click', async () => {\n    const headers = JSON.parse(JSON.stringify(basicHeaders));\n    headers[2].hidden = true;\n\n    table.setProperty('headers', headers);\n    table.setProperty('data', basicData);\n\n    await page.waitForChanges();\n\n    const parentRow = await page.find('c-data-table >>> tr.parent');\n    const additionalDataRow = await page.find(\n      'c-data-table >>> tr.additional-data',\n    );\n\n    await takeScreenshot(page);\n\n    expect(await additionalDataRow.isVisible()).toBe(false);\n\n    await parentRow.click();\n\n    await page.waitForChanges();\n\n    expect(await additionalDataRow.isVisible()).toBe(true);\n\n    expect(additionalDataRow).toMatchSnapshot();\n\n    await takeScreenshot(page, 'Expanded');\n  });\n\n  it('displays single row at a time', async () => {\n    const headers = JSON.parse(JSON.stringify(basicHeaders));\n    headers[2].hidden = true;\n\n    table.setProperty('headers', headers);\n    table.setProperty('data', basicData);\n    table.setProperty('singleExpansion', true);\n\n    await page.waitForChanges();\n\n    const parentRows = await page.findAll('c-data-table >>> tr.parent');\n    const additionalDataRows = await page.findAll(\n      'c-data-table >>> tr.additional-data',\n    );\n\n    await takeScreenshot(page);\n\n    await parentRows[0].click();\n\n    await page.waitForChanges();\n\n    await parentRows[1].click();\n\n    await page.waitForChanges();\n\n    await takeScreenshot(page, 'Expanded');\n\n    expect(await additionalDataRows[0].isVisible()).toBe(false);\n    expect(await additionalDataRows[1].isVisible()).toBe(true);\n\n    expect(additionalDataRows).toMatchSnapshot();\n  });\n\n  it('allows row selection', async () => {\n    table.setProperty('selectable', true);\n    table.setProperty('headers', basicHeaders);\n    table.setProperty('data', basicData);\n\n    await page.waitForChanges();\n\n    let countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n\n    expect(countOfSelectedRows).toEqual(0);\n\n    const checkBoxes = await page.findAll('c-data-table >>> tbody c-checkbox');\n    const headerCheckBox = await page.find('c-data-table >>> thead c-checkbox');\n\n    await headerCheckBox.click();\n\n    await page.waitForChanges();\n\n    await takeScreenshot(page);\n\n    countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n\n    expect(countOfSelectedRows).toEqual(basicData.length);\n\n    await headerCheckBox.click();\n\n    await page.waitForChanges();\n\n    countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n\n    await takeScreenshot(page, 'Deselected');\n\n    expect(countOfSelectedRows).toEqual(0);\n\n    await checkBoxes[0].click();\n    await checkBoxes[1].click();\n\n    await page.waitForChanges();\n\n    countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n    expect(countOfSelectedRows).toEqual(2);\n\n    await takeScreenshot(page, 'Two selected');\n\n    await table.callMethod('clearSelections');\n\n    await page.waitForChanges();\n\n    countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n\n    await takeScreenshot(page, 'Cleared');\n\n    expect(countOfSelectedRows).toEqual(0);\n  });\n\n  it('forces single selection', async () => {\n    table.setProperty('selectable', true);\n    table.setProperty('singleSelection', true);\n    table.setProperty('headers', basicHeaders);\n    table.setProperty('data', basicData);\n\n    await page.waitForChanges();\n\n    let countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n\n    expect(countOfSelectedRows).toEqual(0);\n\n    const checkBoxes = await page.findAll('c-data-table >>> tbody c-checkbox');\n    const headerCheckBox = await page.find('c-data-table >>> thead c-checkbox');\n\n    expect(headerCheckBox).toBeNull();\n\n    await checkBoxes[0].click();\n    await checkBoxes[1].click();\n\n    await page.waitForChanges();\n\n    await takeScreenshot(page, 'Single selection');\n\n    countOfSelectedRows = await page.$$eval(\n      'c-data-table >>> tr.selected',\n      (rows: HTMLTableRowElement[]) => {\n        return rows.length;\n      },\n    );\n    expect(countOfSelectedRows).toEqual(1);\n  });\n\n  it('allows pinning columns', async () => {\n    const headers = JSON.parse(JSON.stringify(basicHeaders));\n    headers[2].pinned = true;\n\n    table.setProperty('headers', headers);\n    table.setProperty('data', basicData);\n\n    const viewport: Viewport = { width: 400, height: 600 };\n    page.setViewport(viewport);\n\n    await page.waitForChanges();\n\n    expect(table).toMatchSnapshot();\n\n    await takeScreenshot(page);\n  });\n});\n"]}