{"version":3,"file":"c-radio-group.js","sourceRoot":"","sources":["../../../../src/components/c-radio-group/c-radio-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  AttachInternals,\n} from '@stencil/core';\nimport { CRadioGroupItem } from '../../types';\n\n/**\n * @group Form\n * @slot Default slot - Default slot for the label\n */\n@Component({\n  tag: 'c-radio-group',\n  styleUrl: 'c-radio-group.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CRadioGroup {\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Value of the radio group\n   */\n  @Prop({ mutable: true }) value: string | number | CRadioGroupItem;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Display radio buttons inline\n   */\n  @Prop() inline = false;\n\n  /**\n   * Label of the radio group\n   */\n  @Prop() label: string;\n\n  /**\n   * Color of the radio group\n   */\n  @Prop() color = '';\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Radio group items\n   */\n  @Prop() items: CRadioGroupItem[] = [];\n\n  /**\n   * Disable the radio group\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Return the whole item object\n   */\n  @Prop() returnObject = false;\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validity of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Emit value change to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @Element() el: HTMLCRadioGroupElement;\n\n  private _containers?: HTMLDivElement[] = [];\n\n  private _rippleElements: HTMLCRippleElement[] = [];\n\n  private static _uniqueId = 0;\n\n  private get _id() {\n    return this.hostId || `radio-group_${CRadioGroup._uniqueId}`;\n  }\n\n  private _handleKeyDown(event: KeyboardEvent, item, index) {\n    if (['Space', 'Enter'].includes(event.code)) {\n      event.preventDefault();\n\n      this._select(event, item, index);\n    }\n  }\n\n  private _select(event, item, index) {\n    if (!!item.disabled || this.disabled) return;\n\n    this._rippleElements[index].createRipple(\n      event,\n      this._containers[index],\n      true,\n    );\n    this.value = !this.returnObject ? item?.value : item;\n    this.changeValue.emit(this.value);\n\n    const value = !this.returnObject\n      ? this.value\n      : (this.value as CRadioGroupItem).value;\n\n    this.internals.setFormValue(value as string);\n  }\n\n  private _handleSlotChange = () => {\n    this._getRadioButtons();\n  };\n\n  private _getRadioButtons = () => {\n    const radios = this.el.querySelectorAll('c-radio');\n\n    if (radios.length) {\n      this.returnObject = false;\n\n      this.items = [\n        ...Array.from(radios).map((radio) => {\n          if (!!radio.checked) {\n            this.value = radio.value;\n            this.changeValue.emit(this.value);\n          }\n\n          radio.style.display = 'none';\n\n          return {\n            name: radio.textContent,\n            value: radio.value,\n            disabled: !!radio.disabled,\n          };\n        }),\n      ];\n    }\n  };\n\n  private _getRadioButton = (item, index) => {\n    const itemId = item.value.toString().replace(/[^a-zA-Z0-9-_]/g, '');\n\n    const isChecked = !this.returnObject\n      ? this.items?.find((i) => i.value === item.value)?.value === this.value\n      : (this.value as CRadioGroupItem)?.value === item.value;\n\n    const classes = {\n      'c-radio': true,\n      'c-radio--disabled': !!item.disabled || this.disabled,\n      'c-radio--error': !this.valid,\n    };\n\n    return (\n      <label\n        class={classes}\n        id={itemId}\n        onKeyDown={(event) => this._handleKeyDown(event, item, index)}\n      >\n        <input\n          type=\"radio\"\n          aria-checked={(this.value === item).toString()}\n          aria-disabled={(!!item.disabled || this.disabled).toString()}\n          aria-labelledby={itemId}\n          disabled={!!item.disabled || this.disabled}\n          checked={isChecked}\n          name={CRadioGroup._uniqueId.toString()}\n          onChange={(event) => this._select(event, item, index)}\n        />\n\n        <span\n          class=\"ripple\"\n          ref={(el) => (this._containers[index] = el as HTMLDivElement)}\n        >\n          <span class=\"selection\"></span>\n\n          <c-ripple ref={(el) => (this._rippleElements[index] = el)}></c-ripple>\n        </span>\n\n        <div class=\"c-radio__label\">{item.name}</div>\n      </label>\n    );\n  };\n\n  componentWillLoad() {\n    CRadioGroup._uniqueId += 1;\n\n    const radios = this.el.querySelectorAll('c-radio');\n\n    const checkedRadio = Array.from(radios).find((item) => item.checked);\n\n    if (checkedRadio) {\n      const value = checkedRadio.value;\n\n      this.internals.setFormValue(value as string);\n    } else if (this.value) {\n      const value = !this.returnObject\n        ? this.value\n        : (this.value as CRadioGroupItem).value;\n\n      this.internals.setFormValue(value as string);\n    }\n  }\n\n  render() {\n    const slotHasContent = !!this.el.childNodes.length;\n\n    const wrapperClasses = {\n      'c-radio-group': true,\n      'c-radio-group--disabled': this.disabled,\n      'c-radio-group--inline': this.inline,\n      'c-radio-group--error': !this.valid,\n    };\n\n    return (\n      <div\n        class={wrapperClasses}\n        role=\"radiogroup\"\n        aria-labelledby=\"c-radio-group__label\"\n      >\n        {(!!this.label || slotHasContent) && (\n          <label class=\"c-radio-group__label\">\n            {!!this.label && this.label}\n\n            <slot onSlotchange={this._handleSlotChange}></slot>\n\n            {this.required && <span class=\"required\">&nbsp;*</span>}\n          </label>\n        )}\n\n        <div class=\"c-radio-group__items\">\n          {this.items.map((item, index) => this._getRadioButton(item, index))}\n        </div>\n\n        {!this.hideDetails && (\n          <c-message\n            hint={this.hint}\n            inputId={this._id}\n            valid={this.valid}\n            validation={this.validation}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]}