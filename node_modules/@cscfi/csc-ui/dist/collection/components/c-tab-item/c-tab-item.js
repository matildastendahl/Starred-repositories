import { Host, h, } from "@stencil/core";
export class CTabItem {
  constructor() {
    this.value = undefined;
    this.active = false;
  }
  componentDidLoad() {
    this._resizeObserver = new ResizeObserver(() => {
      this._handleResize();
    });
    this._resizeObserver.observe(this.el.shadowRoot.querySelector('div'));
  }
  disconnectedCallback() {
    this._resizeObserver.disconnect();
  }
  _handleResize() {
    this.contentChange.emit();
  }
  render() {
    const attributes = {
      role: 'tabpanel',
    };
    return (h(Host, Object.assign({}, attributes), h("div", { class: { active: this.active } }, h("slot", null))));
  }
  static get is() { return "c-tab-item"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["c-tab-item.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["c-tab-item.css"]
    };
  }
  static get properties() {
    return {
      "value": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "number | string",
          "resolved": "number | string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Tab value"
        },
        "attribute": "value",
        "reflect": false
      },
      "active": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "private",
              "text": undefined
            }],
          "text": "Active"
        },
        "attribute": "active",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get events() {
    return [{
        "method": "contentChange",
        "name": "contentChange",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "Emit changes to the parent"
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "el"; }
}
//# sourceMappingURL=c-tab-item.js.map
