import { Host, h } from "@stencil/core";
export class CPage {
  constructor() {
    this.scrollIndicator = false;
  }
  _onScroll() {
    if (!this.scrollIndicator)
      return;
    const scrollTop = this.el.scrollTop;
    const height = this.el.scrollHeight - this.el.clientHeight;
    const scrolled = (scrollTop / height) * 100;
    this._scrollIndicator.style.width = scrolled + '%';
  }
  componentDidLoad() {
    this.el.onscroll = this._onScroll.bind(this);
  }
  render() {
    return (h(Host, null, this.scrollIndicator && (h("div", { ref: (el) => (this._scrollIndicator = el), class: "scroll-indicator" })), h("div", { class: "c-page__container" }, h("slot", null)), h("slot", { name: "footer" })));
  }
  static get is() { return "c-page"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["c-page.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["c-page.css"]
    };
  }
  static get properties() {
    return {
      "scrollIndicator": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Display scroll indicator"
        },
        "attribute": "scroll-indicator",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "el"; }
}
//# sourceMappingURL=c-page.js.map
