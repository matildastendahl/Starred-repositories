{"version":3,"file":"c-checkbox.e2e.js","sourceRoot":"","sources":["../../../../../src/components/c-checkbox/test/c-checkbox.e2e.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { sleep } from '../../../utils/test/sleep';\n\ndescribe('c-checkbox', () => {\n  it('reacts to value change', async () => {\n    const page = await newE2EPage({\n      html: `<c-checkbox></c-checkbox>`,\n    });\n\n    let checkMark = await page.find('c-checkbox >>> svg path');\n    expect(checkMark).toBe(null);\n\n    const checkbox = await page.find('c-checkbox');\n\n    checkbox.setProperty('value', true);\n\n    await page.waitForChanges();\n\n    checkMark = await page.find('c-checkbox >>> svg path');\n\n    expect(checkMark).not.toBe(null);\n  });\n\n  it('changes value on click', async () => {\n    const page = await newE2EPage({\n      html: `<c-checkbox></c-checkbox>`,\n    });\n\n    let checkMark = await page.find('c-checkbox >>> svg path');\n    expect(checkMark).toBe(null);\n\n    const checkbox = await page.find('c-checkbox');\n\n    await checkbox.click();\n\n    await page.waitForChanges();\n\n    checkMark = await page.find('c-checkbox >>> svg path');\n\n    expect(checkMark).not.toBe(null);\n\n    await checkbox.click();\n\n    await page.waitForChanges();\n\n    checkMark = await page.find('c-checkbox >>> svg path');\n\n    expect(checkMark).toBe(null);\n  });\n\n  it('can not be checked when disabled', async () => {\n    const page = await newE2EPage({\n      html: `<c-checkbox></c-checkbox>`,\n    });\n\n    let checkMark = await page.find('c-checkbox >>> svg path');\n    expect(checkMark).toBe(null);\n\n    const checkbox = await page.find('c-checkbox');\n\n    checkbox.setProperty('disabled', true);\n\n    await page.waitForChanges();\n\n    await checkbox.click();\n\n    await page.waitForChanges();\n\n    checkMark = await page.find('c-checkbox >>> svg path');\n\n    expect(checkMark).toBe(null);\n  });\n\n  it('renders required message', async () => {\n    const page = await newE2EPage({\n      html: `<c-checkbox validation=\"Required field\"></c-checkbox>`,\n    });\n\n    let errorMessage = await page.find(\n      'c-checkbox >>> .c-checkbox__message--error',\n    );\n    expect(errorMessage).toBe(null);\n\n    const checkbox = await page.find('c-checkbox');\n\n    checkbox.setProperty('valid', false);\n\n    await page.waitForChanges();\n\n    await sleep(200);\n\n    errorMessage = await page.find(\n      'c-checkbox >>> .c-checkbox__message--error',\n    );\n\n    expect(errorMessage.innerText).toContain('Required field');\n  });\n});\n"]}