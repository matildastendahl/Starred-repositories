{"version":3,"file":"c-checkbox.js","sourceRoot":"","sources":["../../../../src/components/c-checkbox/c-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Host,\n  h,\n  Listen,\n  Prop,\n  Event,\n  EventEmitter,\n  Watch,\n  Element,\n  AttachInternals,\n} from '@stencil/core';\n\n/**\n * @group Form\n * @slot Default slot - Default slot for the label\n */\n@Component({\n  tag: 'c-checkbox',\n  styleUrl: 'c-checkbox.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CCheckbox {\n  @Element() el: HTMLCCheckboxElement;\n\n  // eslint-disable-next-line @stencil-community/own-props-must-be-private\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * If `true`, the checkbox is selected.\n   */\n  @Prop({ mutable: true }) checked = false;\n\n  /**\n   * Disable the checkbox\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Indeterminate state\n   */\n  @Prop() indeterminate = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label = '';\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validity of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * The input value\n   * - Only used when the checkbox participates in a native `<form>`\n   */\n  @Prop() value: string | boolean = false;\n\n  /**\n   * The value when the checkbox is checked\n   */\n  @Prop() trueValue: boolean | string = true;\n\n  /**\n   * The value when the checkbox is unchecked\n   */\n  @Prop() falseValue: boolean | string = false;\n\n  /**\n   * Name of the input\n   * - Only used when the checkbox participates in a native `<form>`\n   */\n  @Prop({ attribute: 'name' }) hostName: string;\n\n  /**\n   * Triggered when element is checked or unchecked\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  private _container: HTMLDivElement;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  private static _uniqueId = 0;\n\n  private get _id() {\n    return this.hostId || `checkbox_${CCheckbox._uniqueId}`;\n  }\n\n  @Watch('value')\n  onValueChange(value: string | boolean) {\n    this.checked = this.trueValue === value;\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeyDown(event: KeyboardEvent) {\n    if (['Space'].includes(event.code)) {\n      event.preventDefault();\n      this._toggleState(event);\n    }\n  }\n\n  componentWillLoad() {\n    CCheckbox._uniqueId += 1;\n\n    this.checked = this.checked || this.value === this.trueValue;\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  private _toggleState(event) {\n    if (this.disabled) return;\n\n    this._rippleElement.createRipple(event, this._container, true);\n\n    this.checked = !this.checked;\n\n    this.changeValue.emit(this.checked ? this.trueValue : this.falseValue);\n\n    this.internals.setFormValue(\n      this.checked ? this.trueValue.toString() : this.falseValue.toString(),\n    );\n  }\n\n  render() {\n    const wrapperClasses = {\n      'c-checkbox': true,\n      'c-checkbox--disabled': this.disabled,\n      'c-checkbox--error': !this.valid,\n    };\n\n    const labelClasses = {\n      'c-checkbox__label': true,\n      'c-checkbox__label--indeterminate': this.indeterminate,\n    };\n\n    const slotHasContent = !!this.el.childNodes.length;\n\n    return (\n      <Host>\n        <div class={wrapperClasses}>\n          <input\n            class=\"visuallyhidden\"\n            id=\"checkbox\"\n            {...(!!this.hostName ? { name: this.hostName } : {})}\n            type=\"checkbox\"\n            aria-checked={this.checked.toString()}\n            aria-disabled={this.disabled.toString()}\n            checked={this.checked ? true : undefined}\n            disabled={this.disabled}\n            onChange={(event) => this._toggleState(event)}\n          />\n\n          <label class={labelClasses} htmlFor=\"checkbox\">\n            <div\n              class=\"ripple\"\n              ref={(el) => (this._container = el as HTMLDivElement)}\n            >\n              <svg viewBox=\"0 0 100 100\">\n                {!this.indeterminate && this.checked && (\n                  <path\n                    class=\"path\"\n                    d=\"M 12 52 l 24 24 l 47 -47 l -3 -3 l -44 44 l -21 -21 l -3 3\"\n                  />\n                )}\n                {this.indeterminate && (\n                  <path class=\"path\" d=\"M20 56 h60 v-8 h-60 z\" />\n                )}\n              </svg>\n\n              <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n            </div>\n\n            {(!!this.label || slotHasContent) && (\n              <div class=\"c-checkbox__label-content\">\n                {!!this.label ? this.label : <slot></slot>}\n                {this.required && <span class=\"required\">&nbsp;*</span>}\n              </div>\n            )}\n          </label>\n        </div>\n\n        {!this.hideDetails && (\n          <c-message\n            hint={this.hint}\n            inputId={this._id}\n            valid={this.valid}\n            validation={this.validation}\n          />\n        )}\n      </Host>\n    );\n  }\n}\n"]}