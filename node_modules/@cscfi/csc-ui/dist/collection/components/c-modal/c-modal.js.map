{"version":3,"file":"c-modal.js","sourceRoot":"","sources":["../../../../src/components/c-modal/c-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  State,\n  Watch,\n  Element,\n} from '@stencil/core';\n\n/**\n * @group Popups\n */\n@Component({\n  tag: 'c-modal',\n  styleUrl: 'c-modal.scss',\n  shadow: true,\n})\nexport class CModal {\n  @Element() el: HTMLCModalElement;\n\n  private _dialog?: HTMLDialogElement;\n\n  /**\n   * Is the modal visible\n   */\n  @Prop() value = false;\n\n  /**\n   * Dismissed when touching/clicking outside the content\n   */\n  @Prop() dismissable = false;\n\n  /**\n   * Width of the dialog. Numeric value is considered as pixel value (400 -> 400px)\n   *\n   */\n  @Prop() width: string | number = 600;\n\n  /**\n   * Z-index of the modal\n   */\n  @Prop() zIndex = 10;\n\n  /**\n   * Disable backdrop blur effect\n   */\n  @Prop() disableBackdropBlur = false;\n\n  /**\n   * Triggered when value is changed\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter<boolean>;\n\n  @State() innerValue = false;\n\n  @State() animateModal = false;\n\n  private _debounce = null;\n\n  @Watch('value')\n  onValueChange(value: boolean) {\n    if (value) {\n      this._handleShow();\n\n      return;\n    }\n\n    this._handleClose();\n  }\n\n  private _handleShow = () => {\n    if (this._dialog) {\n      this._dialog.addEventListener('animationend', this._onDialogOpened);\n      this._dialog.classList.add('opening');\n      this._dialog.showModal();\n    }\n  };\n\n  private _onDialogOpened = () => {\n    if (this._dialog) {\n      this._dialog.removeEventListener('animationend', this._onDialogOpened);\n      this._dialog.classList.remove('opening');\n    }\n  };\n\n  private _handleClose = () => {\n    if (this._dialog) {\n      this._dialog.addEventListener('animationend', this._onDialogClosed);\n      this._dialog.classList.add('closing');\n    }\n  };\n\n  private _onDialogClosed = () => {\n    if (this._dialog) {\n      this._dialog.removeEventListener('animationend', this._onDialogClosed);\n      this._dialog.classList.remove('closing');\n      this._dialog.close();\n    }\n\n    if (!document.fullscreenElement) return;\n\n    document.exitFullscreen();\n  };\n\n  private _handleClickOutside = () => {\n    this._dialog.addEventListener('click', (e) => {\n      if (e.clientX === 0 && e.clientY === 0) return;\n\n      const dialogDimensions = this._dialog.getBoundingClientRect();\n\n      if (\n        e.clientX < dialogDimensions.left ||\n        e.clientX > dialogDimensions.right ||\n        e.clientY < dialogDimensions.top ||\n        e.clientY > dialogDimensions.bottom\n      ) {\n        if (!this.dismissable) {\n          this._dialog.classList.add('nudging');\n\n          if (this._debounce !== null) {\n            clearTimeout(this._debounce);\n            this._debounce = null;\n          }\n\n          this._debounce = window.setTimeout(() => {\n            this._dialog.classList.remove('nudging');\n\n            this._debounce = null;\n          }, 150);\n\n          return;\n        }\n\n        this._handleClose();\n        this.changeValue.emit(false);\n      }\n    });\n  };\n\n  private _handleKeyDown = (e) => {\n    if (e.keyCode === 27) {\n      e.preventDefault();\n      this._handleClose();\n      this.changeValue.emit(false);\n    }\n  };\n\n  componentWillLoad() {\n    this.innerValue = this.value;\n\n    const width = isNaN(this.width as number) ? this.width : `${this.width}px`;\n\n    this.el.style.setProperty('--_c-modal-width', `${width}`);\n  }\n\n  componentDidLoad() {\n    this._handleClickOutside();\n\n    if (this.value) {\n      this._handleShow();\n    }\n  }\n\n  render() {\n    const dialogStyle = {\n      'z-index': `${this.zIndex}`,\n    };\n\n    const classes = {\n      'backdrop-blur': !this.disableBackdropBlur,\n    };\n\n    return (\n      <dialog\n        ref={(el) => (this._dialog = el as HTMLDialogElement)}\n        style={dialogStyle}\n        class={classes}\n        onKeyDown={this._handleKeyDown}\n      >\n        <slot></slot>\n      </dialog>\n    );\n  }\n}\n"]}