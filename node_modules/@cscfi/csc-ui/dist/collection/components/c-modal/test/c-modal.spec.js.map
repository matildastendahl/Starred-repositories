{"version":3,"file":"c-modal.spec.js","sourceRoot":"","sources":["../../../../../src/components/c-modal/test/c-modal.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEpC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;EACvB,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE,qBAAqB;KAC5B,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE,iCAAiC;KACxC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;IAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE,gCAAgC;KACvC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;IAC5C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE;;;;OAIL;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;IAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE;;OAEL;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,iEAAiE,EAAE,KAAK,IAAI,EAAE;IAC/E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE;;;OAGL;KACF,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACpC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,YAAY,CACE,CAAC;IACjB,OAAO,CAAC,KAAK,EAAE,CAAC;IAEhB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;IACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,MAAM,CAAC;MACpB,IAAI,EAAE;;;;OAIL;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IAEpC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,YAAY,CACE,CAAC;IAEjB,OAAO,CAAC,KAAK,EAAE,CAAC;IAEhB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { CModal } from '../c-modal';\n\ndescribe('c-modal', () => {\n  it('renders default html', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `<c-modal></c-modal>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders custom width', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `<c-modal width=\"800\"></c-modal>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders hidden slot content', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `<c-modal><p>Test</p></c-modal>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders visible slot content', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `\n        <c-modal value={true}>\n          <p>Test</p>\n        </c-modal>\n      `,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders with custom z-index', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `\n        <c-modal z-index=\"30\"></c-modal>\n      `,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('does not close when clicked outside the area if not dismissable', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `<c-modal value={true}>\n          <p>Test</p>\n        </c-modal>\n      `,\n    });\n    expect(page.root).toMatchSnapshot();\n    const overlay = page.root.shadowRoot.querySelector(\n      '.c-overlay',\n    ) as HTMLElement;\n    overlay.click();\n\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('closes when clicked outside the area', async () => {\n    const page = await newSpecPage({\n      components: [CModal],\n      html: `\n        <c-modal value={true} dismissable={true}>\n          <p>Test</p>\n        </c-modal>\n      `,\n    });\n\n    expect(page.root).toMatchSnapshot();\n\n    const overlay = page.root.shadowRoot.querySelector(\n      '.c-overlay',\n    ) as HTMLElement;\n\n    overlay.click();\n\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}