{"version":3,"file":"c-text-field.visual.js","sourceRoot":"","sources":["../../../../../src/components/c-text-field/test/c-text-field.visual.ts"],"names":[],"mappings":"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","sourcesContent":["import { test, expect } from '@playwright/test';\n\ntest.beforeEach(async ({ page }, testInfo) => {\n  await page.goto('http://localhost:4200/c-text-field');\n\n  await page.waitForTimeout(500);\n\n  testInfo.snapshotSuffix = '';\n});\n\ntest('Date', async ({ page }) => {\n  const textField = page.locator('app-example[name=\"date\"] div').nth(1);\n\n  await expect(textField).toHaveScreenshot();\n\n  await textField.getByLabel('Date', { exact: true }).fill('2023-09-05');\n\n  await page.waitForTimeout(350);\n\n  await expect(textField).toHaveScreenshot();\n});\n\ntest('Password', async ({ page }) => {\n  const textField = page.locator('app-example[name=\"password\"] div').nth(1);\n\n  await expect(textField).toHaveScreenshot();\n\n  await textField.getByLabel('Password', { exact: true }).fill('salasana');\n\n  await page.waitForTimeout(350);\n\n  await expect(textField).toHaveScreenshot();\n});\n\ntest('Disabled', async ({ page }) => {\n  const textField = page.locator('app-example[name=\"disabled\"] div').nth(1);\n\n  await expect(textField).toHaveScreenshot();\n});\n\ntest('Shadow', async ({ page }) => {\n  const textField = page.locator('app-example[name=\"shadow\"] div').nth(1);\n\n  await expect(textField).toHaveScreenshot();\n\n  await textField\n    .getByRole('textbox', { name: 'Text field with a shadow' })\n    .fill('Testi');\n\n  await page.waitForTimeout(350);\n\n  await expect(textField).toHaveScreenshot();\n});\n\ntest('Textarea', async ({ page }) => {\n  const textField = page.locator('app-example[name=\"textarea\"] div').nth(1);\n\n  await expect(textField).toHaveScreenshot();\n\n  await textField.getByLabel('I am a textarea', { exact: true }).fill('Testi');\n\n  await page.waitForTimeout(350);\n\n  await expect(textField).toHaveScreenshot();\n});\n"]}