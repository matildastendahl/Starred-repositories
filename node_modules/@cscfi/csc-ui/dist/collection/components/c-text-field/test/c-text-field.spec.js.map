{"version":3,"file":"c-text-field.spec.js","sourceRoot":"","sources":["../../../../../src/components/c-text-field/test/c-text-field.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;EAC5B,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;MACxB,IAAI,EAAE,kEAAkE;KACzE,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;MACxB,IAAI,EAAE,+EAA+E;KACtF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;IACzC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;MACxB,IAAI,EAAE,2EAA2E;KAClF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;MACxB,IAAI,EAAE,2IAA2I;KAClJ,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { CTextField } from '../c-text-field';\n\ndescribe('c-text-field', () => {\n  it('renders default html', async () => {\n    const page = await newSpecPage({\n      components: [CTextField],\n      html: `<c-text-field value=\"Here is text\" label=\"Label\"></c-text-field>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders shadow variant', async () => {\n    const page = await newSpecPage({\n      components: [CTextField],\n      html: `<c-text-field value=\"Here is text\" shadow placeholder=\"Title\"></c-text-field>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders required asterisk', async () => {\n    const page = await newSpecPage({\n      components: [CTextField],\n      html: `<c-text-field value=\"Here is text\" label=\"Label\" required></c-text-field>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders number input', async () => {\n    const page = await newSpecPage({\n      components: [CTextField],\n      html: `<c-text-field label=\"Label\" required type=\"number\" min=\"1\" max=\"10\" hint=\"Insert number between 1-10\" step=\"1\" value=\"5\" ></c-text-field>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}