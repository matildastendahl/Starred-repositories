{"version":3,"file":"c-slider.js","sourceRoot":"","sources":["../../../../src/components/c-slider/c-slider.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  State,\n  Watch,\n  h,\n} from '@stencil/core';\n\n/**\n * @group Form\n */\n@Component({\n  tag: 'c-slider',\n  styleUrl: 'c-slider.scss',\n  shadow: true,\n})\nexport class CSlider {\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'name' }) hostName: string;\n\n  /**\n   * Aria label\n   */\n  @Prop({ attribute: 'aria-label' }) ariaLabel: string;\n\n  /**\n   * Max value\n   */\n  @Prop() max = '100';\n\n  /**\n   * Min value\n   */\n  @Prop() min = '0';\n\n  /**\n   * Step\n   */\n  @Prop() step = '1';\n\n  /**\n   * Value\n   */\n  @Prop() value: string | number = '50';\n\n  /**\n   * Unit\n   */\n  @Prop() unit = '%';\n\n  /**\n   * Thow ticks\n   */\n  @Prop() ticks = false;\n\n  /**\n   * Show tick labels\n   */\n  @Prop() labels = false;\n\n  /**\n   * Disable tooltip\n   */\n  @Prop() disableTooltip = false;\n\n  /**\n   * Label of the slider\n   */\n  @Prop() label: string;\n\n  /**\n   * Disable the slider\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Segment count\n   */\n  @Prop() segments = '10';\n\n  /**\n   * Emit value changes to parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() trackPosition: number;\n\n  @State() tickPositions: string[] = [];\n\n  private static _uniqueId = 0;\n\n  private _inputElement: HTMLInputElement;\n\n  @Watch('segments')\n  onSegmentChange() {\n    this._calculateTickPositions();\n  }\n\n  @Watch('value')\n  onValueChange(value) {\n    this._calculateTrackPosition();\n\n    requestAnimationFrame(() => {\n      this._inputElement.value = value.toString();\n    });\n  }\n\n  private _formatNumber(number: number, decimals = 0) {\n    return new Intl.NumberFormat('fi-FI', {\n      maximumFractionDigits: decimals,\n      minimumFractionDigits: decimals,\n    }).format(number);\n  }\n\n  private _calculateTickPositions() {\n    this.tickPositions = [...new Array(+this.segments + 1)].map((_, index) => {\n      const fraction = +this.max / +this.segments;\n\n      return (index * fraction).toString();\n    });\n  }\n\n  private _calculateTrackPosition() {\n    this.trackPosition =\n      ((+this.value - +this.min) / (+this.max - +this.min)) * 100;\n  }\n\n  private _onInput(event: Event) {\n    const { value } = event.target as HTMLInputElement;\n\n    this.changeValue.emit(typeof this.value === 'number' ? +value : value);\n\n    this._calculateTrackPosition();\n  }\n\n  private _isActive(value: number) {\n    return this.trackPosition >= (100 / +this.max) * value;\n  }\n\n  componentWillLoad() {\n    CSlider._uniqueId += 1;\n  }\n\n  componentDidLoad() {\n    this._calculateTrackPosition();\n\n    this._calculateTickPositions();\n\n    requestAnimationFrame(() => {\n      this._inputElement.value = this.value.toString();\n    });\n  }\n\n  render() {\n    const classes = {\n      'c-slider': true,\n      'c-slider--labels': this.labels,\n    };\n\n    const styles = {\n      '--_c-slider-position': `${this.trackPosition}`,\n    };\n\n    return (\n      <Host class={classes} style={styles}>\n        {!!this.label && (\n          <label class=\"c-slider__label\">{!!this.label && this.label}</label>\n        )}\n\n        <div class=\"c-slider__wrapper\">\n          {!this.disableTooltip && (\n            <div class=\"c-slider__tooltip-wrapper\" aria-hidden=\"true\">\n              <span\n                data-tooltip={`${this._formatNumber(+this.value)}${this.unit}`}\n              ></span>\n            </div>\n          )}\n\n          <input\n            ref={(el) => (this._inputElement = el)}\n            aria-label={this.ariaLabel || this.label}\n            aria-valuenow={this.value}\n            aria-valuetext={`${this.value}${this.unit}`}\n            aria-valuemin={this.min}\n            aria-valuemax={this.max}\n            type=\"range\"\n            name={this.hostName}\n            id={this.hostId || `c-slider__${CSlider._uniqueId}`}\n            min={this.min}\n            max={this.max}\n            step={this.step}\n            disabled={this.disabled}\n            onInput={(event) => this._onInput(event)}\n          />\n        </div>\n\n        <div\n          class={{\n            'c-slider__ticks': true,\n            'c-slider__ticks--disabled': this.disabled,\n          }}\n          aria-hidden=\"true\"\n        >\n          {this.tickPositions.map((position) => (\n            <span\n              class={{\n                active: this._isActive(Math.round(+position)),\n                ticks: this.ticks,\n                labels: this.labels,\n              }}\n              data-value={this._formatNumber(Math.round(+position))}\n            ></span>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}