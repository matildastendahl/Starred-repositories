{"version":3,"file":"c-tabs.spec.js","sourceRoot":"","sources":["../../../../../src/components/c-tabs/test/c-tabs.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,WAAW,CAAC;AAClC,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;EACtB,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;MACnB,IAAI,EAAE,mBAAmB;KAC1B,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;IAC7B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACzB,IAAI,EAAE;;;;;gBAKI;KACX,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;IACnD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACzB,IAAI,EAAE;;;;;gBAKI;KACX,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACzB,IAAI,EAAE;wCAC4B,IAAI;;;;gBAI5B;KACX,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;IACjC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACzB,IAAI,EAAE;;;qCAGyB,IAAI;;gBAEzB;KACX,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;IACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACzB,IAAI,EAAE;;;uCAG2B,IAAI;;gBAE3B;KACX,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;IACzB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;MACzB,IAAI,EAAE;;;;;gBAKI;KACX,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { CTabs } from '../c-tabs';\nimport { CTab } from '../../c-tab/c-tab';\n\ndescribe('c-tabs', () => {\n  it('renders default html', async () => {\n    const page = await newSpecPage({\n      components: [CTabs],\n      html: `<c-tabs></c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders c-tab', async () => {\n    const page = await newSpecPage({\n      components: [CTabs, CTab],\n      html: `\n      <c-tabs>\n        <c-tab>One</c-tab>\n        <c-tab>Two</c-tab>\n        <c-tab>Three</c-tab>\n      </c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders value of current actibe tab', async () => {\n    const page = await newSpecPage({\n      components: [CTabs, CTab],\n      html: `\n      <c-tabs value=\"tab2\">\n        <c-tab value=\"tab1\">One</c-tab>\n        <c-tab value=\"tab2\">Two</c-tab>\n        <c-tab value=\"tab3\">Three</c-tab>\n      </c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('disables bottom border', async () => {\n    const page = await newSpecPage({\n      components: [CTabs, CTab],\n      html: `\n      <c-tabs value=\"tab2\" borderless=${true}>\n        <c-tab value=\"tab1\">One</c-tab>\n        <c-tab value=\"tab2\">Two</c-tab>\n        <c-tab value=\"tab3\">Three</c-tab>\n      </c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render active tab', async () => {\n    const page = await newSpecPage({\n      components: [CTabs, CTab],\n      html: `\n      <c-tabs value=\"tab1\">\n        <c-tab value=\"tab1\">One</c-tab>\n        <c-tab value=\"tab2\" active=${true}>Two</c-tab>\n        <c-tab value=\"tab3\">Three</c-tab>\n      </c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render disabled tab', async () => {\n    const page = await newSpecPage({\n      components: [CTabs, CTab],\n      html: `\n      <c-tabs value=\"tab1\">\n        <c-tab value=\"tab1\">One</c-tab>\n        <c-tab value=\"tab2\" disabled=${true}>Two</c-tab>\n        <c-tab value=\"tab3\">Three</c-tab>\n      </c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render id', async () => {\n    const page = await newSpecPage({\n      components: [CTabs, CTab],\n      html: `\n      <c-tabs value=\"tab1\">\n        <c-tab value=\"tab1\">One</c-tab>\n        <c-tab value=\"tab2\" id=\"second\">Two</c-tab>\n        <c-tab value=\"tab3\">Three</c-tab>\n      </c-tabs>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}