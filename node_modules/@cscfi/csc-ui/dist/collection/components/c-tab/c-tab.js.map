{"version":3,"file":"c-tab.js","sourceRoot":"","sources":["../../../../src/components/c-tab/c-tab.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,KAAK,EAEL,CAAC,EACD,IAAI,EACJ,MAAM,EACN,IAAI,GACL,MAAM,eAAe,CAAC;AAYvB,MAAM,OAAO,IAAI;;IAuDP,aAAQ,GAAG,CAAC,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,EAAE;MAC3C,IAAI,IAAI,CAAC,QAAQ;QAAE,OAAO;MAE1B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;MAE9D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACpE,CAAC,CAAC;kBAvDe,KAAK;oBAKH,KAAK;;;;;;EAqDxB,UAAU;IACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACjC,CAAC;EAGD,aAAa,CAAC,KAAoB;IAChC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;MAC3C,KAAK,CAAC,cAAc,EAAE,CAAC;MAEvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC5B;EACH,CAAC;EAED,MAAM;IACJ,MAAM,OAAO,GAAG;MACd,OAAO,EAAE,IAAI;MACb,eAAe,EAAE,IAAI,CAAC,MAAM;MAC5B,iBAAiB,EAAE,IAAI,CAAC,QAAQ;KACjC,CAAC;IAEF,MAAM,IAAI,GAAG;MACX,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;MACzC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;MACvC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;MACvC,cAAc,EAAE,IAAI,CAAC,OAAO;MAC5B,eAAe,EAAE,IAAI,CAAC,QAAQ;MAC9B,IAAI,EAAE,KAAK;MACX,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACjD,CAAC;IAEF,OAAO,CACL,EAAC,IAAI,oBACC,IAAI,IACR,EAAE,EAAE,IAAI,CAAC,MAAM,gBACH,IAAI,CAAC,KAAK,EACtB,KAAK,EAAE,OAAO,EACd,OAAO,EAAE,IAAI,CAAC,QAAQ;MAEtB;QACE,eAAa,CACR;MAEP,gBAAU,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,GAAa,CACzD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n} from '@stencil/core';\n\n/**\n * @group Tabs\n * @parent c-tabs\n * @slot Default slot - Default slot\n */\n@Component({\n  tag: 'c-tab',\n  styleUrl: 'c-tab.scss',\n  shadow: true,\n})\nexport class CTab {\n  @Element() element: HTMLCTabElement;\n\n  /**\n   * Mark tab as active\n   */\n  @Prop() active = false;\n\n  /**\n   * Mark tab as disabled\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Id of the tab\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Position in the set\n   * @private\n   */\n  @Prop() position: number;\n\n  /**\n   * Size of the set\n   * @private\n   */\n  @Prop() setsize: number;\n\n  /**\n   * Value for the tab\n   * - for use in c-tabs\n   */\n  @Prop() value?: number | string;\n\n  /**\n   * Emit changes to the parent\n   *\n   * @private\n   */\n  @Event() tabChange: EventEmitter<{\n    value: number | string;\n    element: HTMLCTabElement;\n  }>;\n\n  /**\n   * Emit focus to the parent\n   *\n   * @private\n   */\n  @Event() tabFocus: EventEmitter<number | string>;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  private _onClick = (event, center = false) => {\n    if (this.disabled) return;\n\n    this._rippleElement.createRipple(event, this.element, center);\n\n    this.tabChange.emit({ value: this.value, element: this.element });\n  };\n\n  @Listen('focus', { passive: true })\n  onTabFocus() {\n    this.tabFocus.emit(this.value);\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeydown(event: KeyboardEvent) {\n    if (['Space', 'Enter'].includes(event.code)) {\n      event.preventDefault();\n\n      this._onClick(event, true);\n    }\n  }\n\n  render() {\n    const classes = {\n      'c-tab': true,\n      'c-tab--active': this.active,\n      'c-tab--disabled': this.disabled,\n    };\n\n    const a11y = {\n      'aria-disabled': this.disabled.toString(),\n      'aria-hidden': this.disabled.toString(),\n      'aria-selected': this.active.toString(),\n      'aria-setsize': this.setsize,\n      'aria-posinset': this.position,\n      role: 'tab',\n      tabindex: this.active && !this.disabled ? 0 : -1,\n    };\n\n    return (\n      <Host\n        {...a11y}\n        id={this.hostId}\n        data-value={this.value}\n        class={classes}\n        onClick={this._onClick}\n      >\n        <span>\n          <slot></slot>\n        </span>\n\n        <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n      </Host>\n    );\n  }\n}\n"]}