{"version":3,"file":"c-icon-button.js","sourceRoot":"","sources":["../../../../src/components/c-icon-button/c-icon-button.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAWzD,MAAM,OAAO,WAAW;;IAyEd,aAAQ,GAAG,CAAC,KAAK,EAAE,EAAE;MAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3D,CAAC,CAAC;;kBAlEe,KAAK;mBAKJ,KAAK;gBAKR,KAAK;oBAKD,KAAK;oBAKL,KAAK;gBAKD,IAAI;iBAKX,KAAK;oBAKF,KAAK;gBAKwB,SAAS;;EAMjD,YAAY;IAClB,OAAO,mBAAU,IAAI,CAAC,KAAK,CAAW,CAAC;EACzC,CAAC;EAEO,YAAY;IAClB,OAAO;MACL,eAAe,EAAE,IAAI;MACrB,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MAC1C,uBAAuB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM;MACtC,qBAAqB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;MAClC,sBAAsB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;MACpC,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MAC1C,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;MAC1C,sBAAsB,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO;MAC7C,wBAAwB,EAAE,IAAI,CAAC,IAAI,KAAK,SAAS;KAClD,CAAC;EACJ,CAAC;EAMD,MAAM;IACJ,MAAM,YAAY,GAAG;MACnB,SAAS,EAAE,EAAE;MACb,KAAK,EAAE,EAAE;MACT,OAAO,EAAE,EAAE;KACZ,CAAC;IAEF,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE;MAC9B,cAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;QACrD,WACE,KAAK,EAAC,iBAAiB,EACvB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAoB,CAAC;UAEpD,IAAI,CAAC,OAAO,IAAI,CACf,iBACE,KAAK,EAAC,oCAAoC,EAC1C,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAC7B,CACH;UAEA,CAAC,IAAI,CAAC,OAAO,IAAI,CAChB,gBACG,IAAI,CAAC,IAAI,IAAI,CACZ,WAAK,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW;YAC7C,YAAM,CAAC,EAAE,IAAI,CAAC,IAAI,GAAI,CAClB,CACP,CACI,CACR,CACG;QAEL,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE;QAElC,gBAAU,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,GAAa,CACvD,CACJ,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\n\n/**\n * @group Buttons\n * @slot Default slot - Default slot for the icon\n */\n@Component({\n  tag: 'c-icon-button',\n  styleUrl: 'c-icon-button.scss',\n  shadow: true,\n})\nexport class CIconButton {\n  /**\n   * Show a badge on top of the icon\n   */\n  @Prop() badge: string;\n\n  /**\n   * Danger variant of the button\n   */\n  @Prop() danger = false;\n\n  /**\n   * Loading variant of the button\n   */\n  @Prop() loading = false;\n\n  /**\n   * Text variant of the button\n   */\n  @Prop() text = false;\n\n  /**\n   * Inverted color for dark backgrounds\n   */\n  @Prop() inverted = false;\n\n  /**\n   * Outlined variant of the button\n   */\n  @Prop() outlined = false;\n\n  /**\n   * Path for the svg icon\n   */\n  @Prop() path: string = null;\n\n  /**\n   * Ghost variant of the button\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Disable the button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Size of the button\n   */\n  @Prop() size: 'default' | 'x-small' | 'small' = 'default';\n\n  private _container?: HTMLDivElement;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  private _renderBadge() {\n    return <c-badge>{this.badge}</c-badge>;\n  }\n\n  private _hostClasses() {\n    return {\n      'c-icon-button': true,\n      'c-icon-button--disabled': !!this.disabled,\n      'c-icon-button--danger': !!this.danger,\n      'c-icon-button--text': !!this.text,\n      'c-icon-button--ghost': !!this.ghost,\n      'c-icon-button--outlined': !!this.outlined,\n      'c-icon-button--inverted': !!this.inverted,\n      'c-icon-button--small': this.size === 'small',\n      'c-icon-button--x-small': this.size === 'x-small',\n    };\n  }\n\n  private _onClick = (event) => {\n    this._rippleElement.createRipple(event, this._container);\n  };\n\n  render() {\n    const spinnerSizes = {\n      'x-small': 18,\n      small: 20,\n      default: 24,\n    };\n\n    return (\n      <Host class={this._hostClasses()}>\n        <button disabled={this.disabled} onClick={this._onClick}>\n          <div\n            class=\"inner-container\"\n            ref={(el) => (this._container = el as HTMLDivElement)}\n          >\n            {this.loading && (\n              <c-spinner\n                color=\"var(--_c-icon-button-loader-color)\"\n                size={spinnerSizes[this.size]}\n              />\n            )}\n\n            {!this.loading && (\n              <slot>\n                {this.path && (\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                    <path d={this.path} />\n                  </svg>\n                )}\n              </slot>\n            )}\n          </div>\n\n          {this.badge && this._renderBadge()}\n\n          <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n        </button>\n      </Host>\n    );\n  }\n}\n"]}