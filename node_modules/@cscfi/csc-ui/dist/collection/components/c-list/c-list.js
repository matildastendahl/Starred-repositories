import { Host, h } from "@stencil/core";
export class CList {
  constructor() {
    this.disabled = false;
  }
  onDisabledChange(disabled) {
    this._items.forEach((item) => {
      const isDisabled = item.hasAttribute('disabled') && !('disabled' in item.dataset);
      if (!isDisabled) {
        item.disabled = !!disabled;
        item.disabledByParent = !!disabled;
      }
    });
  }
  get _items() {
    return Array.from(this.el.querySelectorAll('c-list-item'));
  }
  componentDidLoad() {
    this.onDisabledChange(this.disabled);
  }
  render() {
    const classes = {
      'c-list': true,
      'c-list--disabled': this.disabled,
    };
    return h(Host, { role: "list", class: classes });
  }
  static get is() { return "c-list"; }
  static get originalStyleUrls() {
    return {
      "$": ["c-list.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["c-list.css"]
    };
  }
  static get properties() {
    return {
      "disabled": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Disable the list"
        },
        "attribute": "disabled",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "el"; }
  static get watchers() {
    return [{
        "propName": "disabled",
        "methodName": "onDisabledChange"
      }];
  }
}
//# sourceMappingURL=c-list.js.map
