{"version":3,"file":"c-swiper-tab.js","sourceRoot":"","sources":["../../../../src/components/c-swiper-tab/c-swiper-tab.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,IAAI,EACJ,CAAC,EACD,IAAI,EACJ,KAAK,EACL,OAAO,EAEP,MAAM,GACP,MAAM,eAAe,CAAC;AAUvB,MAAM,OAAO,UAAU;;oBAMF,KAAK;kBAKP,KAAK;;;;;;;EA6CtB,UAAU,CAAC,KAAK;IACd,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ;MAAE,OAAO;IAEzC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAEzD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACpC,CAAC;EAED,MAAM;IACJ,MAAM,OAAO,GAAG;MACd,cAAc,EAAE,IAAI;MACpB,sBAAsB,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM;MACrD,wBAAwB,EAAE,IAAI,CAAC,QAAQ;KACxC,CAAC;IAEF,MAAM,IAAI,GAAG;MACX,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;MAC/C,cAAc,EAAE,IAAI,CAAC,OAAO;MAC5B,eAAe,EAAE,IAAI,CAAC,QAAQ;MAC9B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B,CAAC;IAEF,OAAO,CACL,EAAC,IAAI,oBAAK,IAAI,IAAE,IAAI,EAAC,KAAK;MACxB,WAAK,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO;QAClC,WACE,KAAK,EAAC,uBAAuB,EAC7B,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAoB,CAAC;UAErD,WAAK,KAAK,EAAC,sBAAsB;YAC9B,IAAI,CAAC,KAAK;YACX,YAAM,IAAI,EAAC,MAAM,GAAQ,CACrB;UAEN,WAAK,KAAK,EAAC,2BAA2B;YACpC,eAAa,CACT;UAEN,gBAAU,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,GAAa,CAC1D,CACF,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Prop,\n  h,\n  Host,\n  Event,\n  Element,\n  EventEmitter,\n  Listen,\n} from '@stencil/core';\n\n/**\n * @parent c-swiper\n */\n@Component({\n  tag: 'c-swiper-tab',\n  styleUrl: 'c-swiper-tab.scss',\n  shadow: true,\n})\nexport class CSwiperTab {\n  @Element() el: HTMLCSwiperTabElement;\n\n  /**\n   * Disable button\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Mark as active\n   */\n  @Prop() active = false;\n\n  /**\n   * Label of the button\n   */\n  @Prop() label: string;\n\n  /**\n   * Id of the button\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Size of the set\n   * @private\n   */\n  @Prop() setsize: number;\n\n  /**\n   * Position in the set\n   * @private\n   */\n  @Prop() position: number;\n\n  /**\n   * Value of the button\n   */\n  @Prop() value: number | string;\n\n  /**\n   * Emit value change to the parent\n   * @private\n   */\n  @Event({\n    bubbles: true,\n    composed: true,\n    cancelable: true,\n  })\n  changeValue: EventEmitter<number | string>;\n\n  private _container?: HTMLDivElement;\n\n  private _rippleElement: HTMLCRippleElement;\n\n  @Listen('click', { passive: true })\n  onTabClick(event) {\n    if (this.active || this.disabled) return;\n\n    this._rippleElement.createRipple(event, this._container);\n\n    this.changeValue.emit(this.value);\n  }\n\n  render() {\n    const classes = {\n      'c-swiper-tab': true,\n      'c-swiper-tab--active': !this.disabled && this.active,\n      'c-swiper-tab--disabled': this.disabled,\n    };\n\n    const a11y = {\n      'aria-selected': this.active ? 'true' : 'false',\n      'aria-setsize': this.setsize,\n      'aria-posinset': this.position,\n      tabindex: this.active ? 0 : -1,\n    };\n\n    return (\n      <Host {...a11y} role=\"tab\">\n        <div id={this.hostId} class={classes}>\n          <div\n            class=\"c-swiper-tab__content\"\n            ref={(el) => (this._container = el as HTMLDivElement)}\n          >\n            <div class=\"c-swiper-tab__header\">\n              {this.label}\n              <slot name=\"icon\"></slot>\n            </div>\n\n            <div class=\"c-swiper-tab__description\">\n              <slot></slot>\n            </div>\n\n            <c-ripple ref={(el) => (this._rippleElement = el)}></c-ripple>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}