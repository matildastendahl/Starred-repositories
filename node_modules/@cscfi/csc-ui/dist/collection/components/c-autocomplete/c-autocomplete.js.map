{"version":3,"file":"c-autocomplete.js","sourceRoot":"","sources":["../../../../src/components/c-autocomplete/c-autocomplete.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  AttachInternals,\n  Component,\n  Host,\n  h,\n  Prop,\n  State,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  Watch,\n  Method,\n} from '@stencil/core';\nimport { CAutocompleteItem } from '../../types';\nimport { mdiChevronDown, mdiClose } from '@mdi/js';\n\n/**\n * @group Form\n */\n@Component({\n  tag: 'c-autocomplete',\n  styleUrl: 'c-autocomplete.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class CAutocomplete {\n  @Element() el: HTMLCAutocompleteElement;\n\n  // eslint-disable-next-line\n  @AttachInternals() internals: ElementInternals;\n\n  private static _uniqueId = 0;\n\n  private _dropdownElement: HTMLCDropdownElement;\n\n  private _inputElement: HTMLInputElement;\n\n  private _cInputElement: HTMLCInputElement;\n\n  private _inputId: string;\n\n  private _preventDialogOpen = false;\n\n  private _debounce = null;\n\n  private get _id() {\n    return this.hostId || `autocomplete_${CAutocomplete._uniqueId}`;\n  }\n\n  /**\n   * Dropdown items\n   */\n  @Prop() items: CAutocompleteItem[] = [];\n\n  /**\n   * Selected item\n   */\n  @Prop() value: string | number | CAutocompleteItem = null;\n\n  /**\n   * Search string\n   */\n  @Prop() query: string = null;\n\n  /**\n   * Id of the element\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label: string;\n\n  /**\n   * Input field name\n   */\n  @Prop() name: string;\n\n  /**\n   * Placeholder text\n   */\n  @Prop() placeholder = '';\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Show loading state\n   */\n  @Prop() loading = false;\n\n  /**\n   * Show required validation\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validíty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Shadow variant\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Return object instead of value\n   */\n  @Prop() returnObject = false;\n\n  /**\n   * Triggered when text is typed\n   */\n  @Event() changeQuery: EventEmitter;\n\n  /**\n   * Triggered when option is selected\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  /**\n   * Items per page before adding scroll\n   */\n  @Prop() itemsPerPage = 6;\n\n  /**\n   * Minimum query length\n   */\n  @Prop() minimumQueryLength = 0;\n\n  /**\n   * Minimum query length message\n   */\n  @Prop() minimumQueryLengthMessage = 'Type at least {n} characters';\n\n  /**\n   * No matching items message\n   */\n  @Prop() noMatchingItemsMessage = 'No suggestions found';\n\n  @State() optionElements: NodeListOf<HTMLCOptionElement>;\n\n  @State() currentIndex: number = null;\n\n  @State() dropdownVisible = false;\n\n  @State() statusText = '';\n\n  @State() optionElementsExist = false;\n\n  /**\n   * Reset autocomplete state\n   */\n  @Method()\n  async reset() {\n    this.query = '';\n\n    this.changeValue.emit(null);\n\n    this.internals.setFormValue(null);\n\n    this.changeQuery.emit('');\n\n    this._dropdownElement.updateList();\n  }\n\n  private _handleKeyDown(event: KeyboardEvent) {\n    const alphanumeric = /^[0-9a-zA-Z ]+$/;\n\n    if (event.key.match(alphanumeric) && event.key.length === 1) {\n      if (!this.dropdownVisible) {\n        this._dropdownElement.open();\n\n        return;\n      }\n\n      this._inputElement.focus();\n\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n\n      this._preventDialogOpen = true;\n      this._dropdownElement.close();\n\n      requestAnimationFrame(() => {\n        this._inputElement.focus();\n      });\n\n      return;\n    }\n\n    if (event.key === 'Tab') {\n      this._inputElement.focus();\n\n      requestAnimationFrame(() => {\n        this._dropdownElement.close();\n      });\n\n      return;\n    }\n\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n\n      if (!this._items.length) return;\n\n      if (!this.dropdownVisible || this.currentIndex === null) {\n        this.currentIndex = 0;\n        this._dropdownElement.open();\n        this._dropdownElement.focusItem(this.currentIndex);\n\n        return;\n      }\n\n      this.currentIndex = Math.min(\n        this.currentIndex + 1,\n        this._items.length - 1,\n      );\n\n      this._dropdownElement.focusItem(this.currentIndex);\n\n      return;\n    }\n\n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n\n      if (this.currentIndex === 0) {\n        this._dropdownElement.close();\n        this._inputElement.focus();\n      }\n\n      if (!this.dropdownVisible || this.currentIndex === null) {\n        this.currentIndex = this._items.length - 1;\n        this._dropdownElement.open();\n        this._dropdownElement.focusItem(this.currentIndex);\n\n        return;\n      }\n\n      this.currentIndex = Math.max(this.currentIndex - 1, 0);\n\n      this._dropdownElement.focusItem(this.currentIndex);\n    }\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (this.currentIndex === null) return;\n\n      this._dropdownElement.selectItem(this.currentIndex);\n    }\n\n    if (event.key === 'Home' && this.dropdownVisible) {\n      this.currentIndex = 0;\n    }\n\n    if (event.key === 'End' && this.dropdownVisible) {\n      this.currentIndex = this._items.length - 1;\n    }\n  }\n\n  @Listen('dropdownStateChange')\n  onDropdownStateChange(event: CustomEvent<boolean>) {\n    const isOpen = event.detail;\n\n    this.dropdownVisible = isOpen;\n\n    if (!isOpen) {\n      requestAnimationFrame(() => {\n        this.currentIndex = null;\n      });\n    }\n  }\n\n  @Listen('selectOption')\n  onSelectOption(event: CustomEvent<{ name: string; value: string }>) {\n    this._dropdownElement.close();\n\n    const { name, value } = event.detail;\n\n    this.value = this.returnObject ? event.detail : value;\n\n    this.changeValue.emit(this.value);\n\n    this.internals.setFormValue(value);\n\n    this.query = name;\n\n    this.changeQuery.emit(name);\n\n    this._preventDialogOpen = true;\n\n    if (this.optionElementsExist) {\n      Array.from(this.optionElements).forEach((item) => {\n        item.selected = item.value === value && item.name === name;\n      });\n\n      this._dropdownElement.updateList();\n    }\n\n    this._inputElement.focus();\n  }\n\n  @Watch('query')\n  handleQueryChange() {\n    this._updateStatusText();\n  }\n\n  private _updateInput() {\n    this._dropdownElement.open();\n\n    this.query = this._inputElement.value;\n\n    this.changeQuery.emit(this.query);\n\n    this._dropdownElement.updateList();\n  }\n\n  private _handleSlotChange = () => {\n    this.optionElements = this.el.querySelectorAll('c-option');\n\n    const selection = Array.from(this.optionElements).find(\n      (option) => option.selected,\n    );\n\n    if (selection) {\n      this.value = this.returnObject\n        ? { name: selection.name, value: selection.value }\n        : selection.value;\n\n      this.changeValue.emit(this.value);\n\n      this.changeQuery.emit(this.query);\n\n      this.internals.setFormValue(selection.value.toString());\n    }\n\n    if (this.optionElements.length && !this.optionElementsExist) {\n      this.optionElementsExist = true;\n    }\n  };\n\n  private _toggleDropdown = (event) => {\n    event.stopPropagation();\n\n    if (this.dropdownVisible) {\n      this._dropdownElement.close();\n\n      return;\n    }\n\n    this._dropdownElement.open();\n  };\n\n  private _onButtonKeyDown = (\n    src: 'chevron' | 'reset',\n    event: KeyboardEvent,\n  ) => {\n    event.stopPropagation();\n\n    if (event.key !== 'Tab') event.preventDefault();\n\n    if (['Enter', ' '].includes(event.key)) {\n      if (src === 'chevron') {\n        this._toggleDropdown(event);\n\n        return;\n      }\n\n      this._reset(event);\n\n      this._preventDialogOpen = true;\n\n      this._inputElement.focus();\n    }\n  };\n\n  private _renderLoader() {\n    return <c-spinner color=\"var(--_c-autocomplete-active-color)\" size={20} />;\n  }\n\n  private _renderChevron() {\n    const classes = {\n      'c-input-menu__chevron': true,\n      'c-input-menu__chevron--active': this.dropdownVisible,\n    };\n\n    return (\n      <c-icon-button\n        size=\"x-small\"\n        class={classes}\n        disabled={this.disabled}\n        text\n        onClick={(event) => this._toggleDropdown(event)}\n        onKeyDown={(event) => this._onButtonKeyDown('chevron', event)}\n      >\n        <c-icon path={mdiChevronDown} size={24} />\n      </c-icon-button>\n    );\n  }\n\n  private _reset = (event) => {\n    event.stopPropagation();\n\n    this.query = '';\n\n    this.value = null;\n\n    this.changeValue.emit(null);\n\n    this.internals.setFormValue(null);\n\n    this.changeQuery.emit('');\n\n    this._preventDialogOpen = true;\n\n    this._cInputElement.reset();\n\n    this._inputElement.focus();\n\n    this._dropdownElement.updateList();\n  };\n\n  private _renderReset() {\n    return (\n      <c-icon-button\n        aria-label=\"\"\n        size=\"x-small\"\n        disabled={this.disabled}\n        text\n        onClick={(event) => this._reset(event)}\n        onKeyDown={(event) => this._onButtonKeyDown('reset', event)}\n      >\n        <c-icon path={mdiClose} size={20} />\n      </c-icon-button>\n    );\n  }\n\n  private _onInputFocus = () => {\n    if (!this._preventDialogOpen) {\n      this._dropdownElement.open();\n    }\n\n    this._updateStatusText();\n\n    this._preventDialogOpen = false;\n  };\n\n  private _renderInputElement() {\n    return (\n      <div class=\"c-input-menu__input\">\n        <input\n          type=\"text\"\n          ref={(el) => (this._inputElement = el)}\n          aria-expanded={this.dropdownVisible.toString()}\n          aria-owns={this._inputId + '-items'}\n          aria-autocomplete=\"list\"\n          autocomplete=\"off\"\n          class=\"c-input__input\"\n          role=\"combobox\"\n          value={this.query}\n          name={this.name ?? null}\n          disabled={this.disabled}\n          onInput={() => this._updateInput()}\n          onFocus={() => this._onInputFocus()}\n        />\n      </div>\n    );\n  }\n\n  componentWillLoad() {\n    CAutocomplete._uniqueId += 1;\n\n    this._inputId =\n      'input_' +\n      (this.hostId || this.label || this.placeholder).replace(\n        /[^a-zA-Z0-9-_]/g,\n        '',\n      );\n  }\n\n  private get _items() {\n    return this.optionElementsExist ? this.optionElements : this.items;\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      const ending = !!this._items.length\n        ? ' or navigate using the up and down arrows'\n        : '';\n\n      if (this.currentIndex === null) {\n        this.statusText = this._items.length\n          ? `${this._items.length} result${\n              this._items.length !== 1 ? 's' : ''\n            } available`\n          : 'No search results available';\n      }\n\n      if (this.query !== null && this._items.length) {\n        this.statusText += ', input a search query to filter the results';\n      }\n\n      this._dropdownElement.setStatusText(this.statusText + ending);\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  render() {\n    const itemType = this.optionElementsExist ? 'option' : 'item';\n\n    return (\n      <Host>\n        <c-dropdown\n          ref={(el) => (this._dropdownElement = el)}\n          id={`${this._id}-dropdown`}\n          index={this.currentIndex}\n          items-per-page={this.itemsPerPage}\n          item-type={itemType}\n          items={\n            this._items as NodeListOf<HTMLCOptionElement> & CAutocompleteItem[]\n          }\n          parent={this.el}\n          type=\"autocomplete\"\n          onKeyDown={(event) => this._handleKeyDown(event)}\n        >\n          <c-input\n            slot=\"default\"\n            ref={(el) => (this._cInputElement = el)}\n            active={this.dropdownVisible}\n            disabled={this.disabled}\n            hide-details={this.hideDetails}\n            hint={this.hint}\n            id={this.hostId}\n            input-id={this._inputId}\n            label={this.label}\n            name={this.name}\n            placeholder={this.placeholder}\n            required={this.required}\n            shadow={this.shadow}\n            valid={this.valid}\n            validate={this.validate}\n            validate-on-blur={this.validateOnBlur}\n            validation={this.validation}\n            value={this.query}\n            variant=\"select\"\n          >\n            <slot name=\"pre\" slot=\"pre\"></slot>\n\n            <div class=\"c-input__content\">\n              {this._renderInputElement()}\n\n              {this.loading && this._renderLoader()}\n\n              {!this.loading && this.value && this._renderReset()}\n\n              {!this.loading && !this.value && this._renderChevron()}\n\n              <slot onSlotchange={() => this._handleSlotChange()}></slot>\n            </div>\n\n            <slot name=\"post\" slot=\"post\"></slot>\n          </c-input>\n        </c-dropdown>\n      </Host>\n    );\n  }\n}\n"]}