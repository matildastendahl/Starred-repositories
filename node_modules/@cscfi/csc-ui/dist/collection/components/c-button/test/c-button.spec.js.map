{"version":3,"file":"c-button.spec.js","sourceRoot":"","sources":["../../../../../src/components/c-button/test/c-button.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;EACtB,MAAM,WAAW,GAAG,SAAS,CAAC;EAC9B,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE,8BAA8B;KACrC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;IAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;;kCAGsB,WAAW;kBAC3B;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;IACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;kBACM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACrC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;kBACM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;IACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;kBACM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;IACtB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;kBACM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;IACxB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;kBACM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;IAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;kBACM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;IACnD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;IAC7B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;IAC5B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACrC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;IACzD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IAC/B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;IAC/B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;IACjC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;IAC1B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;IACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;IACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;IACzB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;MACrB,IAAI,EAAE;;kBAEM;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;EACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { CButton } from '../c-button';\n\ndescribe('button', () => {\n  const description = 'Log out';\n  it('renders default html', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button>Default</c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders button with filled slots', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button>\n      <div slot=\"icon\" class=\"mdi mdi-login\"></div>\n        Default\n        <div slot=\"description\">${description}</div> \n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders disabled button', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button disabled={true}>\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders fitted button', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button fit={true}>\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders ghost button', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button ghost={true}>\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add id', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button id=\"important\">\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add href', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button href=\"www.google.com\">\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render icon by attribute, not slot', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button icon=\"account\">\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render icon after text', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button icon-end={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('inverted button style for dark mode', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button inverted={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('loading', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button loading={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('remove border', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button no-radius={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('with outline', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button outlined={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('with path to svg-icon', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button path=\"path to my svg\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('with path to svg-icon and icon after text', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button path=\"path to my svg\" icon-end={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add size: large', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button size=\"large\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add size: small', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button size=\"small\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add size: default', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button size=\"default\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add target', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button target=\"_blank\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('with only visible text', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button text={true}>\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render type: button', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button type=\"button\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render type: submit', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button type=\"submit\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('add value', async () => {\n    const page = await newSpecPage({\n      components: [CButton],\n      html: `<c-button value=\"first\">\n      ButtonText\n      </c-button>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}