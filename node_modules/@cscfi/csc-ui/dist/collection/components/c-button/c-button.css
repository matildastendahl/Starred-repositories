html {
  box-sizing: border-box;
}

body {
  margin: 0;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  -webkit-tap-highlight-color: transparent;
}

:host {
  font-family: var(--c-font-family);
}

::-ms-reveal {
  display: none;
}

:host {
  /**
   * @prop --c-button-border-radius: Button border radius
   */
  --_c-button-border-radius: var(--c-button-border-radius, 4px);
  --_c-button-height: 44px;
  --_c-button-min-width: 88px;
  --_c-button-padding: 0 16px;
  --_c-button-font-size: 16px;
  --_c-button-icon-size: 24px;
  --_c-button-outline-offset: 2px;
  border-radius: var(--_c-button-border-radius);
  display: inline-flex;
  min-width: max-content;
  transform: translateZ(0);
  transition: background-color 0.3s ease-in-out;
  /**
   * @prop --c-button-background-color: Default button background color
   * @prop --c-button-text-color: Default button text color
   * @prop --c-button-loader-color: Default button loader color
   * @prop --c-button-outline-color: Default button outline color
   */
  --_c-button-background-color: var(--c-button-background-color, var(--c-primary-600));
  --_c-button-text-color: var(--c-button-text-color, var(--c-white));
  --_c-button-loader-color: var(--c-button-loader-color, var(--_c-button-text-color));
  --_c-button-outline-color: var(--c-button-outline-color, var(--_c-button-background-color));
  background-color: var(--_c-button-background-color);
  color: var(--_c-button-text-color);
}
:host ::slotted(svg) {
  fill: var(--_c-button-loader-color);
}

:host(.c-button--no-radius) {
  --_c-button-border-radius: 0;
}

:host(:host:not(.c-button--description)) {
  height: var(--_c-button-height);
}

:host(.c-button--description) {
  height: "auto";
}

:host(:host:hover) {
  /**
  * @prop --c-button-background-color-hover: Default button hover background color
  */
  --_c-button-background-color-hover: var(--c-button-background-color-hover, var(--c-primary-400));
  background-color: var(--_c-button-background-color-hover);
}

:host(.c-button--inverted) {
  /**
   * @prop --c-button-inverted-background-color: Inverted default button background color
   * @prop --c-button-inverted-text-color: Inverted default button text color
   */
  --_c-button-inverted-background-color: var(--c-button-inverted-background-color, var(--c-white));
  --_c-button-inverted-text-color: var(--c-button-inverted-text-color, var(--c-primary-600));
  --_c-button-outline-color: var(--_c-button-inverted-background-color);
  background-color: var(--_c-button-inverted-background-color);
  color: var(--_c-button-inverted-text-color);
}

:host(.c-button--inverted:hover) {
  /**
   * @prop --c-button-inverted-background-color-hover: Inverted default button hover background color
   */
  --_c-button-inverted-background-color-hover: var(--c-button-inverted-background-color-hover, var(--c-primary-200));
  background-color: var(--_c-button-inverted-background-color-hover);
}

:host(.c-button--inverted.c-button--disabled) {
  /**
   * @prop --c-button-inverted-disabled-background-color: Inverted disabled default button background color
   * @prop --c-button-inverted-disabled-text-color: Inverted disabled default button text color
   */
  --_c-button-inverted-disabled-background-color: var(--c-button-inverted-disabled-background-color, var(--_c-button-disabled-background-color));
  --_c-button-inverted-disabled-text-color: var(--c-button-inverted-disabled-text-color, var(--c-tertiary-500));
  background-color: var(--_c-button-inverted-disabled-background-color);
  color: var(--_c-button-inverted-disabled-text-color);
}

:host(.c-button--danger) {
  /**
   * @prop --c-button-danger-background-color: Danger button background color
   * @prop --c-button-danger-text-color: Danger button text color
   * @prop --c-button-danger-loader-color: Danger button loader color
   */
  --_c-button-danger-background-color: var(--c-button-danger-background-color, var(--c-error-600));
  --_c-button-danger-text-color: var(--c-button-danger-text-color, var(--c-white));
  --_c-button-danger-loader-color: var(--c-button-danger-loader-color, var(--_c-button-danger-text-color));
  --_c-button-loader-color: var(--_c-button-danger-loader-color);
  --_c-button-outline-color: var(--_c-button-danger-background-color);
  background-color: var(--_c-button-danger-background-color);
  color: var(--_c-button-danger-text-color);
}

:host(.c-button--danger:hover) {
  /**
   * @prop --c-button-danger-background-color-hover: Danger button hover background color
   */
  --_c-button-danger-background-color-hover: var(--c-button-danger-background-color-hover, var(--c-error-400));
  background-color: var(--_c-button-danger-background-color-hover);
}

:host(.c-button--danger.c-button--disabled) {
  /**
   * @prop --c-button-danger-disabled-background-color: Disabled danger button background color
   * @prop --c-button-danger-disabled-text-color: Disabled danger button text color
   */
  --_c-button-danger-disabled-background-color: var(--c-button-danger-disabled-background-color, var(--_c-button-disabled-background-color));
  --_c-button-danger-disabled-text-color: var(--c-button-danger-disabled-text-color, var(--_c-button-disabled-text-color));
  background-color: var(--_c-button-danger-disabled-background-color);
  color: var(--_c-button-danger-disabled-text-color);
}

:host(.c-button--danger.c-button--inverted) {
  /**
   * @prop --c-button-danger-inverted-background-color: Inverted danger button background color
   * @prop --c-button-danger-inverted-text-color: Inverted danger button text color
   */
  --_c-button-danger-inverted-text-color: var(--c-button-danger-inverted-text-color, var(--c-error-600));
  --_c-button-danger-inverted-background-color: var(--c-button-danger-inverted-background-color, var(--c-white));
  --_c-button-outline-color: var(--_c-button-danger-inverted-background-color);
  background-color: var(--_c-button-danger-inverted-background-color);
  color: var(--_c-button-danger-inverted-text-color);
}

:host(.c-button--danger.c-button--inverted:hover) {
  /**
   * @prop --c-button-danger-inverted-background-color-hover: Inverted danger button hover background color
   */
  --_c-button-danger-inverted-background-color-hover: var(--c-button-danger-inverted-background-color-hover, var(--c-error-100));
  background-color: var(--_c-button-danger-inverted-background-color-hover);
}

:host(.c-button--danger.c-button--inverted.c-button--disabled) {
  /**
   * @prop --c-button-danger-inverted-disabled-background-color: Disabled inverted danger button background color
   * @prop --c-button-danger-inverted-disabled-text-color: Disabled inverted danger button text color
   */
  --_c-button-danger-inverted-disabled-background-color: var(--c-button-danger-inverted-disabled-background-color, var(--_c-button-disabled-background-color));
  --_c-button-danger-inverted-disabled-text-color: var(--c-button-danger-inverted-disabled-text-color, var(--_c-button-disabled-text-color));
  background-color: var(--_c-button-danger-inverted-disabled-background-color);
  color: var(--_c-button-danger-inverted-disabled-text-color);
}

:host(.c-button--ghost) {
  /**
   * @prop --c-button-ghost-background-color: Ghost button background color
   * @prop --c-button-ghost-text-color: Ghost button text color
   * @prop --c-button-ghost-loader-color: Ghost button loader color
   */
  --_c-button-ghost-background-color: var(--c-button-ghost-background-color, var(--c-primary-200));
  --_c-button-ghost-text-color: var(--c-button-ghost-text-color, var(--c-primary-600));
  --_c-button-ghost-loader-color: var(--c-button-ghost-loader-color, var(--_c-button-ghost-text-color));
  --_c-button-loader-color: var(--_c-button-ghost-loader-color);
  --_c-button-outline-color: var(--_c-button-ghost-text-color);
  background-color: var(--_c-button-ghost-background-color);
  color: var(--_c-button-ghost-text-color);
}

:host(.c-button--ghost:hover) {
  /**
   * @prop --c-button-ghost-background-color-hover: Ghost button hover background color
   */
  --_c-button-ghost-background-color-hover: var(--c-button-ghost-background-color-hover, var(--c-primary-100));
  background-color: var(--_c-button-ghost-background-color-hover);
}

:host(.c-button--ghost.c-button--disabled) {
  /**
   * @prop --c-button-ghost-disabled-background-color: Disabled ghost button background color
   * @prop --c-button-ghost-disabled-text-color: Disabled ghost button text color
   */
  --_c-button-ghost-disabled-background-color: var(--c-button-ghost-disabled-background-color, var(--_c-button-disabled-background-color));
  --_c-button-ghost-disabled-text-color: var(--c-button-ghost-disabled-text-color, var(--_c-button-disabled-text-color));
  background-color: var(--_c-button-ghost-disabled-background-color);
  color: var(--_c-button-ghost-disabled-text-color);
}

:host(.c-button--ghost.c-button--inverted) {
  /**
   * @prop --c-button-ghost-inverted-background-color: Inverted ghost button background color
   * @prop --c-button-ghost-inverted-text-color: Inverted ghost button text color
   */
  --_c-button-ghost-inverted-background-color: var(--c-button-ghost-inverted-background-color, rgba(var(--c-white-rgb), 0.2));
  --_c-button-ghost-inverted-text-color: var(--c-button-ghost-inverted-text-color, var(--c-white));
  --_c-button-outline-color: var(--_c-button-ghost-inverted-text-color);
  background-color: var(--_c-button-ghost-inverted-background-color);
  color: var(--_c-button-ghost-inverted-text-color);
}

:host(.c-button--ghost.c-button--inverted:hover) {
  /**
   * @prop --c-button-ghost-inverted-background-color-hover: Inverted ghost button hover text color
   */
  --_c-button-ghost-inverted-background-color-hover: var(--c-button-ghost-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));
  background-color: var(--_c-button-ghost-inverted-background-color-hover);
}

:host(.c-button--ghost.c-button--inverted.c-button--disabled) {
  /**
   * @prop --c-button-ghost-inverted-disabled-background-color: Disabled inverted ghost button background color
   * @prop --c-button-ghost-inverted-disabled-text-color: Disabled inverted ghost button text color
   */
  --_c-button-ghost-inverted-disabled-background-color: var(--c-button-ghost-inverted-disabled-background-color, rgba(var(--c-white-rgb), 0.05));
  --_c-button-ghost-inverted-disabled-text-color: var(--c-button-ghost-inverted-disabled-text-color, var(--c-tertiary-400));
  background-color: var(--_c-button-ghost-inverted-disabled-background-color);
  color: var(--_c-button-ghost-inverted-disabled-text-color);
}

:host(.c-button--text) {
  /**
   * @prop --c-button-text-background-color: Text button background color
   * @prop --c-button-text-text-color: Text button text color
   * @prop --c-button-text-loader-color: Text button loader color
   */
  --_c-button-text-background-color: var(--c-button-text-background-color, var(--c-transparent));
  --_c-button-text-text-color: var(--c-button-text-text-color, var(--c-primary-600));
  --_c-button-text-loader-color: var(--c-button-text-loader-color, var(--_c-button-text-text-color));
  --_c-button-loader-color: var(--_c-button-text-loader-color);
  --_c-button-outline-color: var(--_c-button-text-text-color);
  background-color: var(--_c-button-text-background-color);
  color: var(--_c-button-text-text-color);
}

:host(.c-button--text:hover) {
  /**
   * @prop --c-button-text-background-color-hover: Text button hover background color
   */
  --_c-button-text-background-color-hover: var(--c-button-text-background-color-hover, var(--c-primary-100));
  background-color: var(--_c-button-text-background-color-hover);
}

:host(.c-button--text.c-button--disabled) {
  /**
   * @prop --c-button-text-disabled-background-color: Disabled text button background color
   * @prop --c-button-text-disabled-text-color: Disabled text button text color
   */
  --_c-button-text-disabled-background-color: var(--c-button-text-disabled-background-color, var(--c-transparent));
  --_c-button-text-disabled-text-color: var(--c-button-text-disabled-text-color, var(--c-tertiary-500));
  background-color: var(--_c-button-text-disabled-background-color);
  color: var(--_c-button-text-disabled-text-color);
}

:host(.c-button--text.c-button--inverted) {
  /**
   * @prop --c-button-text-inverted-background-color: Inverted text button background color
   * @prop --c-button-text-inverted-text-color: Inverted text button text color
   */
  --_c-button-text-inverted-background-color: var(--c-button-text-inverted-background-color, var(--c-transparent));
  --_c-button-text-inverted-text-color: var(--c-button-text-inverted-text-color, var(--c-white));
  --_c-button-outline-color: var(--_c-button-text-inverted-text-color);
  background-color: var(--_c-button-text-inverted-background-color);
  color: var(--_c-button-text-inverted-text-color);
}

:host(.c-button--text.c-button--inverted:hover) {
  /**
   * @prop --c-button-text-inverted-background-color-hover: Inverted text button hover background color
   */
  --_c-button-text-inverted-background-color-hover: var(--c-button-text-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));
  background-color: var(--_c-button-text-inverted-background-color-hover);
}

:host(.c-button--text.c-button--inverted.c-button--disabled) {
  /**
   * @prop --c-button-text-inverted-disabled-background-color: Disabled inverted text button background color
   * @prop --c-button-text-inverted-disabled-text-color: Disabled inverted text button text color
   */
  --_c-button-text-inverted-disabled-background-color: var(--c-button-text-inverted-disabled-background-color, var(--c-transparent));
  --_c-button-text-inverted-disabled-text-color: var(--c-button-text-inverted-disabled-text-color, var(--c-tertiary-400));
  background-color: var(--_c-button-text-inverted-disabled-background-color);
  color: var(--_c-button-text-inverted-disabled-text-color);
}

:host(.c-button--outlined) {
  /**
   * @prop --c-button-outlined-background-color: Outlined button background color
   * @prop --c-button-outlined-border-color: Outlined button border color
   * @prop --c-button-outlined-text-color: Outlined button text color
   * @prop --c-button-outlined-loader-color: Outlined button loader color
   */
  --_c-button-outlined-text-color: var(--c-button-outlined-text-color, var(--c-primary-600));
  --_c-button-outlined-border-color: var(--c-button-outlined-border-color, var(--_c-button-outlined-text-color));
  --_c-button-outlined-background-color: var(--c-button-outlined-background-color, var(--c-transparent));
  --_c-button-outlined-loader-color: var(--c-button-outlined-loader-color, var(--_c-button-outlined-text-color));
  --_c-button-loader-color: var(--_c-button-outlined-loader-color);
  --_c-outline-color: var(--_c-button-outlined-border-color);
  --_c-button-outline-color: var(--_c-button-outlined-border-color);
  background-color: var(--_c-button-outlined-background-color);
  color: var(--_c-button-outlined-text-color);
  box-shadow: inset 0 0 0 2px var(--_c-outline-color);
}

:host(.c-button--outlined:hover) {
  /**
   * @prop --c-button-outlined-background-color-hover: Outlined button hover background color
   */
  --_c-button-outlined-background-color-hover: var(--c-button-outlined-background-color-hover, var(--c-primary-200));
  background-color: var(--_c-button-outlined-background-color-hover);
}

:host(.c-button--outlined.c-button--disabled) {
  /**
   * @prop --c-button-outlined-disabled-background-color: Disabled outlined button background color
   * @prop --c-button-outlined-disabled-border-color: Disabled outlined button border color
   * @prop --c-button-outlined-disabled-text-color: Disabled outlined button text color
   */
  --_c-button-outlined-disabled-text-color: var(--c-button-outlined-disabled-text-color, var(--c-tertiary-500));
  --_c-button-outlined-disabled-background-color: var(--c-button-outlined-disabled-background-color, var(--_c-button-outlined-background-color));
  --_c-button-outlined-disabled-border-color: var(--c-button-outlined-disabled-border-color, var(--c-tertiary-400));
  --_c-outline-color: var(--_c-button-outlined-disabled-border-color);
  background-color: var(--_c-button-outlined-disabled-background-color);
  color: var(--_c-button-outlined-disabled-text-color);
}

:host(.c-button--outlined.c-button--inverted) {
  /**
   * @prop --c-button-outlined-inverted-background-color: Inverted outlined button background color
   * @prop --c-button-outlined-inverted-border-color: Inverted outlined button border color
   * @prop --c-button-outlined-inverted-text-color: Inverted outlined button text color
   */
  --_c-button-outlined-inverted-text-color: var(--c-button-outlined-inverted-text-color, var(--c-white));
  --_c-button-outlined-inverted-border-color: var(--c-button-outlined-inverted-border-color, var(--_c-button-outlined-inverted-text-color));
  --_c-button-outlined-inverted-background-color: var(--c-button-outlined-inverted-background-color, var(--_c-button-outlined-background-color));
  --_c-outline-color: var(--_c-button-outlined-inverted-border-color);
  --_c-button-outline-color: var(--_c-button-outlined-inverted-border-color);
  background-color: var(--_c-button-outlined-inverted-background-color);
  color: var(--_c-button-outlined-inverted-text-color);
}

:host(.c-button--outlined.c-button--inverted:hover) {
  /**
   * @prop --c-button-outlined-background-color-hover: Outlined button hover background color
   */
  --_c-button-outlined-inverted-background-color-hover: var(--c-button-outlined-inverted-background-color-hover, rgba(var(--c-white-rgb), 0.3));
  background-color: var(--_c-button-outlined-inverted-background-color-hover);
}

:host(.c-button--outlined.c-button--inverted.c-button--disabled) {
  /**
   * @prop --c-button-outlined-inverted-disabled-background-color: Disabled inverted outlined button background color
   * @prop --c-button-outlined-inverted-disabled-border-color: Disabled inverted outlined button border color
   * @prop --c-button-outlined-inverted-disabled-text-color: Disabled inverted outlined button text color
   */
  --_c-button-outlined-inverted-disabled-border-color: var(--c-button-outlined-inverted-disabled-border-color, var(--c-tertiary-400));
  --_c-button-outlined-inverted-disabled-text-color: var(--c-button-outlined-inverted-disabled-text-color, var(--c-tertiary-400));
  --_c-button-outlined-inverted-disabled-background-color: var(--c-button-outlined-inverted-disabled-background-color, var(--_c-button-outlined-background-color));
  --_c-outline-color: var(--_c-button-outlined-inverted-disabled-border-color);
  background-color: var(--_c-button-outlined-inverted-disabled-background-color);
  color: var(--_c-button-outlined-inverted-disabled-text-color);
}

:host(.c-button--disabled) {
  /**
  * @prop --c-button-disabled-background-color: Disabled button background color
  * @prop --c-button-disabled-text-color: Disabled button text color
  */
  --_c-button-disabled-background-color: var(--c-button-disabled-background-color, var(--c-tertiary-100));
  --_c-button-disabled-text-color: var(--c-button-disabled-text-color, var(--c-tertiary-600));
  --_c-button-loader-color: var(--_c-button-disabled-text-color);
  background-color: var(--_c-button-disabled-background-color);
  color: var(--_c-button-disabled-text-color);
  pointer-events: none;
}

:host(.c-button:focus) {
  z-index: 2;
}

:host(.c-button) a:focus,
:host(.c-button) button:focus {
  outline: none;
}

:host(.c-button) a:focus-visible,
:host(.c-button) button:focus-visible {
  outline: 2px var(--_c-button-outline-color) solid;
  outline-offset: var(--_c-button-outline-offset);
  z-index: 1;
}

:host(.c-button--fit) {
  width: 100%;
}

:host(.c-button--small) {
  --_c-button-height: 28px;
}

:host(.c-button--large) {
  --_c-button-height: 52px;
}

:host(.c-button--fitted) {
  width: 100%;
}

::slotted([slot=icon]) {
  font-size: var(--_c-button-icon-size);
}

::slotted(svg) {
  fill: var(--_c-button-loader-color);
}

a {
  text-decoration: none;
}

button,
a {
  background-color: transparent;
  border-radius: var(--_c-button-border-radius);
  color: currentColor;
  font-family: var(--c-font-family);
  display: inline-grid;
  place-items: center;
  border: none;
  padding: 0;
  position: relative;
  margin: 0;
  width: 100%;
  cursor: pointer;
  transition: background-color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1), color 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
}
button:disabled,
a:disabled {
  cursor: default;
}

@media (max-width: 767px) {
  .full-width-mobile {
    max-width: 100% !important;
    width: 100% !important;
    margin: 0 !important;
  }
  .full-width-mobile .c-button-padding {
    padding: 24px 38px;
  }
  .full-width {
    flex-grow: 1 !important;
  }
}
.c-button__content {
  border-radius: var(--_c-button-border-radius);
  position: relative;
  box-shadow: none;
  outline: none;
  backface-visibility: hidden;
  transform: translate3d(0, 0, 0);
  transition: background-color 0.3s;
  color: currentColor;
  margin: 0;
  text-decoration: none;
  display: flex;
  text-align: center;
  font-size: var(--_c-button-font-size);
  font-weight: 700;
  line-height: 18px;
  user-select: none;
  min-width: var(--_c-button-min-width);
  white-space: nowrap;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
}
.c-button__content * {
  pointer-events: none;
}
.c-button__content svg {
  fill: var(--_c-button-loader-color);
  height: var(--_c-button-icon-size);
  width: var(--_c-button-icon-size);
}
.c-button__content svg.icon-by-path {
  margin-right: 8px;
}
.c-button__content svg.button-icon {
  margin-right: 16px;
  font-size: 10px;
  margin-left: -8px;
  margin-bottom: -2px;
}
.c-button__content--small {
  --_c-button-padding: 0 12px;
  --_c-button-font-size: 14px;
  --_c-button-icon-size: 20px;
}
.c-button__content--large {
  --_c-button-padding: 0 24px;
  --_c-button-font-size: 18px;
}
.c-button__content--no-radius {
  --_c-button-border-radius: 0;
}
.c-button__content--fitted {
  width: 100%;
}
.c-button__content--description {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0;
}
.c-button__content__inner {
  display: flex;
  gap: 8px;
  height: var(--_c-button-height);
  align-items: center;
  justify-content: center;
  padding: var(--_c-button-padding);
}
.c-button__content__description {
  font-weight: 400;
  font-size: 12px;
  padding: 0 12px 12px;
}
.c-button__content__description--loading {
  opacity: 0.8;
}

.hide-text {
  color: transparent !important;
}
.hide-text ::slotted([slot=icon]) {
  opacity: 0;
}
.hide-text svg {
  fill: transparent !important;
}
.hide-text .outlined.c-button svg {
  fill: transparent !important;
}

.c-button__loader {
  width: 100%;
  position: absolute;
  height: var(--_c-button-height);
  display: grid;
  place-content: center;
}
.c-button__loader.dense_spinner {
  padding-top: 7px;
}