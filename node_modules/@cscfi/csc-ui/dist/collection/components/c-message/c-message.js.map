{"version":3,"file":"c-message.js","sourceRoot":"","sources":["../../../../src/components/c-message/c-message.tsx"],"names":[],"mappings":"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","sourcesContent":["import { mdiCloseCircle } from '@mdi/js';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-message',\n  styleUrl: 'c-message.scss',\n  shadow: true,\n})\nexport class CMessage {\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the related input element\n   */\n  @Prop() inputId: string;\n\n  /**\n   * Parent valid√≠ty\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  @State() messageOptions = {\n    show: true,\n    type: 'hint',\n    content: '',\n  };\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    // if (this.validateOnBlur && !this._hasBlurred) return;\n\n    this._handleValidation(valid);\n  }\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    if (this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Error: </span>\n          {this._validationIcon} {message}\n        </span>\n      ),\n    };\n  }\n\n  @Watch('hint')\n  onHintMessageChange(message: string) {\n    if (!this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Hint: </span>\n          {message}\n        </span>\n      ),\n    };\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    this.messageOptions = {\n      ...this.messageOptions,\n      show: false,\n    };\n\n    setTimeout(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span id={`hint-${this.inputId}`}>\n            <span class=\"visuallyhidden\">Hint: </span>\n            {this.hint}\n          </span>\n        ) : (\n          <span id={`error-${this.inputId}`}>\n            {this._validationIcon}\n            <span class=\"visuallyhidden\">Error: </span>\n            {this.validation}\n          </span>\n        ),\n      };\n    }, timeout);\n  }\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  componentDidLoad() {\n    this._handleValidation(this.valid, 0);\n  }\n\n  render() {\n    const classes = {\n      'c-message': true,\n      'c-message--active': this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-message-item': true,\n      [`c-message-item--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <Host>\n        <div class={classes}>\n          <div class={messageClasses}>{this.messageOptions.content}</div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}