{"version":3,"file":"c-card.js","sourceRoot":"","sources":["../../../../src/components/c-card/c-card.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAC3D,OAAO,EACL,SAAS,EACT,OAAO,EACP,IAAI,EACJ,CAAC,EACD,IAAI,EACJ,KAAK,EACL,MAAM,GACP,MAAM,eAAe,CAAC;AAYvB,MAAM,OAAO,KAAK;;sBAIK,KAAK;wBAEF,KAAK;;EAIrB,iBAAiB;IACvB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;EACzC,CAAC;EAEO,aAAa;;IACnB,IAAI,QAAQ,CAAC,iBAAiB,EAAE;MAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;MAEtB,OAAO;KACR;IAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE9B,MAAM,YAAY,GAChB,MAAA,MAAA,IAAI,CAAC,IAAI,CAAC,aAAa,0CAAE,UAAU,0CAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAEvE,IAAI,YAAY,EAAE;MACf,YAA+B,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY;QAChE,CAAC,CAAC,OAAO;QACT,CAAC,CAAC,MAAM,CAAC;KACZ;EACH,CAAC;EAED,gBAAgB;IACd,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAEtD,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;MAC9B,KAAK,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC;KAClC;IAED,IAAI,CAAC,IAAI,CAAC,gBAAgB,CACxB,kBAAkB,EAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;EACJ,CAAC;EAED,oBAAoB;IAClB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAC3B,kBAAkB,EAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;EACJ,CAAC;EAMD,KAAK,CAAC,cAAc;;IAClB,IAAI,CAAC,QAAQ,CAAC,iBAAiB;MAAE,OAAO;IAExC,QAAQ,CAAC,cAAc,EAAE,CAAC;IAE1B,MAAM,YAAY,GAChB,MAAA,MAAA,IAAI,CAAC,IAAI,CAAC,aAAa,0CAAE,UAAU,0CAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAEvE,IAAI,YAAY,EAAE;MACf,YAA+B,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;KACzD;EACH,CAAC;EAMD,KAAK,CAAC,eAAe;IACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM;IACJ,MAAM,WAAW,GAAG;MAClB,QAAQ,EAAE,IAAI;MACd,oBAAoB,EAAE,IAAI,CAAC,YAAY;KACxC,CAAC;IAEF,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,WAAW;MACtB;QACG,IAAI,CAAC,UAAU,IAAI,CAClB,oCACc,MAAM,EAClB,KAAK,EAAC,2BAA2B,EACjC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAkB,EACjE,IAAI,QACJ,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;UAEnC,cACE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,aAAa,GAC3D,CACY,CACjB;QACD,eAAa,CACL,CACL,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { mdiFullscreen, mdiFullscreenExit } from '@mdi/js';\nimport {\n  Component,\n  Element,\n  Host,\n  h,\n  Prop,\n  State,\n  Method,\n} from '@stencil/core';\n\n/**\n * @group Cards\n * @slot Default slot - Card components\n */\n@Component({\n  tag: 'c-card',\n  styleUrl: 'c-card.scss',\n  shadow: true,\n  assetsDirs: ['assets'],\n})\nexport class CCard {\n  /**\n   * Enable the fullscreen toggle button\n   */\n  @Prop() fullscreen = false;\n\n  @State() isFullscreen = false;\n\n  @Element() host: HTMLCCardElement;\n\n  private _toggleFullscreen() {\n    this.isFullscreen = !this.isFullscreen;\n  }\n\n  private _onFullscreen() {\n    if (document.fullscreenElement) {\n      this.exitFullscreen();\n\n      return;\n    }\n\n    this.host.requestFullscreen();\n\n    const modalWrapper =\n      this.host.parentElement?.shadowRoot?.querySelector('.modal-wrapper');\n\n    if (modalWrapper) {\n      (modalWrapper as HTMLDivElement).style.display = this.isFullscreen\n        ? 'block'\n        : 'flex';\n    }\n  }\n\n  componentDidLoad() {\n    const title = this.host.querySelector('c-card-title');\n\n    if (!!title && this.fullscreen) {\n      title.style.marginRight = '40px';\n    }\n\n    this.host.addEventListener(\n      'fullscreenchange',\n      this._toggleFullscreen.bind(this),\n    );\n  }\n\n  disconnectedCallback() {\n    this.host.removeEventListener(\n      'fullscreenchange',\n      this._toggleFullscreen.bind(this),\n    );\n  }\n\n  /**\n   * Exit fullscreen from the outside\n   */\n  @Method()\n  async exitFullscreen() {\n    if (!document.fullscreenElement) return;\n\n    document.exitFullscreen();\n\n    const modalWrapper =\n      this.host.parentElement?.shadowRoot?.querySelector('.modal-wrapper');\n\n    if (modalWrapper) {\n      (modalWrapper as HTMLDivElement).style.display = 'flex';\n    }\n  }\n\n  /**\n   * Enter fullscreen from the outside\n   */\n  @Method()\n  async enterFullscreen() {\n    this.isFullscreen = true;\n  }\n\n  render() {\n    const hostClasses = {\n      'c-card': true,\n      'c-card--fullscreen': this.isFullscreen,\n    };\n\n    return (\n      <Host class={hostClasses}>\n        <article>\n          {this.fullscreen && (\n            <c-icon-button\n              aria-hidden=\"true\"\n              class=\"c-card__fullscreen-toggle\"\n              title={this.isFullscreen ? 'Exit fullscreen' : 'Enter fullscreen'}\n              text\n              onClick={() => this._onFullscreen()}\n            >\n              <c-icon\n                path={this.isFullscreen ? mdiFullscreenExit : mdiFullscreen}\n              />\n            </c-icon-button>\n          )}\n          <slot></slot>\n        </article>\n      </Host>\n    );\n  }\n}\n"]}