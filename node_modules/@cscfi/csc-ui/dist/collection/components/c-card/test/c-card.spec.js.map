{"version":3,"file":"c-card.spec.js","sourceRoot":"","sources":["../../../../../src/components/c-card/test/c-card.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { CCard } from '../c-card';\nimport { CCardActions } from '../../c-card-actions/c-card-actions';\nimport { CCardContent } from '../../c-card-content/c-card-content';\nimport { CCardTitle } from '../../c-card-title/c-card-title';\n\ndescribe('c-card', () => {\n  const title = 'Quis porro id?';\n  const content = `Lorem ipsum dolor sit amet consectetur adipisicing elit. Libero, harum pariatur deserunt\n  obcaecati maiores cupiditate magnam! Minima omnis libero sequi consectetur nesciunt. Facilis\n  maxime ratione molestiae expedita quis porro id?`;\n  it('renders default html', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `\n      <c-card></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders c-card-title', async () => {\n    const page = await newSpecPage({\n      components: [CCard, CCardTitle],\n      html: `\n      <c-card>\n        <c-card-title>${title}</c-card-title>\n      </c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders c-card-content', async () => {\n    const page = await newSpecPage({\n      components: [CCard, CCardContent],\n      html: `\n      <c-card>\n        <c-card-content>${content}</c-card-content>\n      </c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders c-card-actions', async () => {\n    const page = await newSpecPage({\n      components: [CCard, CCardActions],\n      html: `\n      <c-card>\n        <c-card-actions></c-card-actions>\n      </c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders title, content and actions', async () => {\n    const page = await newSpecPage({\n      components: [CCard, CCardTitle, CCardContent, CCardActions],\n      html: `\n      <c-card>\n        <c-card-title>${title}</c-card-title>\n        <c-card-content>${content}</c-card-content>\n        <c-card-actions></c-card-actions>\n      </c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders c-card-actions, custom alignment: end', async () => {\n    const page = await newSpecPage({\n      components: [CCard, CCardActions],\n      html: `\n      <c-card>\n        <c-card-actions align=\"end\"></c-card-actions>\n      </c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders c-card-actions, custom justification: space-between', async () => {\n    const page = await newSpecPage({\n      components: [CCard, CCardActions],\n      html: `\n      <c-card>\n        <c-card-actions justify=\"space-between\"></c-card-actions>\n      </c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render custom background-color', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card background-color=\"red\"></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render chosen background-photo, called allas', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card background=\"allas\"></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render another chosen background-photo, called mahti', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card background=\"mahti\"></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('render custom background-photo', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card background=\"dog\"></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('with fullscreen button', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card fullscreen={true}></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('opens fullscreen when button pressed', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card fullscreen={true}></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n\n    const iconbutton = page.root.shadowRoot.querySelector(\n      '.c-card__fullscreen-toggle',\n    ) as HTMLElement;\n\n    iconbutton.click();\n\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('shrinks back to normal when button pressed in fullscreen-mode', async () => {\n    const page = await newSpecPage({\n      components: [CCard],\n      html: `<c-card fullscreen={true}></c-card>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n\n    const iconbutton = page.root.shadowRoot.querySelector(\n      '.c-card__fullscreen-toggle',\n    ) as HTMLElement;\n\n    iconbutton.click();\n\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n\n    iconbutton.click();\n\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}