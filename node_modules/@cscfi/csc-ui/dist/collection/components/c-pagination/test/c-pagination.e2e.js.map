{"version":3,"file":"c-pagination.e2e.js","sourceRoot":"","sources":["../../../../../src/components/c-pagination/test/c-pagination.e2e.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAGnD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;EAC5B,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;IACjC,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC;MAC5B,IAAI,EAAE,+BAA+B;KACtC,CAAC,CAAC;IAEH,MAAM,OAAO,GAAuB;MAClC,SAAS,EAAE,GAAG;MACd,WAAW,EAAE,CAAC;MACd,YAAY,EAAE,EAAE;KACjB,CAAC;IAEF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnD,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAEzC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,IAAI,iBAAiB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IACrE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEzC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC;IAExB,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,iBAAiB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IACjE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEzC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC;IAC3B,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,iBAAiB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IACjE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;IACrC,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC;MAC5B,IAAI,EAAE,+BAA+B;KACtC,CAAC,CAAC;IAEH,MAAM,OAAO,GAAuB;MAClC,SAAS,EAAE,GAAG;MACd,WAAW,EAAE,CAAC;MACd,YAAY,EAAE,EAAE;KACjB,CAAC;IAEF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnD,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAEzC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IACvE,MAAM,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAEnC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAC3B,mDAAmD,CACpD,CAAC;IAEF,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;EAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { CPaginationOptions } from '../../../types';\n\ndescribe('c-pagination', () => {\n  it('renders correctly', async () => {\n    const page = await newE2EPage({\n      html: `<c-pagination></c-pagination>`,\n    });\n\n    const options: CPaginationOptions = {\n      itemCount: 100,\n      currentPage: 1,\n      itemsPerPage: 25,\n    };\n\n    const pagination = await page.find('c-pagination');\n    pagination.setProperty('value', options);\n\n    await page.waitForChanges();\n\n    let paginationButtons = await page.findAll('c-pagination >>> ul li');\n    expect(paginationButtons.length).toBe(6);\n\n    options.itemCount = 200;\n\n    pagination.setProperty('value', options);\n    await page.waitForChanges();\n\n    paginationButtons = await page.findAll('c-pagination >>> ul li');\n    expect(paginationButtons.length).toBe(9);\n\n    options.itemsPerPage = 100;\n    pagination.setProperty('value', options);\n    await page.waitForChanges();\n\n    paginationButtons = await page.findAll('c-pagination >>> ul li');\n    expect(paginationButtons.length).toBe(4);\n  });\n\n  it('reacts to page change', async () => {\n    const page = await newE2EPage({\n      html: `<c-pagination></c-pagination>`,\n    });\n\n    const options: CPaginationOptions = {\n      itemCount: 100,\n      currentPage: 1,\n      itemsPerPage: 25,\n    };\n\n    const pagination = await page.find('c-pagination');\n    pagination.setProperty('value', options);\n\n    await page.waitForChanges();\n\n    const paginationButtons = await page.findAll('c-pagination >>> ul li');\n    await paginationButtons[4].click();\n\n    await page.waitForChanges();\n\n    const range = await page.find(\n      'c-pagination >>> div.c-pagination__details > span',\n    );\n\n    expect(range.innerText).toContain('76 - 100 of 100 items');\n  });\n});\n"]}