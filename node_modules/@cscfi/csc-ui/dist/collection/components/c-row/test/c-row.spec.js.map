{"version":3,"file":"c-row.spec.js","sourceRoot":"","sources":["../../../../../src/components/c-row/test/c-row.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { CRow } from '../c-row';\n\ndescribe('c-row', () => {\n  it('renders default html', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row>\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders alignment:center', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"center\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders alignment:end', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"end\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders alignment:start', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"start\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders custom gap', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"center\" gap=\"5\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders justification:center', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"center\" gap=\"5\" justify=\"center\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders justification:end', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"end\" gap=\"5\" justify=\"end\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders justification:space-around', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"center\" gap=\"5\" justify=\"space-around\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders justification:space-between', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"center\" gap=\"5\" justify=\"space-between\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders justification:start', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"start\" gap=\"3\" justify=\"start\">\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders disable flex wrapping', async () => {\n    const page = await newSpecPage({\n      components: [CRow],\n      html: `<c-row align=\"start\" gap=\"3\" justify=\"start\" nowrap=${true}>\n        <div slot> \n            <c-button>Button</c-button>\n            <c-button>Button</c-button>\n        </div>\n      </c-row>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}