import { Host, h, } from "@stencil/core";
export class CTabItems {
  constructor() {
    this._debounce = null;
    this._isAnimating = false;
    this._initialized = false;
    this.value = undefined;
    this.disableAnimation = false;
    this.activeTab = undefined;
  }
  onValueChange() {
    this._setActiveTab();
  }
  tabContentChangeHandler(e) {
    e.stopPropagation();
    this.el.style.setProperty('--_c-tab-items-height', 'auto');
  }
  get _tabs() {
    return Array.from(this.el.querySelectorAll('c-tab-item'));
  }
  _setActiveTab() {
    this._tabs.forEach((tab) => {
      if (tab.value === this.value) {
        this.activeTab = tab;
      }
      tab.classList.toggle('active', tab.value === this.value);
    });
    this.el.style.setProperty('--_c-tab-items-height', `${this.activeTab.scrollHeight}px`);
    requestAnimationFrame(() => {
      this.el.style.setProperty('--_c-tab-items-position-left', `${-1 * this.activeTab.offsetLeft}px`);
      if (!this.disableAnimation && !this._initialized) {
        this._initialized = true;
        setTimeout(() => {
          this.el.style.setProperty('--_c-tab-items-animation-duration', '300ms');
        }, 500);
      }
    });
  }
  _handleResize() {
    if (this._isAnimating || !this._initialized)
      return;
    if (this._debounce !== null) {
      clearTimeout(this._debounce);
      this._debounce = null;
    }
    this._debounce = setTimeout(() => {
      this._setActiveTab();
    }, 50);
  }
  componentWillLoad() {
    if (this.disableAnimation) {
      this.el.style.setProperty('--c-tab-items-animation-duration', '0ms');
    }
  }
  componentDidLoad() {
    this._resizeObserver = new ResizeObserver(() => {
      this._handleResize();
    });
    this._resizeObserver.observe(this.el);
  }
  render() {
    return (h(Host, null, h("div", null, h("slot", null))));
  }
  static get is() { return "c-tab-items"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["c-tab-items.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["c-tab-items.css"]
    };
  }
  static get properties() {
    return {
      "value": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "number | string",
          "resolved": "number | string",
          "references": {}
        },
        "required": true,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Currently active tab"
        },
        "attribute": "value",
        "reflect": false
      },
      "disableAnimation": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "private",
              "text": undefined
            }],
          "text": "Disable animation"
        },
        "attribute": "disable-animation",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get states() {
    return {
      "activeTab": {}
    };
  }
  static get elementRef() { return "el"; }
  static get watchers() {
    return [{
        "propName": "value",
        "methodName": "onValueChange"
      }];
  }
  static get listeners() {
    return [{
        "name": "contentChange",
        "method": "tabContentChangeHandler",
        "target": undefined,
        "capture": false,
        "passive": true
      }];
  }
}
//# sourceMappingURL=c-tab-items.js.map
