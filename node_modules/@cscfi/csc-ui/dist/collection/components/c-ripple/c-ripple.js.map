{"version":3,"file":"c-ripple.js","sourceRoot":"","sources":["../../../../src/components/c-ripple/c-ripple.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Method, h } from '@stencil/core';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-ripple',\n  styleUrl: 'c-ripple.scss',\n  shadow: true,\n})\nexport class CRipple {\n  @Element() el: HTMLCRippleElement;\n\n  private _rippleElement: HTMLDivElement;\n\n  /**\n   * Creates a ripple\n   */\n  @Method()\n  async createRipple(event: MouseEvent, parent: HTMLElement, center = false) {\n    // clear animation on repeat clicks\n    this._rippleElement.classList.remove('animate');\n\n    const width = parent.offsetWidth;\n    const height = parent.offsetHeight;\n    const rect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const maxDimension = this._calculateHeight(\n      Math.max(parent.offsetWidth, parent.offsetHeight),\n    );\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    const top = y - maxDimension / 2 + 'px';\n    const left = x - maxDimension / 2 + 'px';\n\n    const centerPosition = {\n      top:\n        maxDimension === height\n          ? '0px'\n          : ((maxDimension - height) / 2) * -1 + 'px',\n      left:\n        maxDimension === width\n          ? '0px'\n          : ((maxDimension - width) / 2) * -1 + 'px',\n    };\n\n    this.el.style.width = width + 'px';\n    this.el.style.height = height + 'px';\n\n    this._rippleElement.style.width = maxDimension + 'px';\n    this._rippleElement.style.height = maxDimension + 'px';\n\n    this._rippleElement.style.top = center ? centerPosition.top : top;\n    this._rippleElement.style.left = center ? centerPosition.left : left;\n\n    this._rippleElement.classList.add('animate');\n\n    setTimeout(() => {\n      this._rippleElement.classList.remove('animate');\n    }, 500);\n  }\n\n  private _calculateHeight(height: number) {\n    const radius = (height / 2) * Math.sqrt(2);\n\n    return radius * 2;\n  }\n\n  render() {\n    return (\n      <Host aria-hidden=\"true\">\n        <div ref={(el) => (this._rippleElement = el)} class=\"c-ripple\" />\n      </Host>\n    );\n  }\n}\n"]}