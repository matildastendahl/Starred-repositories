import { mdiClose } from "@mdi/js";
import { Host, h } from "@stencil/core";
export class CTag {
  constructor() {
    this.active = false;
    this.block = false;
    this.fit = false;
    this.flat = false;
    this.closeable = false;
    this.badge = null;
    this.size = 'default';
  }
  _onClose() {
    this.close.emit();
  }
  render() {
    const hasBadge = !!this.badge || this.badge === 0;
    const hostClasses = {
      'c-tag': true,
      'c-tag--closeable': this.closeable,
      'c-tag--badge': hasBadge,
      'c-tag--active': this.active,
      'c-tag--block': this.block,
      'c-tag--fit': this.fit,
      'c-tag--flat': this.flat,
      'c-tag--small': this.size === 'small',
    };
    const hostParams = Object.assign(Object.assign({ tabindex: this.flat ? -1 : 0 }, (!this.flat && {
      role: 'button',
    })), (hasBadge ? { 'data-badge': this.badge } : {}));
    return (h(Host, Object.assign({}, hostParams, { class: hostClasses }), h("slot", null), this.closeable && (h("c-icon-button", { onClick: () => this._onClose() }, h("c-icon", { size: 16, path: mdiClose })))));
  }
  static get is() { return "c-tag"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["c-tag.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["c-tag.css"]
    };
  }
  static get properties() {
    return {
      "active": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Mark tag as active"
        },
        "attribute": "active",
        "reflect": false,
        "defaultValue": "false"
      },
      "block": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Stretch to fill the container row"
        },
        "attribute": "block",
        "reflect": false,
        "defaultValue": "false"
      },
      "fit": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Stretch to fill the container"
        },
        "attribute": "fit",
        "reflect": false,
        "defaultValue": "false"
      },
      "flat": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Remove the hover effect"
        },
        "attribute": "flat",
        "reflect": false,
        "defaultValue": "false"
      },
      "closeable": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Mark tag as closeable"
        },
        "attribute": "closeable",
        "reflect": false,
        "defaultValue": "false"
      },
      "badge": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "string | number",
          "resolved": "number | string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Display an optional badge at the start of the tag"
        },
        "attribute": "badge",
        "reflect": false,
        "defaultValue": "null"
      },
      "size": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'default' | 'small'",
          "resolved": "\"default\" | \"small\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Size of the tag"
        },
        "attribute": "size",
        "reflect": false,
        "defaultValue": "'default'"
      }
    };
  }
  static get events() {
    return [{
        "method": "close",
        "name": "close",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "Emit close event on close icon click"
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }];
  }
}
//# sourceMappingURL=c-tag.js.map
