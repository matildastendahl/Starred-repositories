{"file":"c-tab-item.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,WAAW,GAAG,0eAA0e;;MCmBjf,QAAQ;;;;;kBAUF,KAAK;;EAWtB,gBAAgB;IACd,IAAI,CAAC,eAAe,GAAG,IAAI,cAAc,CAAC;MACxC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB,CAAC,CAAC;IAEH,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;GACvE;EAED,oBAAoB;IAClB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;GACnC;EAEO,aAAa;IACnB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;GAC3B;EAED,MAAM;IACJ,MAAM,UAAU,GAAG;MACjB,IAAI,EAAE,UAAU;KACjB,CAAC;IAEF,QACEA,QAACC,UAAI,oBAAK,UAAU,GAClBD,iBAAK,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IACjCA,qBAAa,CACT,CACD,EACP;GACH;;;;;;;","names":["h","Host"],"sources":["src/components/c-tab-item/c-tab-item.scss?tag=c-tab-item&encapsulation=shadow","src/components/c-tab-item/c-tab-item.tsx"],"sourcesContent":[":host {\n  /**\n   * @prop --c-tab-item-padding: Tab item padding\n   */\n  --_c-tab-item-padding: var(--c-tab-item-padding, 16px 0 0 0);\n\n  display: block;\n  min-width: 100%;\n  padding: var(--_c-tab-item-padding);\n  height: 0;\n  user-select: none;\n}\n\n:host([active=\"true\"]) {\n  height: auto;\n  user-select: auto;\n}\n\n:host([active=\"false\"]) > div {\n  display: none;\n}\n\n:host([disabled=\"true\"]) {\n  min-width: 0;\n  width: 0;\n  overflow: hidden;\n}\n","import {\n  Component,\n  Element,\n  Host,\n  h,\n  Prop,\n  EventEmitter,\n  Event,\n} from '@stencil/core';\n\n/**\n * @parent c-tabs\n * @slot Default slot - Default slot\n */\n@Component({\n  tag: 'c-tab-item',\n  styleUrl: 'c-tab-item.scss',\n  shadow: true,\n})\nexport class CTabItem {\n  /**\n   * Tab value\n   */\n  @Prop() value!: number | string;\n\n  /**\n   * Active\n   * @private\n   */\n  @Prop() active = false;\n\n  /**\n   * Emit changes to the parent\n   */\n  @Event() contentChange: EventEmitter;\n\n  @Element() el: HTMLCTabItemElement;\n\n  private _resizeObserver: ResizeObserver;\n\n  componentDidLoad() {\n    this._resizeObserver = new ResizeObserver(() => {\n      this._handleResize();\n    });\n\n    this._resizeObserver.observe(this.el.shadowRoot.querySelector('div'));\n  }\n\n  disconnectedCallback() {\n    this._resizeObserver.disconnect();\n  }\n\n  private _handleResize() {\n    this.contentChange.emit();\n  }\n\n  render() {\n    const attributes = {\n      role: 'tabpanel',\n    };\n\n    return (\n      <Host {...attributes}>\n        <div class={{ active: this.active }}>\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}