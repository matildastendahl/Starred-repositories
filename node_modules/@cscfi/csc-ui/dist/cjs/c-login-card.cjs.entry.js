'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-91ba22ab.js');

const cLoginCardCss = "html{box-sizing:border-box}body{margin:0}*,*:before,*:after{box-sizing:inherit;-webkit-tap-highlight-color:transparent}:host{font-family:var(--c-font-family)}::-ms-reveal{display:none}:root{--_c-login-card-background-color:var(\n    --c-login-card-background-color,\n    var(--c-white)\n  );--_c-login-card-overlay-color:var(\n    --c-login-card-overlay-color,\n    var(--c-primary-600)\n  )}c-login-card{display:flex;background:var(--_c-login-card-background-color);border-radius:6px}c-login-card article{width:100%}.c-login-card{border-radius:6px;box-shadow:rgba(0, 0, 0, 0.15) 0 10px 20px, rgba(0, 0, 0, 0.2) 0 5px 5px;display:flex;position:relative;width:100%}.c-login-card__image{background-size:cover;border-radius:6px;clip-path:url(\"#cLoginClipPath\");height:100%;left:0;overflow:hidden;position:absolute;top:0;width:100%}.c-login-card__image--overlay{background-color:var(--_c-login-card-overlay-color);background-blend-mode:var(--_c-login-card-overlay-mode)}.c-login-card__content{display:flex;flex-direction:column;gap:24px;padding:72px;margin-bottom:32px;max-width:80%;width:100%}.c-login-card__content--no-image{max-width:100%;margin-bottom:0}.c-login-card--mobile c-login-card-title{font-size:32px;hyphens:auto}.c-login-card--mobile .c-login-card__content{max-width:100%;padding:40px}.c-login-card--mobile .c-login-card__image{border-radius:0 0 6px 6px;bottom:0;top:auto;width:100%}";

const CLoginCard = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this._paths = {
      desktop: 'm0.234,0.914 c0.132,-0.026,0.286,-0.05,0.436,-0.163 c0.083,-0.063,0.152,-0.145,0.21,-0.329 c0.055,-0.172,0.072,-0.421,0.072,-0.421 h0.048 v1 h-1 v-0.057 c0,0,0.145,-0.012,0.234,-0.029',
      mobile: 'm1,1 h-1 v-0.213 c0,0,0.209,-0.046,0.337,-0.109 c0.191,-0.096,0.413,-0.183,0.629,-0.608 c0.028,-0.055,0.034,-0.069,0.034,-0.069',
    };
    this.backgroundPosition = 'bottom right';
    this.mobileBreakpoint = 600;
    this.overlay = false;
    this.overlayBlendMode = 'multiply';
    this.src = '';
    this.path = '';
    this.imageHeight = '100%';
  }
  componentWillLoad() {
    this._observer = new ResizeObserver(([entry]) => {
      const { width } = entry.contentRect;
      this._handleResize(width);
    });
  }
  componentDidLoad() {
    this._observer.observe(this._cardElement);
  }
  disconnectedCallback() {
    this._observer.disconnect();
  }
  _handleResize(width) {
    const isMobile = width <= this.mobileBreakpoint;
    const mode = isMobile ? 'mobile' : 'desktop';
    this.imageHeight = isMobile ? `${width * 0.3}px` : '100%';
    this.path = this._paths[mode];
    this._cardElement.classList.toggle('c-login-card--mobile', isMobile);
  }
  render() {
    const style = {
      backgroundImage: `url(${this.src})`,
      backgroundPosition: this.backgroundPosition,
      height: this.imageHeight,
      '--_c-login-card-overlay-mode': !!this.overlay && this.overlayBlendMode,
    };
    const imageClasses = {
      'c-login-card__image': true,
      'c-login-card__image--overlay': !!this.overlay,
    };
    const contentClasses = {
      'c-login-card__content': true,
      'c-login-card__content--no-image': !this.src,
    };
    return (index.h("article", null, !!this.src && (index.h("svg", { width: "0", height: "0" }, index.h("defs", null, index.h("clipPath", { id: "cLoginClipPath", clipPathUnits: "objectBoundingBox" }, index.h("path", { d: this.path }))))), index.h("div", { class: "c-login-card", ref: (el) => (this._cardElement = el) }, !!this.src && index.h("div", { class: imageClasses, style: style }), index.h("div", { class: contentClasses }, index.h("slot", null)))));
  }
  get element() { return index.getElement(this); }
};
CLoginCard.style = cLoginCardCss;

exports.c_login_card = CLoginCard;

//# sourceMappingURL=c-login-card.cjs.entry.js.map